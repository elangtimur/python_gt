%PDF-1.3
% ReportLab Generated PDF document http://www.reportlab.com
% 'BasicFonts': class PDFDictionary 
1 0 obj
% The standard fonts dictionary
<< /F1 2 0 R
 /F2 3 0 R
 /F3 4 0 R
 /F4 6 0 R
 /F5 9 0 R
 /F6 12 0 R
 /F7 13 0 R
 /F8 27 0 R >>
endobj
% 'F1': class PDFType1Font 
2 0 obj
% Font Helvetica
<< /BaseFont /Helvetica
 /Encoding /WinAnsiEncoding
 /Name /F1
 /Subtype /Type1
 /Type /Font >>
endobj
% 'F2': class PDFType1Font 
3 0 obj
% Font Times-Roman
<< /BaseFont /Times-Roman
 /Encoding /WinAnsiEncoding
 /Name /F2
 /Subtype /Type1
 /Type /Font >>
endobj
% 'F3': class PDFType1Font 
4 0 obj
% Font Helvetica-Bold
<< /BaseFont /Helvetica-Bold
 /Encoding /WinAnsiEncoding
 /Name /F3
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER1': class PDFDictionary 
5 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.python.org/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 241.9489
 470.1927
 321.5409
 482.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'F4': class PDFType1Font 
6 0 obj
% Font Helvetica-Oblique
<< /BaseFont /Helvetica-Oblique
 /Encoding /WinAnsiEncoding
 /Name /F4
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Page1': class PDFPage 
7 0 obj
% Page dictionary
<< /Annots [ 5 0 R ]
 /Contents 273 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page2': class PDFPage 
8 0 obj
% Page dictionary
<< /Contents 274 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'F5': class PDFType1Font 
9 0 obj
% Font Courier
<< /BaseFont /Courier
 /Encoding /WinAnsiEncoding
 /Name /F5
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Page3': class PDFPage 
10 0 obj
% Page dictionary
<< /Contents 275 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page4': class PDFPage 
11 0 obj
% Page dictionary
<< /Contents 276 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'F6': class PDFType1Font 
12 0 obj
% Font Courier-Bold
<< /BaseFont /Courier-Bold
 /Encoding /WinAnsiEncoding
 /Name /F6
 /Subtype /Type1
 /Type /Font >>
endobj
% 'F7': class PDFType1Font 
13 0 obj
% Font Courier-Oblique
<< /BaseFont /Courier-Oblique
 /Encoding /WinAnsiEncoding
 /Name /F7
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER2': class LinkAnnotation 
14 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 142 0 R
 /XYZ
 76.4315
 511.3927
 0 ]
 /Rect [ 225.8616
 166.9927
 229.1976
 178.9927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page5': class PDFPage 
15 0 obj
% Page dictionary
<< /Annots [ 14 0 R ]
 /Contents 277 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page6': class PDFPage 
16 0 obj
% Page dictionary
<< /Contents 278 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER3': class LinkAnnotation 
17 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 139 0 R
 /XYZ
 395.0315
 197.1927
 0 ]
 /Rect [ 76.4315
 215.9927
 80.8795
 227.9927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page7': class PDFPage 
18 0 obj
% Page dictionary
<< /Annots [ 17 0 R ]
 /Contents 279 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page8': class PDFPage 
19 0 obj
% Page dictionary
<< /Contents 280 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page9': class PDFPage 
20 0 obj
% Page dictionary
<< /Contents 281 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page10': class PDFPage 
21 0 obj
% Page dictionary
<< /Contents 282 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page11': class PDFPage 
22 0 obj
% Page dictionary
<< /Contents 283 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page12': class PDFPage 
23 0 obj
% Page dictionary
<< /Contents 284 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page13': class PDFPage 
24 0 obj
% Page dictionary
<< /Contents 285 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page14': class PDFPage 
25 0 obj
% Page dictionary
<< /Contents 286 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page15': class PDFPage 
26 0 obj
% Page dictionary
<< /Contents 287 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'F8': class PDFType1Font 
27 0 obj
% Font Helvetica-BoldOblique
<< /BaseFont /Helvetica-BoldOblique
 /Encoding /WinAnsiEncoding
 /Name /F8
 /Subtype /Type1
 /Type /Font >>
endobj
% 'Annot.NUMBER4': class PDFDictionary 
28 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.unicode.org/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 343.6275
 248.5927
 427.2195
 260.5927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page16': class PDFPage 
29 0 obj
% Page dictionary
<< /Annots [ 28 0 R ]
 /Contents 288 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page17': class PDFPage 
30 0 obj
% Page dictionary
<< /Contents 289 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page18': class PDFPage 
31 0 obj
% Page dictionary
<< /Contents 290 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page19': class PDFPage 
32 0 obj
% Page dictionary
<< /Contents 291 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page20': class PDFPage 
33 0 obj
% Page dictionary
<< /Contents 292 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page21': class PDFPage 
34 0 obj
% Page dictionary
<< /Contents 293 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page22': class PDFPage 
35 0 obj
% Page dictionary
<< /Contents 294 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page23': class PDFPage 
36 0 obj
% Page dictionary
<< /Contents 295 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page24': class PDFPage 
37 0 obj
% Page dictionary
<< /Contents 296 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page25': class PDFPage 
38 0 obj
% Page dictionary
<< /Contents 297 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER5': class LinkAnnotation 
39 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 142 0 R
 /XYZ
 76.4315
 511.3927
 0 ]
 /Rect [ 275.2559
 590.1927
 278.5919
 602.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page26': class PDFPage 
40 0 obj
% Page dictionary
<< /Annots [ 39 0 R ]
 /Contents 298 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page27': class PDFPage 
41 0 obj
% Page dictionary
<< /Contents 299 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page28': class PDFPage 
42 0 obj
% Page dictionary
<< /Contents 300 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page29': class PDFPage 
43 0 obj
% Page dictionary
<< /Contents 301 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page30': class PDFPage 
44 0 obj
% Page dictionary
<< /Contents 302 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page31': class PDFPage 
45 0 obj
% Page dictionary
<< /Contents 303 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page32': class PDFPage 
46 0 obj
% Page dictionary
<< /Contents 304 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER6': class PDFDictionary 
47 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.python.org/dev/peps/pep-0008) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 115.1626
 519.3927
 138.4202
 531.3927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER7': class LinkAnnotation 
48 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 139 0 R
 /XYZ
 395.0315
 197.1927
 0 ]
 /Rect [ 76.4315
 256.3927
 80.8795
 268.3927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page33': class PDFPage 
49 0 obj
% Page dictionary
<< /Annots [ 47 0 R
 48 0 R ]
 /Contents 305 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page34': class PDFPage 
50 0 obj
% Page dictionary
<< /Contents 306 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page35': class PDFPage 
51 0 obj
% Page dictionary
<< /Contents 307 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page36': class PDFPage 
52 0 obj
% Page dictionary
<< /Contents 308 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page37': class PDFPage 
53 0 obj
% Page dictionary
<< /Contents 309 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page38': class PDFPage 
54 0 obj
% Page dictionary
<< /Contents 310 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page39': class PDFPage 
55 0 obj
% Page dictionary
<< /Contents 311 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page40': class PDFPage 
56 0 obj
% Page dictionary
<< /Contents 312 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page41': class PDFPage 
57 0 obj
% Page dictionary
<< /Contents 313 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page42': class PDFPage 
58 0 obj
% Page dictionary
<< /Contents 314 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page43': class PDFPage 
59 0 obj
% Page dictionary
<< /Contents 315 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page44': class PDFPage 
60 0 obj
% Page dictionary
<< /Contents 316 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page45': class PDFPage 
61 0 obj
% Page dictionary
<< /Contents 317 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page46': class PDFPage 
62 0 obj
% Page dictionary
<< /Contents 318 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER8': class LinkAnnotation 
63 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 142 0 R
 /XYZ
 76.4315
 511.3927
 0 ]
 /Rect [ 133.367
 509.3927
 136.703
 521.3927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER9': class LinkAnnotation 
64 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 139 0 R
 /XYZ
 395.0315
 197.1927
 0 ]
 /Rect [ 76.4315
 464.3927
 80.8795
 476.3927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page47': class PDFPage 
65 0 obj
% Page dictionary
<< /Annots [ 63 0 R
 64 0 R ]
 /Contents 319 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER10': class LinkAnnotation 
66 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 142 0 R
 /XYZ
 76.4315
 511.3927
 0 ]
 /Rect [ 190.9355
 156.1927
 194.2715
 168.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page48': class PDFPage 
67 0 obj
% Page dictionary
<< /Annots [ 66 0 R ]
 /Contents 320 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page49': class PDFPage 
68 0 obj
% Page dictionary
<< /Contents 321 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page50': class PDFPage 
69 0 obj
% Page dictionary
<< /Contents 322 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page51': class PDFPage 
70 0 obj
% Page dictionary
<< /Contents 323 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page52': class PDFPage 
71 0 obj
% Page dictionary
<< /Contents 324 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page53': class PDFPage 
72 0 obj
% Page dictionary
<< /Contents 325 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page54': class PDFPage 
73 0 obj
% Page dictionary
<< /Contents 326 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page55': class PDFPage 
74 0 obj
% Page dictionary
<< /Contents 327 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page56': class PDFPage 
75 0 obj
% Page dictionary
<< /Contents 328 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page57': class PDFPage 
76 0 obj
% Page dictionary
<< /Contents 329 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER11': class LinkAnnotation 
77 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 139 0 R
 /XYZ
 395.0315
 197.1927
 0 ]
 /Rect [ 76.4315
 373.9927
 80.8795
 385.9927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page58': class PDFPage 
78 0 obj
% Page dictionary
<< /Annots [ 77 0 R ]
 /Contents 330 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page59': class PDFPage 
79 0 obj
% Page dictionary
<< /Contents 331 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page60': class PDFPage 
80 0 obj
% Page dictionary
<< /Contents 332 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page61': class PDFPage 
81 0 obj
% Page dictionary
<< /Contents 333 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page62': class PDFPage 
82 0 obj
% Page dictionary
<< /Contents 334 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page63': class PDFPage 
83 0 obj
% Page dictionary
<< /Contents 335 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page64': class PDFPage 
84 0 obj
% Page dictionary
<< /Contents 336 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page65': class PDFPage 
85 0 obj
% Page dictionary
<< /Contents 337 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page66': class PDFPage 
86 0 obj
% Page dictionary
<< /Contents 338 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page67': class PDFPage 
87 0 obj
% Page dictionary
<< /Contents 339 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page68': class PDFPage 
88 0 obj
% Page dictionary
<< /Contents 340 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page69': class PDFPage 
89 0 obj
% Page dictionary
<< /Contents 341 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page70': class PDFPage 
90 0 obj
% Page dictionary
<< /Contents 342 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page71': class PDFPage 
91 0 obj
% Page dictionary
<< /Contents 343 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page72': class PDFPage 
92 0 obj
% Page dictionary
<< /Contents 344 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page73': class PDFPage 
93 0 obj
% Page dictionary
<< /Contents 345 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page74': class PDFPage 
94 0 obj
% Page dictionary
<< /Contents 346 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page75': class PDFPage 
95 0 obj
% Page dictionary
<< /Contents 347 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER12': class LinkAnnotation 
96 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 142 0 R
 /XYZ
 76.4315
 511.3927
 0 ]
 /Rect [ 419.6955
 293.3927
 423.0315
 305.3927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page76': class PDFPage 
97 0 obj
% Page dictionary
<< /Annots [ 96 0 R ]
 /Contents 348 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page77': class PDFPage 
98 0 obj
% Page dictionary
<< /Contents 349 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page78': class PDFPage 
99 0 obj
% Page dictionary
<< /Contents 350 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page79': class PDFPage 
100 0 obj
% Page dictionary
<< /Contents 351 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page80': class PDFPage 
101 0 obj
% Page dictionary
<< /Contents 352 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page81': class PDFPage 
102 0 obj
% Page dictionary
<< /Contents 353 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page82': class PDFPage 
103 0 obj
% Page dictionary
<< /Contents 354 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page83': class PDFPage 
104 0 obj
% Page dictionary
<< /Contents 355 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER13': class PDFDictionary 
105 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.python.org/download/releases/2.3/mro/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 328.5075
 210.9927
 428.6631
 222.9927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER14': class PDFDictionary 
106 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.python.org/download/releases/2.3/mro/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 70.4315
 198.9927
 149.5755
 210.9927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page84': class PDFPage 
107 0 obj
% Page dictionary
<< /Annots [ 105 0 R
 106 0 R ]
 /Contents 356 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page85': class PDFPage 
108 0 obj
% Page dictionary
<< /Contents 357 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page86': class PDFPage 
109 0 obj
% Page dictionary
<< /Contents 358 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page87': class PDFPage 
110 0 obj
% Page dictionary
<< /Contents 359 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page88': class PDFPage 
111 0 obj
% Page dictionary
<< /Contents 360 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page89': class PDFPage 
112 0 obj
% Page dictionary
<< /Contents 361 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER15': class LinkAnnotation 
113 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 139 0 R
 /XYZ
 395.0315
 197.1927
 0 ]
 /Rect [ 76.4315
 476.9218
 80.8795
 488.9218 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page90': class PDFPage 
114 0 obj
% Page dictionary
<< /Annots [ 113 0 R ]
 /Contents 362 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page91': class PDFPage 
115 0 obj
% Page dictionary
<< /Contents 363 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page92': class PDFPage 
116 0 obj
% Page dictionary
<< /Contents 364 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page93': class PDFPage 
117 0 obj
% Page dictionary
<< /Contents 365 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page94': class PDFPage 
118 0 obj
% Page dictionary
<< /Contents 366 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page95': class PDFPage 
119 0 obj
% Page dictionary
<< /Contents 367 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page96': class PDFPage 
120 0 obj
% Page dictionary
<< /Contents 368 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page97': class PDFPage 
121 0 obj
% Page dictionary
<< /Contents 369 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page98': class PDFPage 
122 0 obj
% Page dictionary
<< /Contents 370 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page99': class PDFPage 
123 0 obj
% Page dictionary
<< /Contents 371 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page100': class PDFPage 
124 0 obj
% Page dictionary
<< /Contents 372 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page101': class PDFPage 
125 0 obj
% Page dictionary
<< /Contents 373 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page102': class PDFPage 
126 0 obj
% Page dictionary
<< /Contents 374 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page103': class PDFPage 
127 0 obj
% Page dictionary
<< /Contents 375 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page104': class PDFPage 
128 0 obj
% Page dictionary
<< /Contents 376 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER16': class PDFDictionary 
129 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.python.org) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 96.4315
 456.1927
 173.7995
 468.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER17': class PDFDictionary 
130 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://docs.python.org) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 96.4315
 408.1927
 173.3675
 420.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER18': class PDFDictionary 
131 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://pypi.python.org) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 96.4315
 396.1927
 171.1435
 408.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER19': class PDFDictionary 
132 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://aspn.activestate.com/ASPN/Python/Cookbook/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 96.4315
 348.1927
 283.1915
 360.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER20': class PDFDictionary 
133 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (mailto:python-list@python.org) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 299.1843
 282.1927
 381.5603
 294.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER21': class PDFDictionary 
134 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.python.org/doc/faq/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 287.9455
 234.1927
 366.5355
 246.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Annot.NUMBER22': class PDFDictionary 
135 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://mail.python.org/pipermail/) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 193.9135
 210.1927
 305.5135
 222.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page105': class PDFPage 
136 0 obj
% Page dictionary
<< /Annots [ 129 0 R
 130 0 R
 131 0 R
 132 0 R
 133 0 R
 134 0 R
 135 0 R ]
 /Contents 377 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page106': class PDFPage 
137 0 obj
% Page dictionary
<< /Contents 378 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER23': class LinkAnnotation 
138 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 142 0 R
 /XYZ
 76.4315
 511.3927
 0 ]
 /Rect [ 395.0315
 184.1927
 398.3675
 196.1927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page107': class PDFPage 
139 0 obj
% Page dictionary
<< /Annots [ 138 0 R ]
 /Contents 379 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page108': class PDFPage 
140 0 obj
% Page dictionary
<< /Contents 380 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER24': class LinkAnnotation 
141 0 obj
<< /Border [ 0
 0
 0 ]
 /Contents ()
 /Dest [ 139 0 R
 /XYZ
 395.0315
 197.1927
 0 ]
 /Rect [ 76.4315
 498.3927
 80.8795
 510.3927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page109': class PDFPage 
142 0 obj
% Page dictionary
<< /Annots [ 141 0 R ]
 /Contents 381 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page110': class PDFPage 
143 0 obj
% Page dictionary
<< /Contents 382 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Annot.NUMBER25': class PDFDictionary 
144 0 obj
<< /A << /S /URI
 /Type /Action
 /URI (http://www.lahey.com/float.htm) >>
 /Border [ 0
 0
 0 ]
 /Rect [ 146.8255
 132.9927
 251.0495
 144.9927 ]
 /Subtype /Link
 /Type /Annot >>
endobj
% 'Page111': class PDFPage 
145 0 obj
% Page dictionary
<< /Annots [ 144 0 R ]
 /Contents 383 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page112': class PDFPage 
146 0 obj
% Page dictionary
<< /Contents 384 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page113': class PDFPage 
147 0 obj
% Page dictionary
<< /Contents 385 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'Page114': class PDFPage 
148 0 obj
% Page dictionary
<< /Contents 386 0 R
 /MediaBox [ 0
 0
 500.315
 708.6614 ]
 /Parent 272 0 R
 /Resources << /Font 1 0 R
 /ProcSet [ /PDF
 /Text
 /ImageB
 /ImageC
 /ImageI ] >>
 /Rotate 0
 /Trans <<  >>
 /Type /Page >>
endobj
% 'R149': class PDFCatalog 
149 0 obj
% Document Root
<< /Outlines 151 0 R
 /PageMode /UseNone
 /Pages 272 0 R
 /Type /Catalog >>
endobj
% 'R150': class PDFInfo 
150 0 obj
<< /Author ()
 /CreationDate (D:20090701162616+03'00')
 /Keywords ()
 /Producer (ReportLab http://www.reportlab.com)
 /Subject (\(unspecified\))
 /Title () >>
endobj
% 'R151': class PDFOutlines 
151 0 obj
<< /Count 144
 /First 152 0 R
 /Last 152 0 R
 /Type /Outlines >>
endobj
% 'Outline.0': class OutlineEntryObject 
152 0 obj
<< /Count 119
 /Dest [ 7 0 R
 /Fit ]
 /First 153 0 R
 /Last 270 0 R
 /Parent 151 0 R
 /Title (The Python tutorial) >>
endobj
% 'Outline.121.0': class OutlineEntryObject 
153 0 obj
<< /Dest [ 7 0 R
 /Fit ]
 /Next 154 0 R
 /Parent 152 0 R
 /Title (Saciando tu apetito) >>
endobj
% 'Outline.121.1': class OutlineEntryObject 
154 0 obj
<< /Count 8
 /Dest [ 10 0 R
 /Fit ]
 /First 155 0 R
 /Last 158 0 R
 /Next 163 0 R
 /Parent 152 0 R
 /Prev 153 0 R
 /Title (Using the Python Interpreter) >>
endobj
% 'Outline.122.0': class OutlineEntryObject 
155 0 obj
<< /Count 2
 /Dest [ 10 0 R
 /Fit ]
 /First 156 0 R
 /Last 157 0 R
 /Next 158 0 R
 /Parent 154 0 R
 /Title (Invoking the Interpreter) >>
endobj
% 'Outline.123.0': class OutlineEntryObject 
156 0 obj
<< /Dest [ 11 0 R
 /Fit ]
 /Next 157 0 R
 /Parent 155 0 R
 /Title (Argument Passing) >>
endobj
% 'Outline.123.1': class OutlineEntryObject 
157 0 obj
<< /Dest [ 11 0 R
 /Fit ]
 /Parent 155 0 R
 /Prev 156 0 R
 /Title (Interactive Mode) >>
endobj
% 'Outline.122.1': class OutlineEntryObject 
158 0 obj
<< /Count 4
 /Dest [ 15 0 R
 /Fit ]
 /First 159 0 R
 /Last 162 0 R
 /Parent 154 0 R
 /Prev 155 0 R
 /Title (The Interpreter and Its Environment) >>
endobj
% 'Outline.124.0': class OutlineEntryObject 
159 0 obj
<< /Dest [ 15 0 R
 /Fit ]
 /Next 160 0 R
 /Parent 158 0 R
 /Title (Error Handling) >>
endobj
% 'Outline.124.1': class OutlineEntryObject 
160 0 obj
<< /Dest [ 15 0 R
 /Fit ]
 /Next 161 0 R
 /Parent 158 0 R
 /Prev 159 0 R
 /Title (Executable Python Scripts) >>
endobj
% 'Outline.124.2': class OutlineEntryObject 
161 0 obj
<< /Dest [ 16 0 R
 /Fit ]
 /Next 162 0 R
 /Parent 158 0 R
 /Prev 160 0 R
 /Title (Source Code Encoding) >>
endobj
% 'Outline.124.3': class OutlineEntryObject 
162 0 obj
<< /Dest [ 18 0 R
 /Fit ]
 /Parent 158 0 R
 /Prev 161 0 R
 /Title (The Interactive Startup File) >>
endobj
% 'Outline.121.2': class OutlineEntryObject 
163 0 obj
<< /Count 7
 /Dest [ 18 0 R
 /Fit ]
 /First 164 0 R
 /Last 170 0 R
 /Next 171 0 R
 /Parent 152 0 R
 /Prev 154 0 R
 /Title (Una Introducci\363n Informal a Python) >>
endobj
% 'Outline.125.0': class OutlineEntryObject 
164 0 obj
<< /Count 5
 /Dest [ 19 0 R
 /Fit ]
 /First 165 0 R
 /Last 169 0 R
 /Next 170 0 R
 /Parent 163 0 R
 /Title (Usar Python como una Calculadora) >>
endobj
% 'Outline.126.0': class OutlineEntryObject 
165 0 obj
<< /Dest [ 19 0 R
 /Fit ]
 /Next 166 0 R
 /Parent 164 0 R
 /Title (N\372meros) >>
endobj
% 'Outline.126.1': class OutlineEntryObject 
166 0 obj
<< /Dest [ 22 0 R
 /Fit ]
 /Next 167 0 R
 /Parent 164 0 R
 /Prev 165 0 R
 /Title (Cadenas de caracteres) >>
endobj
% 'Outline.126.2': class OutlineEntryObject 
167 0 obj
<< /Dest [ 29 0 R
 /Fit ]
 /Next 168 0 R
 /Parent 164 0 R
 /Prev 166 0 R
 /Title (See also) >>
endobj
% 'Outline.126.3': class OutlineEntryObject 
168 0 obj
<< /Dest [ 29 0 R
 /Fit ]
 /Next 169 0 R
 /Parent 164 0 R
 /Prev 167 0 R
 /Title (Unicode Strings) >>
endobj
% 'Outline.126.4': class OutlineEntryObject 
169 0 obj
<< /Dest [ 31 0 R
 /Fit ]
 /Parent 164 0 R
 /Prev 168 0 R
 /Title (Lists) >>
endobj
% 'Outline.125.1': class OutlineEntryObject 
170 0 obj
<< /Dest [ 33 0 R
 /Fit ]
 /Parent 163 0 R
 /Prev 164 0 R
 /Title (First Steps Towards Programming) >>
endobj
% 'Outline.121.3': class OutlineEntryObject 
171 0 obj
<< /Count 14
 /Dest [ 34 0 R
 /Fit ]
 /First 172 0 R
 /Last 185 0 R
 /Next 186 0 R
 /Parent 152 0 R
 /Prev 163 0 R
 /Title (More Control Flow Tools) >>
endobj
% 'Outline.127.0': class OutlineEntryObject 
172 0 obj
<< /Dest [ 35 0 R
 /Fit ]
 /Next 173 0 R
 /Parent 171 0 R
 /Title (if Statements) >>
endobj
% 'Outline.127.1': class OutlineEntryObject 
173 0 obj
<< /Dest [ 35 0 R
 /Fit ]
 /Next 174 0 R
 /Parent 171 0 R
 /Prev 172 0 R
 /Title (for Statements) >>
endobj
% 'Outline.127.2': class OutlineEntryObject 
174 0 obj
<< /Dest [ 36 0 R
 /Fit ]
 /Next 175 0 R
 /Parent 171 0 R
 /Prev 173 0 R
 /Title (The range\(\) Function) >>
endobj
% 'Outline.127.3': class OutlineEntryObject 
175 0 obj
<< /Dest [ 37 0 R
 /Fit ]
 /Next 176 0 R
 /Parent 171 0 R
 /Prev 174 0 R
 /Title (break and continue Statements, and else Clauses on Loops) >>
endobj
% 'Outline.127.4': class OutlineEntryObject 
176 0 obj
<< /Dest [ 37 0 R
 /Fit ]
 /Next 177 0 R
 /Parent 171 0 R
 /Prev 175 0 R
 /Title (pass Statements) >>
endobj
% 'Outline.127.5': class OutlineEntryObject 
177 0 obj
<< /Dest [ 38 0 R
 /Fit ]
 /Next 178 0 R
 /Parent 171 0 R
 /Prev 176 0 R
 /Title (Defining Functions) >>
endobj
% 'Outline.127.6': class OutlineEntryObject 
178 0 obj
<< /Count 6
 /Dest [ 41 0 R
 /Fit ]
 /First 179 0 R
 /Last 184 0 R
 /Next 185 0 R
 /Parent 171 0 R
 /Prev 177 0 R
 /Title (More on Defining Functions) >>
endobj
% 'Outline.128.0': class OutlineEntryObject 
179 0 obj
<< /Dest [ 41 0 R
 /Fit ]
 /Next 180 0 R
 /Parent 178 0 R
 /Title (Default Argument Values) >>
endobj
% 'Outline.128.1': class OutlineEntryObject 
180 0 obj
<< /Dest [ 42 0 R
 /Fit ]
 /Next 181 0 R
 /Parent 178 0 R
 /Prev 179 0 R
 /Title (Keyword Arguments) >>
endobj
% 'Outline.128.2': class OutlineEntryObject 
181 0 obj
<< /Dest [ 44 0 R
 /Fit ]
 /Next 182 0 R
 /Parent 178 0 R
 /Prev 180 0 R
 /Title (Arbitrary Argument Lists) >>
endobj
% 'Outline.128.3': class OutlineEntryObject 
182 0 obj
<< /Dest [ 45 0 R
 /Fit ]
 /Next 183 0 R
 /Parent 178 0 R
 /Prev 181 0 R
 /Title (Unpacking Argument Lists) >>
endobj
% 'Outline.128.4': class OutlineEntryObject 
183 0 obj
<< /Dest [ 45 0 R
 /Fit ]
 /Next 184 0 R
 /Parent 178 0 R
 /Prev 182 0 R
 /Title (Lambda Forms) >>
endobj
% 'Outline.128.5': class OutlineEntryObject 
184 0 obj
<< /Dest [ 46 0 R
 /Fit ]
 /Parent 178 0 R
 /Prev 183 0 R
 /Title (Documentation Strings) >>
endobj
% 'Outline.127.7': class OutlineEntryObject 
185 0 obj
<< /Dest [ 49 0 R
 /Fit ]
 /Parent 171 0 R
 /Prev 178 0 R
 /Title (Intermezzo: Coding Style) >>
endobj
% 'Outline.121.4': class OutlineEntryObject 
186 0 obj
<< /Count 13
 /Dest [ 49 0 R
 /Fit ]
 /First 187 0 R
 /Last 199 0 R
 /Next 200 0 R
 /Parent 152 0 R
 /Prev 171 0 R
 /Title (Data Structures) >>
endobj
% 'Outline.129.0': class OutlineEntryObject 
187 0 obj
<< /Count 5
 /Dest [ 49 0 R
 /Fit ]
 /First 188 0 R
 /Last 192 0 R
 /Next 193 0 R
 /Parent 186 0 R
 /Title (More on Lists) >>
endobj
% 'Outline.130.0': class OutlineEntryObject 
188 0 obj
<< /Dest [ 51 0 R
 /Fit ]
 /Next 189 0 R
 /Parent 187 0 R
 /Title (Using Lists as Stacks) >>
endobj
% 'Outline.130.1': class OutlineEntryObject 
189 0 obj
<< /Dest [ 52 0 R
 /Fit ]
 /Next 190 0 R
 /Parent 187 0 R
 /Prev 188 0 R
 /Title (Using Lists as Queues) >>
endobj
% 'Outline.130.2': class OutlineEntryObject 
190 0 obj
<< /Dest [ 52 0 R
 /Fit ]
 /Next 191 0 R
 /Parent 187 0 R
 /Prev 189 0 R
 /Title (Functional Programming Tools) >>
endobj
% 'Outline.130.3': class OutlineEntryObject 
191 0 obj
<< /Dest [ 54 0 R
 /Fit ]
 /Next 192 0 R
 /Parent 187 0 R
 /Prev 190 0 R
 /Title (List Comprehensions) >>
endobj
% 'Outline.130.4': class OutlineEntryObject 
192 0 obj
<< /Dest [ 55 0 R
 /Fit ]
 /Parent 187 0 R
 /Prev 191 0 R
 /Title (Nested List Comprehensions) >>
endobj
% 'Outline.129.1': class OutlineEntryObject 
193 0 obj
<< /Dest [ 56 0 R
 /Fit ]
 /Next 194 0 R
 /Parent 186 0 R
 /Prev 187 0 R
 /Title (The del statement) >>
endobj
% 'Outline.129.2': class OutlineEntryObject 
194 0 obj
<< /Dest [ 56 0 R
 /Fit ]
 /Next 195 0 R
 /Parent 186 0 R
 /Prev 193 0 R
 /Title (Tuples and Sequences) >>
endobj
% 'Outline.129.3': class OutlineEntryObject 
195 0 obj
<< /Dest [ 58 0 R
 /Fit ]
 /Next 196 0 R
 /Parent 186 0 R
 /Prev 194 0 R
 /Title (Sets) >>
endobj
% 'Outline.129.4': class OutlineEntryObject 
196 0 obj
<< /Dest [ 59 0 R
 /Fit ]
 /Next 197 0 R
 /Parent 186 0 R
 /Prev 195 0 R
 /Title (Dictionaries) >>
endobj
% 'Outline.129.5': class OutlineEntryObject 
197 0 obj
<< /Dest [ 60 0 R
 /Fit ]
 /Next 198 0 R
 /Parent 186 0 R
 /Prev 196 0 R
 /Title (Looping Techniques) >>
endobj
% 'Outline.129.6': class OutlineEntryObject 
198 0 obj
<< /Dest [ 61 0 R
 /Fit ]
 /Next 199 0 R
 /Parent 186 0 R
 /Prev 197 0 R
 /Title (More on Conditions) >>
endobj
% 'Outline.129.7': class OutlineEntryObject 
199 0 obj
<< /Dest [ 62 0 R
 /Fit ]
 /Parent 186 0 R
 /Prev 198 0 R
 /Title (Comparing Sequences and Other Types) >>
endobj
% 'Outline.121.5': class OutlineEntryObject 
200 0 obj
<< /Count 10
 /Dest [ 65 0 R
 /Fit ]
 /First 201 0 R
 /Last 207 0 R
 /Next 211 0 R
 /Parent 152 0 R
 /Prev 186 0 R
 /Title (M\363dulos) >>
endobj
% 'Outline.131.0': class OutlineEntryObject 
201 0 obj
<< /Count 3
 /Dest [ 67 0 R
 /Fit ]
 /First 202 0 R
 /Last 204 0 R
 /Next 205 0 R
 /Parent 200 0 R
 /Title (M\341s sobre los m\363dulos) >>
endobj
% 'Outline.132.0': class OutlineEntryObject 
202 0 obj
<< /Dest [ 68 0 R
 /Fit ]
 /Next 203 0 R
 /Parent 201 0 R
 /Title (Ejecutando m\363dulos como scripts) >>
endobj
% 'Outline.132.1': class OutlineEntryObject 
203 0 obj
<< /Dest [ 69 0 R
 /Fit ]
 /Next 204 0 R
 /Parent 201 0 R
 /Prev 202 0 R
 /Title (El camino de b\372squeda de los m\363dulos) >>
endobj
% 'Outline.132.2': class OutlineEntryObject 
204 0 obj
<< /Dest [ 69 0 R
 /Fit ]
 /Parent 201 0 R
 /Prev 203 0 R
 /Title (Archivos "compilados" de Python) >>
endobj
% 'Outline.131.1': class OutlineEntryObject 
205 0 obj
<< /Dest [ 70 0 R
 /Fit ]
 /Next 206 0 R
 /Parent 200 0 R
 /Prev 201 0 R
 /Title (M\363dulos est\341ndar) >>
endobj
% 'Outline.131.2': class OutlineEntryObject 
206 0 obj
<< /Dest [ 71 0 R
 /Fit ]
 /Next 207 0 R
 /Parent 200 0 R
 /Prev 205 0 R
 /Title (La funci\363n dir\(\)) >>
endobj
% 'Outline.131.3': class OutlineEntryObject 
207 0 obj
<< /Count 3
 /Dest [ 73 0 R
 /Fit ]
 /First 208 0 R
 /Last 210 0 R
 /Parent 200 0 R
 /Prev 206 0 R
 /Title (Paquetes) >>
endobj
% 'Outline.133.0': class OutlineEntryObject 
208 0 obj
<< /Dest [ 75 0 R
 /Fit ]
 /Next 209 0 R
 /Parent 207 0 R
 /Title (Importando * desde un paquete) >>
endobj
% 'Outline.133.1': class OutlineEntryObject 
209 0 obj
<< /Dest [ 76 0 R
 /Fit ]
 /Next 210 0 R
 /Parent 207 0 R
 /Prev 208 0 R
 /Title (Referencias internas en paquetes) >>
endobj
% 'Outline.133.2': class OutlineEntryObject 
210 0 obj
<< /Dest [ 78 0 R
 /Fit ]
 /Parent 207 0 R
 /Prev 209 0 R
 /Title (Paquetes en m\372ltiple directorios) >>
endobj
% 'Outline.121.6': class OutlineEntryObject 
211 0 obj
<< /Count 5
 /Dest [ 78 0 R
 /Fit ]
 /First 212 0 R
 /Last 214 0 R
 /Next 217 0 R
 /Parent 152 0 R
 /Prev 200 0 R
 /Title (Entrada y salida) >>
endobj
% 'Outline.134.0': class OutlineEntryObject 
212 0 obj
<< /Count 1
 /Dest [ 78 0 R
 /Fit ]
 /First 213 0 R
 /Last 213 0 R
 /Next 214 0 R
 /Parent 211 0 R
 /Title (Formateo elegante de la salida) >>
endobj
% 'Outline.135.0': class OutlineEntryObject 
213 0 obj
<< /Dest [ 82 0 R
 /Fit ]
 /Parent 212 0 R
 /Title (Viejo formateo de cadenas) >>
endobj
% 'Outline.134.1': class OutlineEntryObject 
214 0 obj
<< /Count 2
 /Dest [ 83 0 R
 /Fit ]
 /First 215 0 R
 /Last 216 0 R
 /Parent 211 0 R
 /Prev 212 0 R
 /Title (Leyendo y escribiendo archivos) >>
endobj
% 'Outline.136.0': class OutlineEntryObject 
215 0 obj
<< /Dest [ 83 0 R
 /Fit ]
 /Next 216 0 R
 /Parent 214 0 R
 /Title (M\351todos de los objetos Archivo) >>
endobj
% 'Outline.136.1': class OutlineEntryObject 
216 0 obj
<< /Dest [ 85 0 R
 /Fit ]
 /Parent 214 0 R
 /Prev 215 0 R
 /Title (El m\363dulo The pickle) >>
endobj
% 'Outline.121.7': class OutlineEntryObject 
217 0 obj
<< /Count 7
 /Dest [ 86 0 R
 /Fit ]
 /First 218 0 R
 /Last 224 0 R
 /Next 225 0 R
 /Parent 152 0 R
 /Prev 211 0 R
 /Title (Errors and Exceptions) >>
endobj
% 'Outline.137.0': class OutlineEntryObject 
218 0 obj
<< /Dest [ 86 0 R
 /Fit ]
 /Next 219 0 R
 /Parent 217 0 R
 /Title (Syntax Errors) >>
endobj
% 'Outline.137.1': class OutlineEntryObject 
219 0 obj
<< /Dest [ 87 0 R
 /Fit ]
 /Next 220 0 R
 /Parent 217 0 R
 /Prev 218 0 R
 /Title (Exceptions) >>
endobj
% 'Outline.137.2': class OutlineEntryObject 
220 0 obj
<< /Dest [ 88 0 R
 /Fit ]
 /Next 221 0 R
 /Parent 217 0 R
 /Prev 219 0 R
 /Title (Handling Exceptions) >>
endobj
% 'Outline.137.3': class OutlineEntryObject 
221 0 obj
<< /Dest [ 90 0 R
 /Fit ]
 /Next 222 0 R
 /Parent 217 0 R
 /Prev 220 0 R
 /Title (Raising Exceptions) >>
endobj
% 'Outline.137.4': class OutlineEntryObject 
222 0 obj
<< /Dest [ 91 0 R
 /Fit ]
 /Next 223 0 R
 /Parent 217 0 R
 /Prev 221 0 R
 /Title (User-defined Exceptions) >>
endobj
% 'Outline.137.5': class OutlineEntryObject 
223 0 obj
<< /Dest [ 93 0 R
 /Fit ]
 /Next 224 0 R
 /Parent 217 0 R
 /Prev 222 0 R
 /Title (Defining Clean-up Actions) >>
endobj
% 'Outline.137.6': class OutlineEntryObject 
224 0 obj
<< /Dest [ 94 0 R
 /Fit ]
 /Parent 217 0 R
 /Prev 223 0 R
 /Title (Predefined Clean-up Actions) >>
endobj
% 'Outline.121.8': class OutlineEntryObject 
225 0 obj
<< /Count 16
 /Dest [ 95 0 R
 /Fit ]
 /First 226 0 R
 /Last 241 0 R
 /Next 242 0 R
 /Parent 152 0 R
 /Prev 217 0 R
 /Title (Clases) >>
endobj
% 'Outline.138.0': class OutlineEntryObject 
226 0 obj
<< /Dest [ 95 0 R
 /Fit ]
 /Next 227 0 R
 /Parent 225 0 R
 /Title (Unas palabras sobre terminolog\355a) >>
endobj
% 'Outline.138.1': class OutlineEntryObject 
227 0 obj
<< /Dest [ 97 0 R
 /Fit ]
 /Next 228 0 R
 /Parent 225 0 R
 /Prev 226 0 R
 /Title (Python Scopes and Name Spaces) >>
endobj
% 'Outline.138.2': class OutlineEntryObject 
228 0 obj
<< /Count 4
 /Dest [ 98 0 R
 /Fit ]
 /First 229 0 R
 /Last 232 0 R
 /Next 233 0 R
 /Parent 225 0 R
 /Prev 227 0 R
 /Title (A First Look at Classes) >>
endobj
% 'Outline.139.0': class OutlineEntryObject 
229 0 obj
<< /Dest [ 98 0 R
 /Fit ]
 /Next 230 0 R
 /Parent 228 0 R
 /Title (Class Definition Syntax) >>
endobj
% 'Outline.139.1': class OutlineEntryObject 
230 0 obj
<< /Dest [ 99 0 R
 /Fit ]
 /Next 231 0 R
 /Parent 228 0 R
 /Prev 229 0 R
 /Title (Class Objects) >>
endobj
% 'Outline.139.2': class OutlineEntryObject 
231 0 obj
<< /Dest [ 100 0 R
 /Fit ]
 /Next 232 0 R
 /Parent 228 0 R
 /Prev 230 0 R
 /Title (Instance Objects) >>
endobj
% 'Outline.139.3': class OutlineEntryObject 
232 0 obj
<< /Dest [ 101 0 R
 /Fit ]
 /Parent 228 0 R
 /Prev 231 0 R
 /Title (Method Objects) >>
endobj
% 'Outline.138.3': class OutlineEntryObject 
233 0 obj
<< /Dest [ 102 0 R
 /Fit ]
 /Next 234 0 R
 /Parent 225 0 R
 /Prev 228 0 R
 /Title (Random Remarks) >>
endobj
% 'Outline.138.4': class OutlineEntryObject 
234 0 obj
<< /Count 1
 /Dest [ 103 0 R
 /Fit ]
 /First 235 0 R
 /Last 235 0 R
 /Next 236 0 R
 /Parent 225 0 R
 /Prev 233 0 R
 /Title (Inheritance) >>
endobj
% 'Outline.140.0': class OutlineEntryObject 
235 0 obj
<< /Dest [ 104 0 R
 /Fit ]
 /Parent 234 0 R
 /Title (Multiple Inheritance) >>
endobj
% 'Outline.138.5': class OutlineEntryObject 
236 0 obj
<< /Dest [ 107 0 R
 /Fit ]
 /Next 237 0 R
 /Parent 225 0 R
 /Prev 234 0 R
 /Title (Private Variables) >>
endobj
% 'Outline.138.6': class OutlineEntryObject 
237 0 obj
<< /Dest [ 108 0 R
 /Fit ]
 /Next 238 0 R
 /Parent 225 0 R
 /Prev 236 0 R
 /Title (Odds and Ends) >>
endobj
% 'Outline.138.7': class OutlineEntryObject 
238 0 obj
<< /Dest [ 109 0 R
 /Fit ]
 /Next 239 0 R
 /Parent 225 0 R
 /Prev 237 0 R
 /Title (Exceptions Are Classes Too) >>
endobj
% 'Outline.138.8': class OutlineEntryObject 
239 0 obj
<< /Dest [ 110 0 R
 /Fit ]
 /Next 240 0 R
 /Parent 225 0 R
 /Prev 238 0 R
 /Title (Iterators) >>
endobj
% 'Outline.138.9': class OutlineEntryObject 
240 0 obj
<< /Dest [ 111 0 R
 /Fit ]
 /Next 241 0 R
 /Parent 225 0 R
 /Prev 239 0 R
 /Title (Generators) >>
endobj
% 'Outline.138.10': class OutlineEntryObject 
241 0 obj
<< /Dest [ 112 0 R
 /Fit ]
 /Parent 225 0 R
 /Prev 240 0 R
 /Title (Generator Expressions) >>
endobj
% 'Outline.121.9': class OutlineEntryObject 
242 0 obj
<< /Count 12
 /Dest [ 114 0 R
 /Fit ]
 /First 243 0 R
 /Last 254 0 R
 /Next 255 0 R
 /Parent 152 0 R
 /Prev 225 0 R
 /Title (Brief Tour of the Standard Library) >>
endobj
% 'Outline.141.0': class OutlineEntryObject 
243 0 obj
<< /Dest [ 114 0 R
 /Fit ]
 /Next 244 0 R
 /Parent 242 0 R
 /Title (Operating System Interface) >>
endobj
% 'Outline.141.1': class OutlineEntryObject 
244 0 obj
<< /Dest [ 115 0 R
 /Fit ]
 /Next 245 0 R
 /Parent 242 0 R
 /Prev 243 0 R
 /Title (File Wildcards) >>
endobj
% 'Outline.141.2': class OutlineEntryObject 
245 0 obj
<< /Dest [ 115 0 R
 /Fit ]
 /Next 246 0 R
 /Parent 242 0 R
 /Prev 244 0 R
 /Title (Command Line Arguments) >>
endobj
% 'Outline.141.3': class OutlineEntryObject 
246 0 obj
<< /Dest [ 115 0 R
 /Fit ]
 /Next 247 0 R
 /Parent 242 0 R
 /Prev 245 0 R
 /Title (Error Output Redirection and Program Termination) >>
endobj
% 'Outline.141.4': class OutlineEntryObject 
247 0 obj
<< /Dest [ 116 0 R
 /Fit ]
 /Next 248 0 R
 /Parent 242 0 R
 /Prev 246 0 R
 /Title (String Pattern Matching) >>
endobj
% 'Outline.141.5': class OutlineEntryObject 
248 0 obj
<< /Dest [ 116 0 R
 /Fit ]
 /Next 249 0 R
 /Parent 242 0 R
 /Prev 247 0 R
 /Title (Mathematics) >>
endobj
% 'Outline.141.6': class OutlineEntryObject 
249 0 obj
<< /Dest [ 117 0 R
 /Fit ]
 /Next 250 0 R
 /Parent 242 0 R
 /Prev 248 0 R
 /Title (Internet Access) >>
endobj
% 'Outline.141.7': class OutlineEntryObject 
250 0 obj
<< /Dest [ 117 0 R
 /Fit ]
 /Next 251 0 R
 /Parent 242 0 R
 /Prev 249 0 R
 /Title (Dates and Times) >>
endobj
% 'Outline.141.8': class OutlineEntryObject 
251 0 obj
<< /Dest [ 118 0 R
 /Fit ]
 /Next 252 0 R
 /Parent 242 0 R
 /Prev 250 0 R
 /Title (Data Compression) >>
endobj
% 'Outline.141.9': class OutlineEntryObject 
252 0 obj
<< /Dest [ 118 0 R
 /Fit ]
 /Next 253 0 R
 /Parent 242 0 R
 /Prev 251 0 R
 /Title (Performance Measurement) >>
endobj
% 'Outline.141.10': class OutlineEntryObject 
253 0 obj
<< /Dest [ 119 0 R
 /Fit ]
 /Next 254 0 R
 /Parent 242 0 R
 /Prev 252 0 R
 /Title (Quality Control) >>
endobj
% 'Outline.141.11': class OutlineEntryObject 
254 0 obj
<< /Dest [ 119 0 R
 /Fit ]
 /Parent 242 0 R
 /Prev 253 0 R
 /Title (Batteries Included) >>
endobj
% 'Outline.121.10': class OutlineEntryObject 
255 0 obj
<< /Count 8
 /Dest [ 120 0 R
 /Fit ]
 /First 256 0 R
 /Last 263 0 R
 /Next 264 0 R
 /Parent 152 0 R
 /Prev 242 0 R
 /Title (Brief Tour of the Standard Library -- Part II) >>
endobj
% 'Outline.142.0': class OutlineEntryObject 
256 0 obj
<< /Dest [ 120 0 R
 /Fit ]
 /Next 257 0 R
 /Parent 255 0 R
 /Title (Output Formatting) >>
endobj
% 'Outline.142.1': class OutlineEntryObject 
257 0 obj
<< /Dest [ 121 0 R
 /Fit ]
 /Next 258 0 R
 /Parent 255 0 R
 /Prev 256 0 R
 /Title (Templating) >>
endobj
% 'Outline.142.2': class OutlineEntryObject 
258 0 obj
<< /Dest [ 123 0 R
 /Fit ]
 /Next 259 0 R
 /Parent 255 0 R
 /Prev 257 0 R
 /Title (Working with Binary Data Record Layouts) >>
endobj
% 'Outline.142.3': class OutlineEntryObject 
259 0 obj
<< /Dest [ 123 0 R
 /Fit ]
 /Next 260 0 R
 /Parent 255 0 R
 /Prev 258 0 R
 /Title (Multi-threading) >>
endobj
% 'Outline.142.4': class OutlineEntryObject 
260 0 obj
<< /Dest [ 124 0 R
 /Fit ]
 /Next 261 0 R
 /Parent 255 0 R
 /Prev 259 0 R
 /Title (Logging) >>
endobj
% 'Outline.142.5': class OutlineEntryObject 
261 0 obj
<< /Dest [ 125 0 R
 /Fit ]
 /Next 262 0 R
 /Parent 255 0 R
 /Prev 260 0 R
 /Title (Weak References) >>
endobj
% 'Outline.142.6': class OutlineEntryObject 
262 0 obj
<< /Dest [ 126 0 R
 /Fit ]
 /Next 263 0 R
 /Parent 255 0 R
 /Prev 261 0 R
 /Title (Tools for Working with Lists) >>
endobj
% 'Outline.142.7': class OutlineEntryObject 
263 0 obj
<< /Dest [ 127 0 R
 /Fit ]
 /Parent 255 0 R
 /Prev 262 0 R
 /Title (Decimal Floating Point Arithmetic) >>
endobj
% 'Outline.121.11': class OutlineEntryObject 
264 0 obj
<< /Dest [ 128 0 R
 /Fit ]
 /Next 265 0 R
 /Parent 152 0 R
 /Prev 255 0 R
 /Title (\277Y ahora qu\351?) >>
endobj
% 'Outline.121.12': class OutlineEntryObject 
265 0 obj
<< /Count 4
 /Dest [ 136 0 R
 /Fit ]
 /First 266 0 R
 /Last 269 0 R
 /Next 270 0 R
 /Parent 152 0 R
 /Prev 264 0 R
 /Title (Edici\363n de Entrada Interactiva y Sustituci\363n de Historial) >>
endobj
% 'Outline.143.0': class OutlineEntryObject 
266 0 obj
<< /Dest [ 137 0 R
 /Fit ]
 /Next 267 0 R
 /Parent 265 0 R
 /Title (Edici\363n de L\355nea) >>
endobj
% 'Outline.143.1': class OutlineEntryObject 
267 0 obj
<< /Dest [ 137 0 R
 /Fit ]
 /Next 268 0 R
 /Parent 265 0 R
 /Prev 266 0 R
 /Title (Sustituci\363n de historial) >>
endobj
% 'Outline.143.2': class OutlineEntryObject 
268 0 obj
<< /Dest [ 137 0 R
 /Fit ]
 /Next 269 0 R
 /Parent 265 0 R
 /Prev 267 0 R
 /Title (Atajos de teclado) >>
endobj
% 'Outline.143.3': class OutlineEntryObject 
269 0 obj
<< /Dest [ 140 0 R
 /Fit ]
 /Parent 265 0 R
 /Prev 268 0 R
 /Title (Comentario) >>
endobj
% 'Outline.121.13': class OutlineEntryObject 
270 0 obj
<< /Count 1
 /Dest [ 142 0 R
 /Fit ]
 /First 271 0 R
 /Last 271 0 R
 /Parent 152 0 R
 /Prev 265 0 R
 /Title (Aritm\351tica de Punto Flotante: Problemas y Limitaciones) >>
endobj
% 'Outline.144.0': class OutlineEntryObject 
271 0 obj
<< /Dest [ 146 0 R
 /Fit ]
 /Parent 270 0 R
 /Title (Error de Representaci\363n) >>
endobj
% 'R272': class PDFPages 
272 0 obj
% page tree
<< /Count 114
 /Kids [ 7 0 R
 8 0 R
 10 0 R
 11 0 R
 15 0 R
 16 0 R
 18 0 R
 19 0 R
 20 0 R
 21 0 R
 22 0 R
 23 0 R
 24 0 R
 25 0 R
 26 0 R
 29 0 R
 30 0 R
 31 0 R
 32 0 R
 33 0 R
 34 0 R
 35 0 R
 36 0 R
 37 0 R
 38 0 R
 40 0 R
 41 0 R
 42 0 R
 43 0 R
 44 0 R
 45 0 R
 46 0 R
 49 0 R
 50 0 R
 51 0 R
 52 0 R
 53 0 R
 54 0 R
 55 0 R
 56 0 R
 57 0 R
 58 0 R
 59 0 R
 60 0 R
 61 0 R
 62 0 R
 65 0 R
 67 0 R
 68 0 R
 69 0 R
 70 0 R
 71 0 R
 72 0 R
 73 0 R
 74 0 R
 75 0 R
 76 0 R
 78 0 R
 79 0 R
 80 0 R
 81 0 R
 82 0 R
 83 0 R
 84 0 R
 85 0 R
 86 0 R
 87 0 R
 88 0 R
 89 0 R
 90 0 R
 91 0 R
 92 0 R
 93 0 R
 94 0 R
 95 0 R
 97 0 R
 98 0 R
 99 0 R
 100 0 R
 101 0 R
 102 0 R
 103 0 R
 104 0 R
 107 0 R
 108 0 R
 109 0 R
 110 0 R
 111 0 R
 112 0 R
 114 0 R
 115 0 R
 116 0 R
 117 0 R
 118 0 R
 119 0 R
 120 0 R
 121 0 R
 122 0 R
 123 0 R
 124 0 R
 125 0 R
 126 0 R
 127 0 R
 128 0 R
 136 0 R
 137 0 R
 139 0 R
 140 0 R
 142 0 R
 143 0 R
 145 0 R
 146 0 R
 147 0 R
 148 0 R ]
 /Type /Pages >>
endobj
% 'R273': class PDFStream 
273 0 obj
% page stream
<< /Length 5939 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 584.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 34 re B*
Q
q
BT 1 0 0 1 10 9.64 Tm 24 TL /F1 20 Tf .12549 .262745 .360784 rg (The Python tutorial) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 563.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
.933333 .870588 .933333 rg
n -3 -3 79.03937 18 re f*
Q
q
BT 1 0 0 1 0 6.256 Tm 40.13537 0 Td 12 TL /F3 8 Tf 0 0 0 rg (Release:) Tj T* -40.13537 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
.933333 .933333 1 rg
n -3 -3 268.4126 18 re f*
Q
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (2.5.2) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 548.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
.933333 .870588 .933333 rg
n -3 -3 79.03937 18 re f*
Q
q
BT 1 0 0 1 0 6.256 Tm 53.03937 0 Td 12 TL /F3 8 Tf 0 0 0 rg (Date:) Tj T* -53.03937 0 Td ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
.933333 .933333 1 rg
n -3 -3 268.4126 18 re f*
Q
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (July 01, 2009) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 494.9367 cm
q
BT 1 0 0 1 0 42.256 Tm .203141 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python is an easy to learn, powerful programming language. It has efficient high-level data structures) Tj T* 0 Tw 1.294331 Tw (and a simple but effective approach to object-oriented programming. Python's elegant syntax and) Tj T* 0 Tw .367198 Tw (dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid) Tj T* 0 Tw (application development in many areas on most platforms.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 440.9367 cm
q
BT 1 0 0 1 0 42.256 Tm .131465 Tw 12 TL /F1 8 Tf 0 0 0 rg (The Python interpreter and the extensive standard library are freely available in source or binary form) Tj T* 0 Tw -0.208288 Tw (for all major platforms from the Python Web site, ) Tj 0 0 .501961 rg (http://www.python.org/) Tj 0 0 0 rg (, and may be freely distributed.) Tj T* 0 Tw .930931 Tw (The same site also contains distributions of and pointers to many free third party Python modules,) Tj T* 0 Tw (programs and tools, and additional documentation.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 398.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .038748 Tw 12 TL /F1 8 Tf 0 0 0 rg (The Python interpreter is easily extended with new functions and data types implemented in C or C++) Tj T* 0 Tw -0.402935 Tw (\(or other languages callable from C\). Python is also suitable as an extension language for customizable) Tj T* 0 Tw (applications.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 356.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.315469 Tw 12 TL /F1 8 Tf 0 0 0 rg (This tutorial introduces the reader informally to the basic concepts and features of the Python language) Tj T* 0 Tw -0.073252 Tw (and system. It helps to have a Python interpreter handy for hands-on experience, but all examples are) Tj T* 0 Tw (self-contained, so the tutorial can be read off-line as well.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 302.9367 cm
q
BT 1 0 0 1 0 42.256 Tm .202569 Tw 12 TL /F1 8 Tf 0 0 0 rg (For a description of standard objects and modules, see the Python Library Reference document. The) Tj T* 0 Tw .233748 Tw (Python Reference Manual gives a more formal definition of the language. To write extensions in C or) Tj T* 0 Tw .319075 Tw (C++, read Extending and Embedding the Python Interpreter and Python/C API Reference. There are) Tj T* 0 Tw (also several books covering Python in depth.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 236.9367 cm
q
BT 1 0 0 1 0 54.256 Tm 1.167731 Tw 12 TL /F1 8 Tf 0 0 0 rg (This tutorial does not attempt to be comprehensive and cover every single feature, or even every) Tj T* 0 Tw .888305 Tw (commonly used feature. Instead, it introduces many of Python's most noteworthy features, and will) Tj T* 0 Tw .419798 Tw (give you a good idea of the language's flavor and style. After reading it, you will be able to read and) Tj T* 0 Tw .733748 Tw (write Python modules and programs, and you will be ready to learn more about the various Python) Tj T* 0 Tw (library modules described in the Python Library Reference.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 218.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F4 8 Tf (glossary) Tj /F1 8 Tf ( is also worth going through.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 218.9367 cm
Q
q
1 0 0 1 70.4315 218.9367 cm
Q
q
1 0 0 1 70.4315 218.9367 cm
Q
q
1 0 0 1 70.4315 183.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Saciando tu apetito) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 117.7367 cm
q
BT 1 0 0 1 0 54.256 Tm .014906 Tw 12 TL /F1 8 Tf 0 0 0 rg (Si trabajas mucho con computadoras, eventualmente encontrar\341s que te gustar\355a automatizar alguna) Tj T* 0 Tw -0.255202 Tw (tarea. Por ejemplo, podr\355as desear realizar una b\372squeda y reemplazo en un gran n\372mero de archivos) Tj T* 0 Tw -0.251061 Tw (de texto, o renombrar y reorganizar un mont\363n de archivos con fotos de una manera compleja. Tal vez) Tj T* 0 Tw 2.237452 Tw (quieras escribir alguna peque\361a base de datos personalizada, personalizada, o una aplicaci\363n) Tj T* 0 Tw (especializada con interfaz gr\341fica, o un juego simple.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 99.73669 cm
q
BT 1 0 0 1 0 6.256 Tm .489998 Tw 12 TL /F1 8 Tf 0 0 0 rg (Si eres un desarrollador de software profesional, tal vez necesites trabajar con varias bibliotecas de) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (1) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R274': class PDFStream 
274 0 obj
% page stream
<< /Length 6043 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.9367 cm
q
BT 1 0 0 1 0 54.256 Tm .341452 Tw 12 TL /F1 8 Tf 0 0 0 rg (C/C++/Java pero encuentres que se hace lento el ciclo usual de escribir/compilar/testear/recompilar.) Tj T* 0 Tw 1.106931 Tw (Tal vez est\341s escribiendo una bater\355a de pruebas para una de esas bibliotecas y encuentres que) Tj T* 0 Tw .687367 Tw (escribir el c\363digo de testeo se hace una tarea tediosa. O tal vez has escrito un programa al que le) Tj T* 0 Tw -0.148288 Tw (vendr\355a bien un lenguaje de extensi\363n, y no quieres dise\361ar/implementar todo un nuevo lenguaje para) Tj T* 0 Tw (tu aplicaci\363n.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 530.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Python es el lenguaje justo para ti.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 452.9367 cm
q
BT 1 0 0 1 0 66.256 Tm -0.433649 Tw 12 TL /F1 8 Tf 0 0 0 rg (Podr\355as escribir un script en el interprete de comandos o un archivo por lotes de Windows para algunas) Tj T* 0 Tw -0.177475 Tw (de estas tareas, pero los scripts se lucen para mover archivos de un lado a otro y para modificar datos) Tj T* 0 Tw 1.256265 Tw (de texto, no para aplicaciones con interfaz de usuario o juegos. Podr\355as escribir un programa en) Tj T* 0 Tw .235712 Tw (C/C++/Java, pero puede tomar mucho tiempo de desarrollo obtener al menos un primer borrador del) Tj T* 0 Tw .014569 Tw (programa. Python es m\341s f\341cil de usar, est\341 disponible para sistemas operativos Windows, MacOS X) Tj T* 0 Tw (y Unix, y te ayudar\341 a realizar tu tarea m\341s velozmente.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 362.9367 cm
q
BT 1 0 0 1 0 78.256 Tm .633331 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python es f\341cil de usar, pero es un lenguaje de programaci\363n de verdad, ofreciendo mucho mucho) Tj T* 0 Tw .372248 Tw (mayor estructura y soporte para programas grandes que lo que lo que pueden ofrecer los scripts de) Tj T* 0 Tw .182887 Tw (Unix o archivos por lotes. Por otro lado, Python ofrece mucho m\341s chequeo de error que C, y siendo) Tj T* 0 Tw .663763 Tw (un ) Tj /F4 8 Tf (lenguaje de muy alto nivel) Tj /F1 8 Tf (, tiene tipos de datos de alto nivel incorporados como ser arreglos de) Tj T* 0 Tw .307998 Tw (tama\361o flexible y diccionarios. Debido a sus tipos de datos m\341s generales Python puede aplicarse a) Tj T* 0 Tw .691057 Tw (un dominio de problemas mayor que Awk o incluso Perl, y a\372n as\355 muchas cosas siguen siendo al) Tj T* 0 Tw (menos igual de f\341cil en Python que en esos lenguajes.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 296.9367 cm
q
BT 1 0 0 1 0 54.256 Tm 1.282569 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python te permite separar tu programa en m\363dulos que pueden reusarse en otros programas en) Tj T* 0 Tw 1.402931 Tw (Python. Viene con una gran colecci\363n de m\363dulos est\341ndar que puedes usar como base de tus) Tj T* 0 Tw .398131 Tw (programas --- o como ejemplos para empezar a aprender a programar en Python. Algunos de estos) Tj T* 0 Tw 1.646997 Tw (m\363dulos proveen cosas como entrada/salida a archivos, llamadas al sistema, sockets, e incluso) Tj T* 0 Tw (interfaces a sistemas de interfaz gr\341fica de usuario como Tk.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 230.9367 cm
q
BT 1 0 0 1 0 54.256 Tm .741998 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python es un lenguaje interpretado, lo cual puede ahorrarte mucho tiempo durante el desarrollo ya) Tj T* 0 Tw .552855 Tw (que no es necesario compilar ni enlazar. El interprete puede usarse interactivamente, lo que facilita) Tj T* 0 Tw .953997 Tw (experimentar con caracter\355sticas del lenguaje, escribir programas descartables, o probar funciones) Tj T* 0 Tw 1.631712 Tw (cuando se hace desarrollo de programas de abajo hacia arriba. Es tambi\351n una calculadora de) Tj T* 0 Tw (escritorio pr\341ctica.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 200.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .498331 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python permite escribir programas compactos y legibles. Los programas en Python son t\355picamente) Tj T* 0 Tw (m\341s cortos que sus programas equivalentes en C, C++ o Java por varios motivos:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 198.9367 cm
Q
q
1 0 0 1 70.4315 174.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm 2.459998 Tw 12 TL /F1 8 Tf 0 0 0 rg (los tipos de datos de alto nivel permiten expresar operaciones complejas en una sola) Tj T* 0 Tw (instrucci\363n;) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 162.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 0 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (la agrupaci\363n de instrucciones se hace por indentaci\363n en vez de llaves de apertura y cierre.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 150.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 0 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (no es necesario declarar variables ni argumentos.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 108.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .873175 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python es ) Tj /F4 8 Tf (extensible) Tj /F1 8 Tf (: si ya sabes programar en C es f\341cil agregar una nueva funci\363n o m\363dulo al) Tj T* 0 Tw .665536 Tw (int\351rprete, ya sea para realizar operaciones cr\355ticas a velocidad m\341xima, o para enlazar programas) Tj T* 0 Tw .775141 Tw (Python con bibliotecas que tal vez s\363lo est\351n disponibles en forma binaria \(por ejemplo bibliotecas) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (2) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R275': class PDFStream 
275 0 obj
% page stream
<< /Length 5316 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 572.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.089541 Tw 12 TL /F1 8 Tf 0 0 0 rg (gr\341ficas espec\355ficas de un fabricante\). Una vez que est\351s realmente entusiasmado, puedes enlazar el) Tj T* 0 Tw .370748 Tw (int\351rprete Python en una aplicaci\363n hecha en C y usarlo como lenguaje de extensi\363n o de comando) Tj T* 0 Tw (para esa aplicaci\363n.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 530.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .044748 Tw 12 TL /F1 8 Tf 0 0 0 rg (Por cierto, el lenguaje recibe su nombre del programa de televisi\363n de la BBC "Monty Python's Flying) Tj T* 0 Tw .889645 Tw (Circus" y no tiene nada que ver con reptiles. Hacer referencias a sketches de Monty Python en la) Tj T* 0 Tw (documentaci\363n no s\363lo esta permitido, sino que tambi\351n est\341 bien visto!) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 488.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .428248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Ahora que ya est\341s emocionada con Python, querr\341s verlo en m\341s detalle. C\363mo la mejor forma de) Tj T* 0 Tw .479763 Tw (aprender un lenguaje es usarlo, el tutorial te invita a que juegues con el int\351rprete Python a medida) Tj T* 0 Tw (que vas leyendo.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 458.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .515998 Tw 12 TL /F1 8 Tf 0 0 0 rg (En el pr\363ximo cap\355tulo se explicar\341 la mec\341nica de uso del int\351rprete. \311sta es informaci\363n bastante) Tj T* 0 Tw (mundana, pero es esencial para poder probar los ejemplos que aparecer\341n m\341s adelante.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 404.9367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.465331 Tw 12 TL /F1 8 Tf 0 0 0 rg (El resto del tutorial introduce varias caracter\355sticas del lenguaje y el sistema Python a trav\351s de) Tj T* 0 Tw -0.281669 Tw (ejemplos, empezando con expresiones, instrucciones y tipos de datos simples, pasando por funciones) Tj T* 0 Tw .697536 Tw (y m\363dulos, y finalmente tocando conceptos avanzados como excepciones y clases definidas por el) Tj T* 0 Tw (usuario.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 404.9367 cm
Q
q
1 0 0 1 70.4315 404.9367 cm
Q
q
1 0 0 1 70.4315 404.9367 cm
Q
q
1 0 0 1 70.4315 369.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Using the Python Interpreter) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 363.7367 cm
Q
q
1 0 0 1 70.4315 363.7367 cm
Q
q
1 0 0 1 70.4315 363.7367 cm
Q
q
1 0 0 1 70.4315 330.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Invoking the Interpreter) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 288.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.010336 Tw 12 TL /F1 8 Tf 0 0 0 rg (The Python interpreter is usually installed as ) Tj /F5 8 Tf (/usr/local/bin/python) Tj /F1 8 Tf ( on those machines where it) Tj T* 0 Tw .135248 Tw (is available; putting ) Tj /F5 8 Tf (/usr/local/bin) Tj /F1 8 Tf ( in your Unix shell's search path makes it possible to start it by) Tj T* 0 Tw (typing the command) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 256.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 6.968 Tm /F5 8 Tf 12 TL (python) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 212.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .140939 Tw 12 TL /F1 8 Tf 0 0 0 rg (to the shell. Since the choice of the directory where the interpreter lives is an installation option, other) Tj T* 0 Tw 4.870997 Tw (places are possible; check with your local Python guru or system administrator. \(E.g.,) Tj T* 0 Tw /F5 8 Tf (/usr/local/python) Tj /F1 8 Tf ( is a popular alternative location.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 170.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .877228 Tw 12 TL /F1 8 Tf 0 0 0 rg (On Windows machines, the Python installation is usually placed in ) Tj /F5 8 Tf (C:\\Python26) Tj /F1 8 Tf (, though you can) Tj T* 0 Tw .991763 Tw (change this when you're running the installer. To add this directory to your path, you can type the) Tj T* 0 Tw (following command into the command prompt in a DOS box:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 137.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (set) Tj ( ) Tj (path) Tj .188235 .188235 .188235 rg (=%) Tj 0 0 0 rg (path) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg (;) Tj (C) Tj (:) Tj (\\) Tj (python26) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 105.3367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.063079 Tw 12 TL /F1 8 Tf 0 0 0 rg (Typing an end-of-file character \() Tj /F5 8 Tf (Control-D) Tj /F1 8 Tf ( on Unix, ) Tj /F5 8 Tf (Control-Z) Tj /F1 8 Tf ( on Windows\) at the primary prompt) Tj T* 0 Tw -0.094949 Tw (causes the interpreter to exit with a zero exit status. If that doesn't work, you can exit the interpreter by) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (3) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R276': class PDFStream 
276 0 obj
% page stream
<< /Length 6118 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (typing the following commands: ) Tj /F5 8 Tf (import sys; sys.exit\(\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 506.9367 cm
q
BT 1 0 0 1 0 78.256 Tm .094997 Tw 12 TL /F1 8 Tf 0 0 0 rg (The interpreter's line-editing features usually aren't very sophisticated. On Unix, whoever installed the) Tj T* 0 Tw 2.032921 Tw (interpreter may have enabled support for the GNU readline library, which adds more elaborate) Tj T* 0 Tw 1.210767 Tw (interactive editing and history features. Perhaps the quickest check to see whether command line) Tj T* 0 Tw 1.552704 Tw (editing is supported is typing Control-P to the first Python prompt you get. If it beeps, you have) Tj T* 0 Tw .328855 Tw (command line editing; see Appendix ) Tj /F4 8 Tf (tut-interacting) Tj /F1 8 Tf ( for an introduction to the keys. If nothing appears) Tj T* 0 Tw -0.249557 Tw (to happen, or if ) Tj /F5 8 Tf (^P) Tj /F1 8 Tf ( is echoed, command line editing isn't available; you'll only be able to use backspace) Tj T* 0 Tw (to remove characters from the current line.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 464.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.017869 Tw 12 TL /F1 8 Tf 0 0 0 rg (The interpreter operates somewhat like the Unix shell: when called with standard input connected to a) Tj T* 0 Tw .635465 Tw (tty device, it reads and executes commands interactively; when called with a file name argument or) Tj T* 0 Tw (with a file as standard input, it reads and executes a ) Tj /F4 8 Tf (script) Tj /F1 8 Tf ( from that file.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 410.9367 cm
q
BT 1 0 0 1 0 42.256 Tm .531465 Tw 12 TL /F1 8 Tf 0 0 0 rg (A second way of starting the interpreter is ) Tj /F5 8 Tf (python -c command [arg] ...) Tj /F1 8 Tf (, which executes the) Tj T* 0 Tw .579382 Tw (statement\(s\) in ) Tj /F4 8 Tf (command) Tj /F1 8 Tf (, analogous to the shell's ) Tj /F4 8 Tf (-c) Tj /F1 8 Tf ( option. Since Python statements often contain) Tj T* 0 Tw .079788 Tw (spaces or other characters that are special to the shell, it is best to quote ) Tj /F4 8 Tf (command) Tj /F1 8 Tf ( in its entirety with) Tj T* 0 Tw (double quotes.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 368.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .375731 Tw 12 TL /F1 8 Tf 0 0 0 rg (Some Python modules are also useful as scripts. These can be invoked using ) Tj /F5 8 Tf (python -m module) Tj T* 0 Tw .379577 Tw ([arg] ...) Tj /F1 8 Tf (, which executes the source file for ) Tj /F4 8 Tf (module) Tj /F1 8 Tf ( as if you had spelled out its full name on the) Tj T* 0 Tw (command line.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 302.9367 cm
q
BT 1 0 0 1 0 54.256 Tm .390248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Note that there is a difference between ) Tj /F5 8 Tf (python file) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (python ) Tj (<) Tj (file) Tj /F1 8 Tf (. In the latter case, input) Tj T* 0 Tw -0.204002 Tw (requests from the program, such as calls to ) Tj /F5 8 Tf (input\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (raw_input\(\)) Tj /F1 8 Tf (, are satisfied from ) Tj /F4 8 Tf (file) Tj /F1 8 Tf (. Since) Tj T* 0 Tw .819998 Tw (this file has already been read until the end by the parser before the program starts executing, the) Tj T* 0 Tw .746569 Tw (program will encounter end-of-file immediately. In the former case \(which is usually what you want\)) Tj T* 0 Tw (they are satisfied from whatever file or device is connected to standard input of the Python interpreter.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 260.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.101802 Tw 12 TL /F1 8 Tf 0 0 0 rg (When a script file is used, it is sometimes useful to be able to run the script and enter interactive mode) Tj T* 0 Tw .431367 Tw (afterwards. This can be done by passing ) Tj /F4 8 Tf (-i) Tj /F1 8 Tf ( before the script. \(This does not work if the script is read) Tj T* 0 Tw (from standard input, for the same reason as explained in the previous paragraph.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 260.9367 cm
Q
q
1 0 0 1 70.4315 260.9367 cm
Q
q
1 0 0 1 70.4315 260.9367 cm
Q
q
1 0 0 1 70.4315 230.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Argument Passing) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 140.5367 cm
q
BT 1 0 0 1 0 78.256 Tm .040265 Tw 12 TL /F1 8 Tf 0 0 0 rg (When known to the interpreter, the script name and additional arguments thereafter are passed to the) Tj T* 0 Tw .067798 Tw (script in the variable ) Tj /F5 8 Tf (sys.argv) Tj /F1 8 Tf (, which is a list of strings. Its length is at least one; when no script and) Tj T* 0 Tw .897248 Tw (no arguments are given, ) Tj /F5 8 Tf (sys.argv[0]) Tj /F1 8 Tf ( is an empty string. When the script name is given as ) Tj /F5 8 Tf ('-') Tj T* 0 Tw .176283 Tw /F1 8 Tf (\(meaning standard input\), ) Tj /F5 8 Tf (sys.argv[0]) Tj /F1 8 Tf ( is set to ) Tj /F5 8 Tf ('-') Tj /F1 8 Tf (. When ) Tj /F4 8 Tf (-c) Tj /F1 8 Tf ( ) Tj /F4 8 Tf (command) Tj /F1 8 Tf ( is used, ) Tj /F5 8 Tf (sys.argv[0]) Tj /F1 8 Tf ( is) Tj T* 0 Tw .529998 Tw (set to ) Tj /F5 8 Tf ('-c') Tj /F1 8 Tf (. When ) Tj /F4 8 Tf (-m) Tj /F1 8 Tf ( ) Tj /F4 8 Tf (module) Tj /F1 8 Tf ( is used, ) Tj /F5 8 Tf (sys.argv[0]) Tj /F1 8 Tf ( is set to the full name of the located module.) Tj T* 0 Tw .680798 Tw (Options found after ) Tj /F4 8 Tf (-c) Tj /F1 8 Tf ( ) Tj /F4 8 Tf (command) Tj /F1 8 Tf ( or ) Tj /F4 8 Tf (-m) Tj /F1 8 Tf ( ) Tj /F4 8 Tf (module) Tj /F1 8 Tf ( are not consumed by the Python interpreter's option) Tj T* 0 Tw (processing but left in ) Tj /F5 8 Tf (sys.argv) Tj /F1 8 Tf ( for the command or module to handle.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 140.5367 cm
Q
q
1 0 0 1 70.4315 140.5367 cm
Q
q
1 0 0 1 70.4315 140.5367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (4) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R277': class PDFStream 
277 0 obj
% page stream
<< /Length 5636 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 594.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Interactive Mode) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 528.5367 cm
q
BT 1 0 0 1 0 54.256 Tm .361051 Tw 12 TL /F1 8 Tf 0 0 0 rg (When commands are read from a tty, the interpreter is said to be in ) Tj /F4 8 Tf (interactive mode) Tj /F1 8 Tf (. In this mode it) Tj T* 0 Tw .923712 Tw (prompts for the next command with the ) Tj /F4 8 Tf (primary prompt) Tj /F1 8 Tf (, usually three greater-than signs \() Tj /F5 8 Tf (>) Tj (>) Tj (>) Tj /F1 8 Tf (\); for) Tj T* 0 Tw .604283 Tw (continuation lines it prompts with the ) Tj /F4 8 Tf (secondary prompt) Tj /F1 8 Tf (, by default three dots \() Tj /F5 8 Tf (...) Tj /F1 8 Tf (\). The interpreter) Tj T* 0 Tw .605598 Tw (prints a welcome message stating its version number and a copyright notice before printing the first) Tj T* 0 Tw (prompt:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 459.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (python) Tj  T* (Python) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2.6) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (\() Tj /F7 8 Tf .501961 .501961 .501961 rg (#1, Feb 28 2007, 00:02:06\)) Tj /F5 8 Tf 0 0 0 rg  T* (Type) Tj ( ) Tj .729412 .129412 .129412 rg ("help") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("copyright") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("credits") Tj 0 0 0 rg ( ) Tj /F6 8 Tf (or) Tj /F5 8 Tf ( ) Tj .729412 .129412 .129412 rg ("license") Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (more) Tj ( ) Tj (information) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 427.7367 cm
q
BT 1 0 0 1 0 18.256 Tm .066248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Continuation lines are needed when entering a multi-line construct. As an example, take a look at this) Tj T* 0 Tw /F5 8 Tf (if) Tj /F1 8 Tf ( statement:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 346.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (the_world_is_flat) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (the_world_is_flat) Tj (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("Be careful not to fall off!") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (Be) Tj ( ) Tj (careful) Tj ( ) Tj /F6 8 Tf (not) Tj /F5 8 Tf ( ) Tj (to) Tj ( ) Tj (fall) Tj ( ) Tj (off) Tj .941176 0 0 rg (!) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 338.9367 cm
Q
q
1 0 0 1 70.4315 338.9367 cm
Q
q
1 0 0 1 70.4315 338.9367 cm
Q
q
1 0 0 1 70.4315 306.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (The Interpreter and Its Environment) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 300.1367 cm
Q
q
1 0 0 1 70.4315 300.1367 cm
Q
q
1 0 0 1 70.4315 300.1367 cm
Q
q
1 0 0 1 70.4315 269.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Error Handling) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 191.7367 cm
q
BT 1 0 0 1 0 66.256 Tm -0.119296 Tw 12 TL /F1 8 Tf 0 0 0 rg (When an error occurs, the interpreter prints an error message and a stack trace. In interactive mode, it) Tj T* 0 Tw -0.083581 Tw (then returns to the primary prompt; when input came from a file, it exits with a nonzero exit status after) Tj T* 0 Tw .284248 Tw (printing the stack trace. \(Exceptions handled by an ) Tj /F5 8 Tf (except) Tj /F1 8 Tf ( clause in a ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement are not errors) Tj T* 0 Tw -0.303296 Tw (in this context.\) Some errors are unconditionally fatal and cause an exit with a nonzero exit; this applies) Tj T* 0 Tw .369331 Tw (to internal inconsistencies and some cases of running out of memory. All error messages are written) Tj T* 0 Tw (to the standard error stream; normal output from executed commands is written to standard output.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 149.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .206569 Tw 12 TL /F1 8 Tf 0 0 0 rg (Typing the interrupt character \(usually Control-C or DEL\) to the primary or secondary prompt cancels) Tj T* 0 Tw -0.080237 Tw (the input and returns to the primary prompt. ) Tj /F1 6 Tf 0 0 .501961 rg 4 Ts (1) Tj /F1 8 Tf 0 0 0 rg 0 Ts ( Typing an interrupt while a command is executing raises) Tj T* 0 Tw (the ) Tj /F5 8 Tf (KeyboardInterrupt) Tj /F1 8 Tf ( exception, which may be handled by a ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 149.7367 cm
Q
q
1 0 0 1 70.4315 149.7367 cm
Q
q
1 0 0 1 70.4315 149.7367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (5) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R278': class PDFStream 
278 0 obj
% page stream
<< /Length 5729 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 594.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Executable Python Scripts) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 564.5367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.176802 Tw 12 TL /F1 8 Tf 0 0 0 rg (On BSD'ish Unix systems, Python scripts can be made directly executable, like shell scripts, by putting) Tj T* 0 Tw (the line) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 531.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
.501961 .501961 .501961 rg
BT 1 0 0 1 0 6.968 Tm /F7 8 Tf 12 TL (#! /usr/bin/env python) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 475.7367 cm
q
BT 1 0 0 1 0 42.256 Tm .295332 Tw 12 TL /F1 8 Tf 0 0 0 rg (\(assuming that the interpreter is on the user's ) Tj /F3 8 Tf (PATH) Tj /F1 8 Tf (\) at the beginning of the script and giving the file) Tj T* 0 Tw .29222 Tw (an executable mode. The ) Tj /F5 8 Tf (#!) Tj /F1 8 Tf ( must be the first two characters of the file. On some platforms, this first) Tj T* 0 Tw .506586 Tw (line must end with a Unix-style line ending \() Tj /F5 8 Tf ('\\n') Tj /F1 8 Tf (\), not a Mac OS \() Tj /F5 8 Tf ('\\r') Tj /F1 8 Tf (\) or Windows \() Tj /F5 8 Tf ('\\r\\n') Tj /F1 8 Tf (\) line) Tj T* 0 Tw (ending. Note that the hash, or pound, character, ) Tj /F5 8 Tf ('#') Tj /F1 8 Tf (, is used to start a comment in Python.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 457.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The script can be given an executable mode, or permission, using the ) Tj /F3 8 Tf (chmod) Tj /F1 8 Tf ( command:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 424.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf .941176 0 0 rg ($) Tj 0 0 0 rg ( ) Tj (chmod) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (x) Tj ( ) Tj (myscript) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 380.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .274569 Tw 12 TL /F1 8 Tf 0 0 0 rg (On Windows systems, there is no notion of an "executable mode". The Python installer automatically) Tj T* 0 Tw -0.161475 Tw (associates ) Tj /F5 8 Tf (.py) Tj /F1 8 Tf ( files with ) Tj /F5 8 Tf (python.exe) Tj /F1 8 Tf ( so that a double-click on a Python file will run it as a script. The) Tj T* 0 Tw (extension can also be ) Tj /F5 8 Tf (.pyw) Tj /F1 8 Tf (, in that case, the console window that normally appears is suppressed.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 380.9367 cm
Q
q
1 0 0 1 70.4315 380.9367 cm
Q
q
1 0 0 1 70.4315 350.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Source Code Encoding) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 320.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .363798 Tw 12 TL /F1 8 Tf 0 0 0 rg (It is possible to use encodings different than ASCII in Python source files. The best way to do it is to) Tj T* 0 Tw (put one more special comment line right after the ) Tj /F5 8 Tf (#!) Tj /F1 8 Tf ( line to define the source file encoding:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 287.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
.501961 .501961 .501961 rg
BT 1 0 0 1 0 6.968 Tm /F7 8 Tf 12 TL (# -*- coding: encoding -*-) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 243.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .066248 Tw 12 TL /F1 8 Tf 0 0 0 rg (With that declaration, all characters in the source file will be treated as having the encoding ) Tj /F4 8 Tf (encoding) Tj /F1 8 Tf (,) Tj T* 0 Tw 1.29341 Tw (and it will be possible to directly write Unicode string literals in the selected encoding. The list of) Tj T* 0 Tw (possible encodings can be found in the Python Library Reference, in the section on ) Tj /F5 8 Tf (codecs) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 201.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .220613 Tw 12 TL /F1 8 Tf 0 0 0 rg (For example, to write Unicode literals including the Euro currency symbol, the ISO-8859-15 encoding) Tj T* 0 Tw .454443 Tw (can be used, with the Euro symbol having the ordinal value 164. This script will print the value 8364) Tj T* 0 Tw (\(the Unicode codepoint corresponding to the Euro symbol\) and then exit:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 132.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F7 8 Tf .501961 .501961 .501961 rg (# -*- coding: iso-8859-15 -*-) Tj /F5 8 Tf 0 0 0 rg  T*  T* (currency) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (u"\200") Tj 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (ord) Tj 0 0 0 rg (\() Tj (currency) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 100.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .481554 Tw 12 TL /F1 8 Tf 0 0 0 rg (If your editor supports saving files as ) Tj /F5 8 Tf (UTF-8) Tj /F1 8 Tf ( with a UTF-8 ) Tj /F4 8 Tf (byte order mark) Tj /F1 8 Tf ( \(aka BOM\), you can use) Tj T* 0 Tw 11.0436 Tw (that instead of an encoding declaration. IDLE supports this capability if) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (6) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R279': class PDFStream 
279 0 obj
% page stream
<< /Length 5025 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 572.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .872397 Tw 12 TL /F5 8 Tf 0 0 0 rg (Options/General/Default Source Encoding/UTF-8) Tj /F1 8 Tf ( is set. Notice that this signature is not) Tj T* 0 Tw -0.315469 Tw (understood in older Python releases \(2.2 and earlier\), and also not understood by the operating system) Tj T* 0 Tw (for script files with ) Tj /F5 8 Tf (#!) Tj /F1 8 Tf ( lines \(only used on Unix systems\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 518.9367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.527145 Tw 12 TL /F1 8 Tf 0 0 0 rg (By using UTF-8 \(either through the signature or an encoding declaration\), characters of most languages) Tj T* 0 Tw .268855 Tw (in the world can be used simultaneously in string literals and comments. Using non-ASCII characters) Tj T* 0 Tw -0.016802 Tw (in identifiers is not supported. To display all these characters properly, your editor must recognize that) Tj T* 0 Tw (the file is UTF-8, and it must use a font that supports all the characters in the file.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 518.9367 cm
Q
q
1 0 0 1 70.4315 518.9367 cm
Q
q
1 0 0 1 70.4315 518.9367 cm
Q
q
1 0 0 1 70.4315 488.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (The Interactive Startup File) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 434.5367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.051145 Tw 12 TL /F1 8 Tf 0 0 0 rg (When you use Python interactively, it is frequently handy to have some standard commands executed) Tj T* 0 Tw 1.701598 Tw (every time the interpreter is started. You can do this by setting an environment variable named) Tj T* 0 Tw .904265 Tw /F3 8 Tf (PYTHONSTARTUP) Tj /F1 8 Tf ( to the name of a file containing your start-up commands. This is similar to the) Tj T* 0 Tw /F5 8 Tf (.profile) Tj /F1 8 Tf ( feature of the Unix shells.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 368.5367 cm
q
BT 1 0 0 1 0 54.256 Tm .194586 Tw 12 TL /F1 8 Tf 0 0 0 rg (This file is only read in interactive sessions, not when Python reads commands from a script, and not) Tj T* 0 Tw 1.685998 Tw (when ) Tj /F5 8 Tf (/dev/tty) Tj /F1 8 Tf ( is given as the explicit source of commands \(which otherwise behaves like an) Tj T* 0 Tw -0.190464 Tw (interactive session\). It is executed in the same namespace where interactive commands are executed,) Tj T* 0 Tw .649748 Tw (so that objects that it defines or imports can be used without qualification in the interactive session.) Tj T* 0 Tw (You can also change the prompts ) Tj /F5 8 Tf (sys.ps1) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (sys.ps2) Tj /F1 8 Tf ( in this file.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 314.5367 cm
q
BT 1 0 0 1 0 42.256 Tm .65222 Tw 12 TL /F1 8 Tf 0 0 0 rg (If you want to read an additional start-up file from the current directory, you can program this in the) Tj T* 0 Tw 10.82228 Tw (global start-up file using code like ) Tj /F5 8 Tf (if os.path.isfile\('.pythonrc.py'\):) Tj T* 0 Tw -0.435752 Tw (execfile\('.pythonrc.py'\)) Tj /F1 8 Tf (. If you want to use the startup file in a script, you must do this explicitly) Tj T* 0 Tw (in the script:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 245.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (os) Tj /F5 8 Tf 0 0 0 rg  T* (filename) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (os) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (environ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (get) Tj (\() Tj .729412 .129412 .129412 rg ('PYTHONSTARTUP') Tj 0 0 0 rg (\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (filename) Tj ( ) Tj /F6 8 Tf (and) Tj /F5 8 Tf ( ) Tj (os) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (path) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (isfile) Tj (\() Tj (filename) Tj (\):) Tj  T* (    ) Tj 0 .439216 .12549 rg (execfile) Tj 0 0 0 rg (\() Tj (filename) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 225.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 161.938 0 Td 12 TL /F1 8 Tf .545098 0 0 rg (Footnotes) Tj T* -161.938 0 Td ET
Q
Q
q
1 0 0 1 70.4315 225.7367 cm
Q
q
1 0 0 1 70.4315 207.7367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 3 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 .501961 rg (1) Tj T* ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (A problem with the GNU Readline package may prevent this.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 207.7367 cm
Q
q
1 0 0 1 70.4315 207.7367 cm
Q
q
1 0 0 1 70.4315 207.7367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (7) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R280': class PDFStream 
280 0 obj
% page stream
<< /Length 5818 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 589.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Una Introducci\363n Informal a Python) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 511.7367 cm
q
BT 1 0 0 1 0 66.256 Tm .011248 Tw 12 TL /F1 8 Tf 0 0 0 rg (En los siguientes ejemplos, las entradas y salidas son distinguidas por la presencia o ausencia de los) Tj T* 0 Tw .427712 Tw (prompts \() Tj /F5 8 Tf (`) Tj (>) Tj (>) Tj (>) Tj (`) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (`...`) Tj /F1 8 Tf (\): para reproducir los ejemplos, debes escribir todo lo que est\351 despu\351s) Tj T* 0 Tw .899748 Tw (del prompt, cuando este aparezca; las l\355neas que no comiencen con el prompt son las salidas del) Tj T* 0 Tw .844939 Tw (int\351rprete. Tenga en cuenta que el prompt secundario que aparece por s\355 s\363lo en una l\355nea de un) Tj T* 0 Tw .959731 Tw (ejemplo significa que debe escribir una l\355nea en blanco; esto es usado para terminar un comando) Tj T* 0 Tw (multil\355nea.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 445.7367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.367717 Tw 12 TL /F1 8 Tf 0 0 0 rg (Muchos de los ejemplos de este manual, incluso aquellos ingresados en el prompt interactivo, incluyen) Tj T* 0 Tw .051141 Tw (comentarios. Los comentarios en Python comienzan con el caracter numeral, ) Tj /F5 8 Tf (#) Tj /F1 8 Tf (, y se extienden hasta) Tj T* 0 Tw 1.343763 Tw (el final f\355sico de la l\355nea. Un comentario quiz\341s aparezca al comiendo de la l\355nea o seguidos de) Tj T* 0 Tw .633331 Tw (espacios blancos o c\363digo, pero sin una cadena de caracteres. Un caracter numeral dentro de una) Tj T* 0 Tw (cadena de caracteres es s\363lo un caracter numeral.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 427.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Algunos ejemplos:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 358.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F7 8 Tf .501961 .501961 .501961 rg (# este es el primer comentario) Tj /F5 8 Tf 0 0 0 rg  T* (SPAM) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (                 ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# y este es el segundo comentario) Tj /F5 8 Tf 0 0 0 rg  T* (                         ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# ... y ahora un tercero!) Tj /F5 8 Tf 0 0 0 rg  T* (STRING) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("# Este no es un comentario") Tj .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 350.9367 cm
Q
q
1 0 0 1 70.4315 350.9367 cm
Q
q
1 0 0 1 70.4315 350.9367 cm
Q
q
1 0 0 1 70.4315 318.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Usar Python como una Calculadora) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 288.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .871731 Tw 12 TL /F1 8 Tf 0 0 0 rg (Vamos a probar algunos comandos simples en Python. Inicia un int\351rprete y espera por el prompt) Tj T* 0 Tw (primario, ) Tj /F5 8 Tf (>) Tj (>) Tj (>) Tj /F1 8 Tf (. \(No deber\355a demorar tanto\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 288.1367 cm
Q
q
1 0 0 1 70.4315 288.1367 cm
Q
q
1 0 0 1 70.4315 288.1367 cm
Q
q
1 0 0 1 70.4315 257.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (N\372meros) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 215.7367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.061426 Tw 12 TL /F1 8 Tf 0 0 0 rg (El int\351rprete act\372a como una simple calculadora; puedes tipear una expresi\363n y este escribir\341 los) Tj T* 0 Tw 1.265554 Tw (valores. La sintaxis es sencilla: los operadores ) Tj /F5 8 Tf (+) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (-) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (*) Tj /F1 8 Tf ( y ) Tj /F5 8 Tf (/) Tj /F1 8 Tf ( funcionan como en la mayor\355a de los) Tj T* 0 Tw (lenguajes \(por ejemplo, Pascal o C\); los par\351ntesis pueden ser usados para agrupar. Por ejemplo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 110.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Este es un comentario) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# y un comentario en la misma l\355nea que el c\363digo) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (8) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R281': class PDFStream 
281 0 obj
% page stream
<< /Length 5715 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 512.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (50) Tj /F5 8 Tf .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (\)) Tj .188235 .188235 .188235 rg (/) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# La divisi\363n entera retorna el piso:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf .188235 .188235 .188235 rg (/) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf .188235 .188235 .188235 rg (/-) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.089649 Tw 12 TL /F1 8 Tf 0 0 0 rg (El signo igual \() Tj /F5 8 Tf (=) Tj /F1 8 Tf (\) es usado para asignar un valor a una variable. Luego, ning\372n resultado es mostrado) Tj T* 0 Tw (antes del pr\363ximo prompt:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 411.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (width) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (20) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (height) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (width) Tj ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj (height) Tj  T* /F6 8 Tf .376471 0 .878431 rg (900) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 391.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Un valor puede ser asignado a varias variables simult\341neamente:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 286.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (y) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (z) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Zero x, y and z) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (x) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (y) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (z) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 254.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .485065 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los n\372meros de punto flotante tiene soporte completo; las operaciones con mezclas en los tipos de) Tj T* 0 Tw (los operandos convierte los enteros a punto flotante:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 185.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3.75) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1.5) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (7.5) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7.0) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (3.5) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 141.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .01569 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los n\372meros complejos tambi\351n est\341n soportados; los n\372meros imaginarios son escritos con el sufijo) Tj T* 0 Tw 1.563998 Tw (de ) Tj /F5 8 Tf (j) Tj /F1 8 Tf ( o ) Tj /F5 8 Tf (J) Tj /F1 8 Tf (. Los n\372meros complejos con un componente real que no sea cero son escritos como) Tj T* 0 Tw /F5 8 Tf (\(real+imagj\)) Tj /F1 8 Tf (, o pueden ser escrito con la funci\363n ) Tj /F5 8 Tf (complex\(real, imag\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 191.2406 0 Td 12 TL /F1 8 Tf 0 0 0 rg (9) Tj T* -191.2406 0 Td ET
Q
Q
 
endstream

endobj
% 'R282': class PDFStream 
282 0 obj
% page stream
<< /Length 7194 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 476.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (j) Tj ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (J) Tj  T* (\() Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (j) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (j) Tj ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (complex) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (\() Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (j) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (j) Tj .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* (\() Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (j) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (j) Tj (\)) Tj .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* (\() Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (j) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (j) Tj (\)) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (j) Tj (\)) Tj  T* (\() Tj /F6 8 Tf .376471 0 .878431 rg (1.5) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (0.5) Tj /F5 8 Tf 0 0 0 rg (j) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 444.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.209431 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los n\372meros complejos son siempre representados como dos n\372meros de punto flotante, la parte real) Tj T* 0 Tw (y la imaginaria. Para extraer estas partes desde un n\372mero complejo ) Tj /F4 8 Tf (z) Tj /F1 8 Tf (, usa ) Tj /F5 8 Tf (z.real) Tj /F1 8 Tf ( y ) Tj /F5 8 Tf (z.imag) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 363.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (1.5) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (0.5) Tj /F5 8 Tf 0 0 0 rg (j) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (real) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1.5) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (imag) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0.5) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 307.3367 cm
q
BT 1 0 0 1 0 42.256 Tm .712265 Tw 12 TL /F1 8 Tf 0 0 0 rg (La funci\363n de conversi\363n de los punto flotante y enteros \() Tj /F5 8 Tf (float\(\)) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (int\(\)) Tj /F1 8 Tf ( y ) Tj /F5 8 Tf (long\(\)) Tj /F1 8 Tf (\) no funciona) Tj T* 0 Tw .734748 Tw (para n\372meros complejos --- aqu\355 no hay una forma correcta de convertir un n\372mero complejo a un) Tj T* 0 Tw .439731 Tw (n\372mero real. Usa ) Tj /F5 8 Tf (abs\(z\)) Tj /F1 8 Tf ( para obtener esta magnitud \(como un flotante\) o ) Tj /F5 8 Tf (z.real) Tj /F1 8 Tf ( para obtener la) Tj T* 0 Tw (parte real.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 142.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 156 re B*
Q
q
BT 1 0 0 1 0 138.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (3.0) Tj /F5 8 Tf .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (4.0) Tj /F5 8 Tf 0 0 0 rg (j) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (float) Tj 0 0 0 rg (\() Tj (a) Tj (\)) Tj  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (TypeError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (can) Tj .729412 .129412 .129412 rg ('t convert complex to float; use abs\(z\)) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (real) Tj  T* /F6 8 Tf .376471 0 .878431 rg (3.0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (imag) Tj  T* /F6 8 Tf .376471 0 .878431 rg (4.0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (abs) Tj 0 0 0 rg (\() Tj (a) Tj (\)) Tj (  ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# sqrt\(a.real**2 + a.imag**2\)) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (5.0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 110.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .851248 Tw 12 TL /F1 8 Tf 0 0 0 rg (En el modo interactivo, la \372ltima expresion impresa es asignada a la variable ) Tj /F5 8 Tf (_) Tj /F1 8 Tf (. Esto significa que) Tj T* 0 Tw .203141 Tw (cuando est\351s usando Python como una calculadora de escritorio, es m\341s f\341cil seguir calculando, por) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (10) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R283': class PDFStream 
283 0 obj
% page stream
<< /Length 5650 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (ejemplo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 468.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tax) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12.5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (price) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100.50) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (price) Tj ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj (tax) Tj  T* /F6 8 Tf .376471 0 .878431 rg (12.5625) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (price) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (_) Tj  T* /F6 8 Tf .376471 0 .878431 rg (113.0625) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (round) Tj 0 0 0 rg (\() Tj (_) Tj (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (113.06) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 424.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .486131 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esta variable deber\355a ser tratada como de s\363lo lectura por el usuario. No asignes expl\355citamente un) Tj T* 0 Tw 1.411712 Tw (valor a esta --- crear\341s una variable local independiente con el mismo nombre enmascarando la) Tj T* 0 Tw (variable incorporada con el comportamiento m\341gico.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 424.1367 cm
Q
q
1 0 0 1 70.4315 424.1367 cm
Q
q
1 0 0 1 70.4315 424.1367 cm
Q
q
1 0 0 1 70.4315 393.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Cadenas de caracteres) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 363.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.018002 Tw 12 TL /F1 8 Tf 0 0 0 rg (Besides numbers, Python can also manipulate strings, which can be expressed in several ways. They) Tj T* 0 Tw (can be enclosed in single quotes or double quotes:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 198.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 156 re B*
Q
q
BT 1 0 0 1 0 138.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('spam eggs') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg ('spam eggs') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('doesn) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\') Tj /F5 8 Tf .729412 .129412 .129412 rg (t') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg ("doesn't") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("doesn't") Tj 0 0 0 rg  T* .729412 .129412 .129412 rg ("doesn't") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('"Yes," he said.') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg ('"Yes," he said.') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (") Tj /F6 8 Tf .376471 .376471 .376471 rg (\\") Tj /F5 8 Tf .729412 .129412 .129412 rg (Yes,) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\") Tj /F5 8 Tf .729412 .129412 .129412 rg ( he said.") Tj 0 0 0 rg  T* .729412 .129412 .129412 rg ('"Yes," he said.') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('"Isn) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\') Tj /F5 8 Tf .729412 .129412 .129412 rg (t," she said.') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg ('"Isn) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\') Tj /F5 8 Tf .729412 .129412 .129412 rg (t," she said.') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 166.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.237752 Tw 12 TL /F1 8 Tf 0 0 0 rg (String literals can span multiple lines in several ways. Continuation lines can be used, with a backslash) Tj T* 0 Tw (as the last character on the line indicating that the next line is a logical continuation of the line:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 110.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (hello) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("This is a rather long string containing) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n\\) Tj T* /F5 8 Tf .729412 .129412 .129412 rg (several lines of text just as you would do in C.) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n\\) Tj T* /F5 8 Tf .729412 .129412 .129412 rg (    Note that whitespace at the beginning of the line is) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (11) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R284': class PDFStream 
284 0 obj
% page stream
<< /Length 5325 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .729412 .129412 .129412 rg ( significant.") Tj 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (hello) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 528.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .334351 Tw 12 TL /F1 8 Tf 0 0 0 rg (Note that newlines still need to be embedded in the string using ) Tj /F5 8 Tf (\\n) Tj /F1 8 Tf (; the newline following the trailing) Tj T* 0 Tw (backslash is discarded. This example would print the following:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 471.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (This) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (a) Tj ( ) Tj (rather) Tj ( ) Tj 0 .439216 .12549 rg (long) Tj 0 0 0 rg ( ) Tj (string) Tj ( ) Tj (containing) Tj  T* (several) Tj ( ) Tj (lines) Tj ( ) Tj (of) Tj ( ) Tj (text) Tj ( ) Tj (just) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (as) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (you) Tj ( ) Tj (would) Tj ( ) Tj (do) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (C) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj (Note) Tj ( ) Tj (that) Tj ( ) Tj (whitespace) Tj ( ) Tj (at) Tj ( ) Tj (the) Tj ( ) Tj (beginning) Tj ( ) Tj (of) Tj ( ) Tj (the) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (significant) Tj .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 427.3367 cm
q
BT 1 0 0 1 0 30.256 Tm .184233 Tw 12 TL /F1 8 Tf 0 0 0 rg (If we make the string literal a "raw" string, however, the ) Tj /F5 8 Tf (\\n) Tj /F1 8 Tf ( sequences are not converted to newlines,) Tj T* 0 Tw .217893 Tw (but the backslash at the end of the line, and the newline character in the source, are both included in) Tj T* 0 Tw (the string as data. Thus, the example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 358.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (hello) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (r"This is a rather long string containing\\n) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\) Tj T* /F5 8 Tf .729412 .129412 .129412 rg (several lines of text much as you would do in C.") Tj 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (hello) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 338.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (would print:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 293.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (This) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (a) Tj ( ) Tj (rather) Tj ( ) Tj 0 .439216 .12549 rg (long) Tj 0 0 0 rg ( ) Tj (string) Tj ( ) Tj (containing) Tj (\\) Tj (n) Tj (\\) Tj T* (several) Tj ( ) Tj (lines) Tj ( ) Tj (of) Tj ( ) Tj (text) Tj ( ) Tj (much) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (as) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (you) Tj ( ) Tj (would) Tj ( ) Tj (do) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (C) Tj .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 261.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.126528 Tw 12 TL /F1 8 Tf 0 0 0 rg (Or, strings can be surrounded in a pair of matching triple-quotes: ) Tj /F5 8 Tf (""") Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (''') Tj /F1 8 Tf (. End of lines do not need) Tj T* 0 Tw (to be escaped when using triple-quotes, but they will be included in the string.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 180.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (""") Tj T* (Usage: thingy [OPTIONS]) Tj T* (     -h                        Display this usage message) Tj T* (     -H hostname               Hostname to connect to) Tj T* (""") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 160.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (produces the following output:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 104.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (Usage) Tj (:) Tj ( ) Tj (thingy) Tj ( ) Tj ([) Tj (OPTIONS) Tj (]) Tj  T* (     ) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (h) Tj (                        ) Tj (Display) Tj ( ) Tj (this) Tj ( ) Tj (usage) Tj ( ) Tj (message) Tj  T* (     ) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (H) Tj ( ) Tj (hostname) Tj (               ) Tj (Hostname) Tj ( ) Tj (to) Tj ( ) Tj (connect) Tj ( ) Tj (to) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (12) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R285': class PDFStream 
285 0 obj
% page stream
<< /Length 6333 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.9367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.014891 Tw 12 TL /F1 8 Tf 0 0 0 rg (The interpreter prints the result of string operations in the same way as they are typed for input: inside) Tj T* 0 Tw 1.059141 Tw (quotes, and with quotes and other funny characters escaped by backslashes, to show the precise) Tj T* 0 Tw 1.107057 Tw (value. The string is enclosed in double quotes if the string contains a single quote and no double) Tj T* 0 Tw -0.306752 Tw (quotes, else it's enclosed in single quotes. \(The ) Tj /F5 8 Tf (print) Tj /F1 8 Tf ( statement, described later, can be used to write) Tj T* 0 Tw (strings without quotes or escapes.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 530.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Strings can be concatenated \(glued together\) with the ) Tj /F5 8 Tf (+) Tj /F1 8 Tf ( operator, and repeated with ) Tj /F5 8 Tf (*) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 450.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Help') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('A') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj  T* .729412 .129412 .129412 rg ('HelpA') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (') Tj (<) Tj (') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (word) Tj .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (') Tj (>) Tj (') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg (') Tj (<) Tj (HelpAHelpAHelpAHelpAHelpA) Tj (>) Tj (') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 406.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .693598 Tw 12 TL /F1 8 Tf 0 0 0 rg (Two string literals next to each other are automatically concatenated; the first line above could also) Tj T* 0 Tw .860248 Tw (have been written ) Tj /F5 8 Tf (word = 'Help' 'A') Tj /F1 8 Tf (; this only works with two literals, not with arbitrary string) Tj T* 0 Tw (expressions:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 277.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('str') Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('ing') Tj 0 0 0 rg (                   ) Tj /F7 8 Tf .501961 .501961 .501961 rg (#  ) Tj (<) Tj (-  This is ok) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('string') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('str') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (strip) Tj (\(\)) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('ing') Tj 0 0 0 rg (   ) Tj /F7 8 Tf .501961 .501961 .501961 rg (#  ) Tj (<) Tj (-  This is ok) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('string') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('str') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (strip) Tj (\(\)) Tj ( ) Tj .729412 .129412 .129412 rg ('ing') Tj 0 0 0 rg (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (#  ) Tj (<) Tj (-  This is invalid) Tj /F5 8 Tf 0 0 0 rg  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* (    ) Tj .729412 .129412 .129412 rg ('str') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (strip) Tj (\(\)) Tj ( ) Tj .729412 .129412 .129412 rg ('ing') Tj 0 0 0 rg  T* (                      ) Tj .188235 .188235 .188235 rg (^) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (SyntaxError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (invalid) Tj ( ) Tj (syntax) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 233.3367 cm
q
BT 1 0 0 1 0 30.256 Tm .482586 Tw 12 TL /F1 8 Tf 0 0 0 rg (Strings can be subscripted \(indexed\); like in C, the first character of a string has subscript \(index\) 0.) Tj T* 0 Tw .035332 Tw (There is no separate character type; a character is simply a string of size one. Like in Icon, substrings) Tj T* 0 Tw (can be specified with the ) Tj /F4 8 Tf (slice notation) Tj /F1 8 Tf (: two indices separated by a colon.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 140.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .729412 .129412 .129412 rg ('A') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .729412 .129412 .129412 rg ('He') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .729412 .129412 .129412 rg ('lp') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 108.5367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.018931 Tw 12 TL /F1 8 Tf 0 0 0 rg (Slice indices have useful defaults; an omitted first index defaults to zero, an omitted second index) Tj T* 0 Tw (defaults to the size of the string being sliced.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (13) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R286': class PDFStream 
286 0 obj
% page stream
<< /Length 6509 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([:) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# The first two characters) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('He') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (:]) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Everything except the first two characters) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('lpA') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .788248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Unlike a C string, Python strings cannot be changed. Assigning to an indexed position in the string) Tj T* 0 Tw (results in an error:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 399.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('x') Tj 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (TypeError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj 0 .439216 .12549 rg (object) Tj 0 0 0 rg ( ) Tj (doesn) Tj .729412 .129412 .129412 rg ('t support item assignment) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([:) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Splat') Tj 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (TypeError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj 0 .439216 .12549 rg (object) Tj 0 0 0 rg ( ) Tj (doesn) Tj .729412 .129412 .129412 rg ('t support slice assignment) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 379.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (However, creating a new string with the combined content is easy and efficient:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 310.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('x') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (:]) Tj  T* .729412 .129412 .129412 rg ('xelpA') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Splat') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .729412 .129412 .129412 rg ('SplatA') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 290.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Here's a useful invariant of slice operations: ) Tj /F5 8 Tf (s[:i] + s[i:]) Tj /F1 8 Tf ( equals ) Tj /F5 8 Tf (s) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 221.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([:) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (:]) Tj  T* .729412 .129412 .129412 rg ('HelpA') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([:) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (:]) Tj  T* .729412 .129412 .129412 rg ('HelpA') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 189.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.329649 Tw 12 TL /F1 8 Tf 0 0 0 rg (Degenerate slice indices are handled gracefully: an index that is too large is replaced by the string size,) Tj T* 0 Tw (an upper bound smaller than the lower bound returns an empty string.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 108.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .729412 .129412 .129412 rg ('elpA') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (:]) Tj  T* .729412 .129412 .129412 rg ('') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (14) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R287': class PDFStream 
287 0 obj
% page stream
<< /Length 6939 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf .729412 .129412 .129412 rg ('') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 564.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Indices may be negative numbers, to start counting from the right. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 447.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# The last character) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('A') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# The last-but-one character) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('p') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (:]) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# The last two characters) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('pA') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([:) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Everything except the last two characters) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('Hel') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 427.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (But note that -0 is really the same as 0, so it does not count from the right!) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 382.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# \(since -0 equals 0\)) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('H') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 350.5367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.741664 Tw 12 TL /F1 8 Tf 0 0 0 rg (Out-of-range negative slice indices are truncated, but don't try this for single-element \(non-slice\)) Tj T* 0 Tw (indices:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 257.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (:]) Tj  T* .729412 .129412 .129412 rg ('HelpA') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (word) Tj ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (]) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# error) Tj /F5 8 Tf 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (IndexError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (string) Tj ( ) Tj (index) Tj ( ) Tj (out) Tj ( ) Tj (of) Tj ( ) Tj 0 .439216 .12549 rg (range) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 213.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .299528 Tw 12 TL /F1 8 Tf 0 0 0 rg (One way to remember how slices work is to think of the indices as pointing ) Tj /F4 8 Tf (between) Tj /F1 8 Tf ( characters, with) Tj T* 0 Tw -0.077906 Tw (the left edge of the first character numbered 0. Then the right edge of the last character of a string of ) Tj /F4 8 Tf (n) Tj T* 0 Tw /F1 8 Tf (characters has index ) Tj /F4 8 Tf (n) Tj /F1 8 Tf (, for example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 132.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+---+---+---+---+---+) Tj 0 0 0 rg  T* ( ) Tj .188235 .188235 .188235 rg (|) Tj 0 0 0 rg ( ) Tj (H) Tj ( ) Tj .188235 .188235 .188235 rg (|) Tj 0 0 0 rg ( ) Tj (e) Tj ( ) Tj .188235 .188235 .188235 rg (|) Tj 0 0 0 rg ( ) Tj (l) Tj ( ) Tj .188235 .188235 .188235 rg (|) Tj 0 0 0 rg ( ) Tj (p) Tj ( ) Tj .188235 .188235 .188235 rg (|) Tj 0 0 0 rg ( ) Tj (A) Tj ( ) Tj .188235 .188235 .188235 rg (|) Tj 0 0 0 rg  T* ( ) Tj .188235 .188235 .188235 rg (+---+---+---+---+---+) Tj 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (  ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (  ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (  ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (  ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 100.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .289893 Tw 12 TL /F1 8 Tf 0 0 0 rg (The first row of numbers gives the position of the indices 0...5 in the string; the second row gives the) Tj T* 0 Tw 1.198131 Tw (corresponding negative indices. The slice from ) Tj /F4 8 Tf (i) Tj /F1 8 Tf ( to ) Tj /F4 8 Tf (j) Tj /F1 8 Tf ( consists of all characters between the edges) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (15) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R288': class PDFStream 
288 0 obj
% page stream
<< /Length 5508 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (labeled ) Tj /F4 8 Tf (i) Tj /F1 8 Tf ( and ) Tj /F4 8 Tf (j) Tj /F1 8 Tf (, respectively.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.164224 Tw 12 TL /F1 8 Tf 0 0 0 rg (For non-negative indices, the length of a slice is the difference of the indices, if both are within bounds.) Tj T* 0 Tw (For example, the length of ) Tj /F5 8 Tf (word[1:3]) Tj /F1 8 Tf ( is 2.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 548.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The built-in function ) Tj /F5 8 Tf (len\(\)) Tj /F1 8 Tf ( returns the length of a string:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 492.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (s) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('supercalifragilisticexpialidocious') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (s) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (34) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 484.1367 cm
Q
q
1 0 0 1 70.4315 453.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (See also) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 435.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F8 8 Tf 0 0 0 rg (typesseq) Tj T* ET
Q
Q
q
1 0 0 1 80.4315 411.7367 cm
q
BT 1 0 0 1 0 18.256 Tm .758569 Tw 12 TL /F1 8 Tf 0 0 0 rg (Strings, and the Unicode strings described in the next section, are examples of ) Tj /F4 8 Tf (sequence types) Tj /F1 8 Tf (,) Tj T* 0 Tw (and support the common operations supported by such types.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 395.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F8 8 Tf 0 0 0 rg (string-methods) Tj T* ET
Q
Q
q
1 0 0 1 80.4315 371.7367 cm
q
BT 1 0 0 1 0 18.256 Tm .156283 Tw 12 TL /F1 8 Tf 0 0 0 rg (Both strings and Unicode strings support a large number of methods for basic transformations and) Tj T* 0 Tw (searching.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 355.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F8 8 Tf 0 0 0 rg (new-string-formatting) Tj T* ET
Q
Q
q
1 0 0 1 80.4315 343.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Information about string formatting with ) Tj /F5 8 Tf (str.format\(\)) Tj /F1 8 Tf ( is described here.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 327.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F8 8 Tf 0 0 0 rg (string-formatting) Tj T* ET
Q
Q
q
1 0 0 1 80.4315 303.7367 cm
q
BT 1 0 0 1 0 18.256 Tm .114931 Tw 12 TL /F1 8 Tf 0 0 0 rg (The old formatting operations invoked when strings and Unicode strings are the left operand of the) Tj T* 0 Tw /F5 8 Tf (%) Tj /F1 8 Tf ( operator are described in more detail here.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 303.7367 cm
Q
q
1 0 0 1 70.4315 303.7367 cm
Q
q
1 0 0 1 70.4315 303.7367 cm
Q
q
1 0 0 1 70.4315 273.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Unicode Strings) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 231.3367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.186586 Tw 12 TL /F1 8 Tf 0 0 0 rg (Starting with Python 2.0 a new data type for storing text data is available to the programmer: the) Tj T* 0 Tw .799075 Tw (Unicode object. It can be used to store and manipulate Unicode data \(see ) Tj 0 0 .501961 rg (http://www.unicode.org/) Tj 0 0 0 rg (\)) Tj T* 0 Tw (and integrates well with the existing string objects, providing auto-conversions where necessary.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 165.3367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.072252 Tw 12 TL /F1 8 Tf 0 0 0 rg (Unicode has the advantage of providing one ordinal for every character in every script used in modern) Tj T* 0 Tw .363712 Tw (and ancient texts. Previously, there were only 256 possible ordinals for script characters. Texts were) Tj T* 0 Tw -0.041649 Tw (typically bound to a code page which mapped the ordinals to script characters. This lead to very much) Tj T* 0 Tw -0.495717 Tw (confusion especially with respect to internationalization \(usually written as ) Tj /F5 8 Tf (i18n) Tj /F1 8 Tf ( --- ) Tj /F5 8 Tf ('i') Tj /F1 8 Tf ( + 18 characters) Tj T* 0 Tw (+ ) Tj /F5 8 Tf ('n') Tj /F1 8 Tf (\) of software. Unicode solves these problems by defining one code page for all scripts.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 147.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Creating Unicode strings in Python is just as simple as creating normal strings:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 102.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (u'Hello World !') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg (u'Hello World !') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (16) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R289': class PDFStream 
289 0 obj
% page stream
<< /Length 5575 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 572.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .513893 Tw 12 TL /F1 8 Tf 0 0 0 rg (The small ) Tj /F5 8 Tf ('u') Tj /F1 8 Tf ( in front of the quote indicates that a Unicode string is supposed to be created. If you) Tj T* 0 Tw .510748 Tw (want to include special characters in the string, you can do so by using the Python ) Tj /F4 8 Tf (Unicode-Escape) Tj T* 0 Tw /F1 8 Tf (encoding. The following example shows how:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 528.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (u'Hello) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\u0020) Tj /F5 8 Tf .729412 .129412 .129412 rg (World !') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg (u'Hello World !') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 496.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.076288 Tw 12 TL /F1 8 Tf 0 0 0 rg (The escape sequence ) Tj /F5 8 Tf (\\u0020) Tj /F1 8 Tf ( indicates to insert the Unicode character with the ordinal value 0x0020) Tj T* 0 Tw (\(the space character\) at the given position.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 442.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .255075 Tw 12 TL /F1 8 Tf 0 0 0 rg (Other characters are interpreted by using their respective ordinal values directly as Unicode ordinals.) Tj T* 0 Tw -0.042119 Tw (If you have literal strings in the standard Latin-1 encoding that is used in many Western countries, you) Tj T* 0 Tw .182443 Tw (will find it convenient that the lower 256 characters of Unicode are the same as the 256 characters of) Tj T* 0 Tw (Latin-1.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 400.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.369002 Tw 12 TL /F1 8 Tf 0 0 0 rg (For experts, there is also a raw mode just like the one for normal strings. You have to prefix the opening) Tj T* 0 Tw .963465 Tw (quote with 'ur' to have Python use the ) Tj /F4 8 Tf (Raw-Unicode-Escape) Tj /F1 8 Tf ( encoding. It will only apply the above) Tj T* 0 Tw /F5 8 Tf (\\uXXXX) Tj /F1 8 Tf ( conversion if there is an uneven number of backslashes in front of the small 'u'.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 331.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (ur'Hello\\u0020World !') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg (u'Hello World !') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (ur'Hello) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\\\) Tj /F5 8 Tf .729412 .129412 .129412 rg (u0020World !') Tj 0 0 0 rg  T* .729412 .129412 .129412 rg (u'Hello) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\\\\\\\) Tj /F5 8 Tf .729412 .129412 .129412 rg (u0020World !') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 299.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .874443 Tw 12 TL /F1 8 Tf 0 0 0 rg (The raw mode is most useful when you have to enter lots of backslashes, as can be necessary in) Tj T* 0 Tw (regular expressions.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 269.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .189065 Tw 12 TL /F1 8 Tf 0 0 0 rg (Apart from these standard encodings, Python provides a whole set of other ways of creating Unicode) Tj T* 0 Tw (strings on the basis of a known encoding.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 269.3367 cm
Q
q
1 0 0 1 70.4315 191.3367 cm
q
BT 1 0 0 1 0 66.256 Tm 1.714997 Tw 12 TL /F1 8 Tf 0 0 0 rg (The built-in function ) Tj /F5 8 Tf (unicode\(\)) Tj /F1 8 Tf ( provides access to all registered Unicode codecs \(COders and) Tj T* 0 Tw .966569 Tw (DECoders\). Some of the more well known encodings which these codecs can convert are ) Tj /F4 8 Tf (Latin-1) Tj /F1 8 Tf (,) Tj T* 0 Tw 1.348613 Tw /F4 8 Tf (ASCII) Tj /F1 8 Tf (, ) Tj /F4 8 Tf (UTF-8) Tj /F1 8 Tf (, and ) Tj /F4 8 Tf (UTF-16) Tj /F1 8 Tf (. The latter two are variable-length encodings that store each Unicode) Tj T* 0 Tw .289248 Tw (character in one or more bytes. The default encoding is normally set to ASCII, which passes through) Tj T* 0 Tw -0.113557 Tw (characters in the range 0 to 127 and rejects any other characters with an error. When a Unicode string) Tj T* 0 Tw (is printed, written to a file, or converted with ) Tj /F5 8 Tf (str\(\)) Tj /F1 8 Tf (, conversion takes place using this default encoding.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 110.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (u"abc") Tj 0 0 0 rg  T* .729412 .129412 .129412 rg (u'abc') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg (u"abc") Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('abc') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (u"\344\366\374") Tj 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (17) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R290': class PDFStream 
290 0 obj
% page stream
<< /Length 7095 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 555.8358 cm
q
q
.729407 0 0 .729407 0 0 cm
q
1 0 0 1 6.4 8.774246 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 492 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .729412 .129412 .129412 rg (u') Tj /F6 8 Tf .376471 .376471 .376471 rg (\\xe4\\xf6\\xfc) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg (u"\344\366\374") Tj 0 0 0 rg (\)) Tj  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (UnicodeEncodeError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ('ascii') Tj 0 0 0 rg ( ) Tj (codec) Tj ( ) Tj (can) Tj .729412 .129412 .129412 rg ('t encode characters in position 0-2: ordinal not in range\(128\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 511.8358 cm
q
BT 1 0 0 1 0 30.256 Tm .205748 Tw 12 TL /F1 8 Tf 0 0 0 rg (To convert a Unicode string into an 8-bit string using a specific encoding, Unicode objects provide an) Tj T* 0 Tw .094569 Tw /F5 8 Tf (encode\(\)) Tj /F1 8 Tf ( method that takes one argument, the name of the encoding. Lowercase names for encod\255) Tj T* 0 Tw (ings are preferred.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 467.0358 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (u"\344\366\374") Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (encode) Tj (\() Tj .729412 .129412 .129412 rg ('utf-8') Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg (') Tj /F6 8 Tf .376471 .376471 .376471 rg (\\xc3\\xa4\\xc3\\xb6\\xc3\\xbc) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 435.0358 cm
q
BT 1 0 0 1 0 18.256 Tm .558822 Tw 12 TL /F1 8 Tf 0 0 0 rg (If you have data in a specific encoding and want to produce a corresponding Unicode string from it,) Tj T* 0 Tw (you can use the ) Tj /F5 8 Tf (unicode\(\)) Tj /F1 8 Tf ( function with the encoding name as the second argument.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 390.2358 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (unicode) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg (') Tj /F6 8 Tf .376471 .376471 .376471 rg (\\xc3\\xa4\\xc3\\xb6\\xc3\\xbc) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('utf-8') Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg (u') Tj /F6 8 Tf .376471 .376471 .376471 rg (\\xe4\\xf6\\xfc) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 382.2358 cm
Q
q
1 0 0 1 70.4315 382.2358 cm
Q
q
1 0 0 1 70.4315 382.2358 cm
Q
q
1 0 0 1 70.4315 351.8358 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Lists) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 309.8358 cm
q
BT 1 0 0 1 0 30.256 Tm 1.166131 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python knows a number of ) Tj /F4 8 Tf (compound) Tj /F1 8 Tf ( data types, used to group together other values. The most) Tj T* 0 Tw .207748 Tw (versatile is the ) Tj /F4 8 Tf (list) Tj /F1 8 Tf (, which can be written as a list of comma-separated values \(items\) between square) Tj T* 0 Tw (brackets. List items need not all have the same type.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 253.0358 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 233.0358 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Like string indices, list indices start at 0, and lists can be sliced, concatenated and so on:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 104.2358 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (:) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* ([) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([:) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('bacon') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (18) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R291': class PDFStream 
291 0 obj
% page stream
<< /Length 8476 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf 0 0 0 rg ([) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('bacon') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (a) Tj ([:) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('Boo!') Tj 0 0 0 rg (]) Tj  T* ([) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Boo!') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 540.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Unlike strings, which are ) Tj /F4 8 Tf (immutable) Tj /F1 8 Tf (, it is possible to change individual elements of a list:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 459.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (23) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (123) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 439.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Assignment to slices is also possible, and this can even change the size of the list or clear it entirely:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 178.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 252 re B*
Q
q
BT 1 0 0 1 0 234.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Replace some items:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (123) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Remove some:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (123) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Insert some:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('bletch') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('xyzzy') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (123) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('bletch') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('xyzzy') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Insert \(a copy of\) itself at the beginning) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([:) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (a) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (123) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('bletch') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('xyzzy') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (123) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('bletch') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('xyzzy') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Clear the list: replace all items with an empty list) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([:]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 158.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The built-in function ) Tj /F5 8 Tf (len\(\)) Tj /F1 8 Tf ( also applies to lists:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 101.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('a') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('b') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('c') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('d') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (a) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (4) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (19) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R292': class PDFStream 
292 0 obj
% page stream
<< /Length 6020 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (It is possible to nest lists \(create lists containing other lists\), for example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 420.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 168 re B*
Q
q
BT 1 0 0 1 0 150.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (q) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (p) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (q) Tj (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (p) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (p) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (p) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (][) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (p) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj .729412 .129412 .129412 rg ('xtra') Tj 0 0 0 rg (\)) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# See section 5.1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (p) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('xtra') Tj 0 0 0 rg (],) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (q) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('xtra') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 388.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .491156 Tw 12 TL /F1 8 Tf 0 0 0 rg (Note that in the last example, ) Tj /F5 8 Tf (p[1]) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (q) Tj /F1 8 Tf ( really refer to the same object! We'll come back to ) Tj /F4 8 Tf (object) Tj T* 0 Tw (semantics) Tj /F1 8 Tf ( later.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 388.1367 cm
Q
q
1 0 0 1 70.4315 388.1367 cm
Q
q
1 0 0 1 70.4315 388.1367 cm
Q
q
1 0 0 1 70.4315 355.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (First Steps Towards Programming) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 325.3367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.122248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Of course, we can use Python for more complicated tasks than adding two and two together. For) Tj T* 0 Tw (instance, we can write an initial sub-sequence of the ) Tj /F4 8 Tf (Fibonacci) Tj /F1 8 Tf ( series as follows:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 148.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 168 re B*
Q
q
BT 1 0 0 1 0 150.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Fibonacci series:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# the sum of two elements defines the next) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (b) Tj (,) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (b) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (8) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 128.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (This example introduces several new features.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 126.5367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (20) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R293': class PDFStream 
293 0 obj
% page stream
<< /Length 7586 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 36 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 42.256 Tm .010398 Tw 12 TL /F1 8 Tf 0 0 0 rg (The first line contains a ) Tj /F4 8 Tf (multiple assignment) Tj /F1 8 Tf (: the variables ) Tj /F5 8 Tf (a) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (b) Tj /F1 8 Tf ( simultaneously get the new) Tj T* 0 Tw .362586 Tw (values 0 and 1. On the last line this is used again, demonstrating that the expressions on the) Tj T* 0 Tw 2.938151 Tw (right-hand side are all evaluated first before any of the assignments take place. The) Tj T* 0 Tw (right-hand side expressions are evaluated from the left to the right.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 488.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 60 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 66.256 Tm .726748 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (while) Tj /F1 8 Tf ( loop executes as long as the condition \(here: ) Tj /F5 8 Tf (b ) Tj (<) Tj ( 10) Tj /F1 8 Tf (\) remains true. In Python,) Tj T* 0 Tw .46822 Tw (like in C, any non-zero integer value is true; zero is false. The condition may also be a string) Tj T* 0 Tw .560265 Tw (or list value, in fact any sequence; anything with a non-zero length is true, empty sequences) Tj T* 0 Tw 1.205426 Tw (are false. The test used in the example is a simple comparison. The standard comparison) Tj T* 0 Tw .325998 Tw (operators are written the same as in C: ) Tj /F5 8 Tf (<) Tj /F1 8 Tf ( \(less than\), ) Tj /F5 8 Tf (>) Tj /F1 8 Tf ( \(greater than\), ) Tj /F5 8 Tf (==) Tj /F1 8 Tf ( \(equal to\), ) Tj /F5 8 Tf (<) Tj (=) Tj /F1 8 Tf ( \(less) Tj T* 0 Tw (than or equal to\), ) Tj /F5 8 Tf (>) Tj (=) Tj /F1 8 Tf ( \(greater than or equal to\) and ) Tj /F5 8 Tf (!=) Tj /F1 8 Tf ( \(not equal to\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 404.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 72 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 78.256 Tm .425998 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F4 8 Tf (body) Tj /F1 8 Tf ( of the loop is ) Tj /F4 8 Tf (indented) Tj /F1 8 Tf (: indentation is Python's way of grouping statements. Python) Tj T* 0 Tw 1.121645 Tw (does not \(yet!\) provide an intelligent input line editing facility, so you have to type a tab or) Tj T* 0 Tw .061998 Tw (space\(s\) for each indented line. In practice you will prepare more complicated input for Python) Tj T* 0 Tw .409998 Tw (with a text editor; most text editors have an auto-indent facility. When a compound statement) Tj T* 0 Tw .887731 Tw (is entered interactively, it must be followed by a blank line to indicate completion \(since the) Tj T* 0 Tw 1.025248 Tw (parser cannot guess when you have typed the last line\). Note that each line within a basic) Tj T* 0 Tw (block must be indented by the same amount.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 143.3367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 249.6 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 213.6 cm
q
BT 1 0 0 1 0 42.256 Tm 1.630131 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (print) Tj /F1 8 Tf ( statement writes the value of the expression\(s\) it is given. It differs from just) Tj T* 0 Tw .722248 Tw (writing the expression you want to write \(as we did earlier in the calculator examples\) in the) Tj T* 0 Tw 1.434151 Tw (way it handles multiple expressions and strings. Strings are printed without quotes, and a) Tj T* 0 Tw (space is inserted between items, so you can format things nicely, like this:) Tj T* ET
Q
Q
q
1 0 0 1 38.8 156.8 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 332.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (i) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (256) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (256) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('The value of i is') Tj 0 0 0 rg (,) Tj ( ) Tj (i) Tj  T* (The) Tj ( ) Tj (value) Tj ( ) Tj (of) Tj ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj /F6 8 Tf .376471 0 .878431 rg (65536) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 26 130.8 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (A trailing comma avoids the newline after the output:) Tj T* ET
Q
Q
q
1 0 0 1 38.8 38 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 332.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1000) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj (,) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (b) Tj (,) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (b) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (144) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (233) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (377) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (610) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (987) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm .651998 Tw 12 TL /F1 8 Tf 0 0 0 rg (Note that the interpreter inserts a newline before it prints the next prompt if the last line was) Tj T* 0 Tw (not completed.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 143.3367 cm
Q
q
1 0 0 1 70.4315 143.3367 cm
Q
q
1 0 0 1 70.4315 143.3367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (21) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R294': class PDFStream 
294 0 obj
% page stream
<< /Length 6653 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 589.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (More Control Flow Tools) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 559.7367 cm
q
BT 1 0 0 1 0 18.256 Tm .116613 Tw 12 TL /F1 8 Tf 0 0 0 rg (Besides the ) Tj /F5 8 Tf (while) Tj /F1 8 Tf ( statement just introduced, Python knows the usual control flow statements known) Tj T* 0 Tw (from other languages, with some twists.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 559.7367 cm
Q
q
1 0 0 1 70.4315 559.7367 cm
Q
q
1 0 0 1 70.4315 559.7367 cm
Q
q
1 0 0 1 70.4315 526.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F5 14 Tf .12549 .262745 .360784 rg (if) Tj /F1 14 Tf ( Statements) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 508.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Perhaps the most well-known statement type is the ) Tj /F5 8 Tf (if) Tj /F1 8 Tf ( statement. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 356.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 144 re B*
Q
q
BT 1 0 0 1 0 126.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (int) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (raw_input) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("Please enter an integer: ") Tj 0 0 0 rg (\)\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (      ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (      ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Negative changed to zero') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (elif) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (==) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (      ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Zero') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (elif) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (==) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (      ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Single') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (else) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (      ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('More') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 312.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .11684 Tw 12 TL /F1 8 Tf 0 0 0 rg (There can be zero or more ) Tj /F5 8 Tf (elif) Tj /F1 8 Tf ( parts, and the ) Tj /F5 8 Tf (else) Tj /F1 8 Tf ( part is optional. The keyword ') Tj /F5 8 Tf (elif) Tj /F1 8 Tf (' is short for) Tj T* 0 Tw -0.33916 Tw ('else if', and is useful to avoid excessive indentation. An ) Tj /F5 8 Tf (if) Tj /F1 8 Tf ( ... ) Tj /F5 8 Tf (elif) Tj /F1 8 Tf ( ... ) Tj /F5 8 Tf (elif) Tj /F1 8 Tf ( ... sequence is a substitute) Tj T* 0 Tw (for the ) Tj /F5 8 Tf (switch) Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (case) Tj /F1 8 Tf ( statements found in other languages.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 312.1367 cm
Q
q
1 0 0 1 70.4315 312.1367 cm
Q
q
1 0 0 1 70.4315 312.1367 cm
Q
q
1 0 0 1 70.4315 279.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F5 14 Tf .12549 .262745 .360784 rg (for) Tj /F1 14 Tf ( Statements) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 273.3367 cm
Q
q
1 0 0 1 70.4315 207.3367 cm
q
BT 1 0 0 1 0 54.256 Tm .355798 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (for) Tj /F1 8 Tf ( statement in Python differs a bit from what you may be used to in C or Pascal. Rather than) Tj T* 0 Tw -0.236752 Tw (always iterating over an arithmetic progression of numbers \(like in Pascal\), or giving the user the ability) Tj T* 0 Tw .097748 Tw (to define both the iteration step and halting condition \(as C\), Python's ) Tj /F5 8 Tf (for) Tj /F1 8 Tf ( statement iterates over the) Tj T* 0 Tw .266314 Tw (items of any sequence \(a list or a string\), in the order that they appear in the sequence. For example) Tj T* 0 Tw (\(no pun intended\):) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 102.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Measure some strings:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('cat') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('window') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('defenestrate') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (a) Tj (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj (,) Tj ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (x) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (cat) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* (window) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (22) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R295': class PDFStream 
295 0 obj
% page stream
<< /Length 8231 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (defenestrate) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 528.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .171577 Tw 12 TL /F1 8 Tf 0 0 0 rg (It is not safe to modify the sequence being iterated over in the loop \(this can only happen for mutable) Tj T* 0 Tw .750887 Tw (sequence types, such as lists\). If you need to modify the list you are iterating over \(for example, to) Tj T* 0 Tw 1.443712 Tw (duplicate selected items\) you must iterate over a copy. The slice notation makes this particularly) Tj T* 0 Tw (convenient:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 447.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (a) Tj ([:]:) Tj ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# make a slice copy of the entire list) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (    ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (x) Tj (\)) Tj ( ) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (insert) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (x) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj .729412 .129412 .129412 rg ('defenestrate') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('cat') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('window') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('defenestrate') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 439.3367 cm
Q
q
1 0 0 1 70.4315 439.3367 cm
Q
q
1 0 0 1 70.4315 439.3367 cm
Q
q
1 0 0 1 70.4315 406.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (The ) Tj /F5 14 Tf (range\(\)) Tj /F1 14 Tf ( Function) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 376.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .22941 Tw 12 TL /F1 8 Tf 0 0 0 rg (If you do need to iterate over a sequence of numbers, the built-in function ) Tj /F5 8 Tf (range\(\)) Tj /F1 8 Tf ( comes in handy.) Tj T* 0 Tw (It generates lists containing arithmetic progressions:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 331.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 287.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .300665 Tw 12 TL /F1 8 Tf 0 0 0 rg (The given end point is never part of the generated list; ) Tj /F5 8 Tf (range\(10\)) Tj /F1 8 Tf ( generates a list of 10 values, the) Tj T* 0 Tw -0.281402 Tw (legal indices for items of a sequence of length 10. It is possible to let the range start at another number,) Tj T* 0 Tw (or to specify a different increment \(even negative; sometimes this is called the 'step'\):) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 194.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (30) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (40) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (70) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 174.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (To iterate over the indices of a sequence, combine ) Tj /F5 8 Tf (range\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (len\(\)) Tj /F1 8 Tf ( as follows:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 106.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('Mary') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('had') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('a') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('little') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('lamb') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (a) Tj (\)\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj (,) Tj ( ) Tj (a) Tj ([) Tj (i) Tj (]) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (23) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R296': class PDFStream 
296 0 obj
% page stream
<< /Length 6310 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 536.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (Mary) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (had) Tj  T* /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (a) Tj  T* /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (little) Tj  T* /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (lamb) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 528.1367 cm
Q
q
1 0 0 1 70.4315 528.1367 cm
Q
q
1 0 0 1 70.4315 528.1367 cm
Q
q
1 0 0 1 70.4315 478.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 43.6 re B*
Q
q
BT 1 0 0 1 10 23.548 Tm 16.8 TL /F5 14 Tf .12549 .262745 .360784 rg (break) Tj /F1 14 Tf ( and ) Tj /F5 14 Tf (continue) Tj /F1 14 Tf ( Statements, and ) Tj /F5 14 Tf (else) Tj /F1 14 Tf ( Clauses) Tj T* (on Loops) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 460.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (break) Tj /F1 8 Tf ( statement, like in C, breaks out of the smallest enclosing ) Tj /F5 8 Tf (for) Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (while) Tj /F1 8 Tf ( loop.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 442.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (continue) Tj /F1 8 Tf ( statement, also borrowed from C, continues with the next iteration of the loop.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 388.5367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.498935 Tw 12 TL /F1 8 Tf 0 0 0 rg (Loop statements may have an ) Tj /F5 8 Tf (else) Tj /F1 8 Tf ( clause; it is executed when the loop terminates through exhaustion) Tj T* 0 Tw 1.112665 Tw (of the list \(with ) Tj /F5 8 Tf (for) Tj /F1 8 Tf (\) or when the condition becomes false \(with ) Tj /F5 8 Tf (while) Tj /F1 8 Tf (\), but not when the loop is) Tj T* 0 Tw .162398 Tw (terminated by a ) Tj /F5 8 Tf (break) Tj /F1 8 Tf ( statement. This is exemplified by the following loop, which searches for prime) Tj T* 0 Tw (numbers:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 163.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 216 re B*
Q
q
BT 1 0 0 1 0 198.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (n) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (n) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (n) Tj ( ) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (==) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (             ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (n) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('equals') Tj 0 0 0 rg (,) Tj ( ) Tj (x) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('*') Tj 0 0 0 rg (,) Tj ( ) Tj (n) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg (x) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (             ) Tj /F6 8 Tf 0 .501961 0 rg (break) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (else) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# loop fell through without finding a factor) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (n) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('is a prime number') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (a) Tj ( ) Tj (prime) Tj ( ) Tj (number) Tj  T* /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (a) Tj ( ) Tj (prime) Tj ( ) Tj (number) Tj  T* /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (equals) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (a) Tj ( ) Tj (prime) Tj ( ) Tj (number) Tj  T* /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (equals) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (a) Tj ( ) Tj (prime) Tj ( ) Tj (number) Tj  T* /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (equals) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (equals) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 155.7367 cm
Q
q
1 0 0 1 70.4315 155.7367 cm
Q
q
1 0 0 1 70.4315 155.7367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (24) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R297': class PDFStream 
297 0 obj
% page stream
<< /Length 7016 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F5 14 Tf .12549 .262745 .360784 rg (pass) Tj /F1 14 Tf ( Statements) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 562.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .449248 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (pass) Tj /F1 8 Tf ( statement does nothing. It can be used when a statement is required syntactically but the) Tj T* 0 Tw (program requires no action. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 505.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (       ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Busy-wait for keyboard interrupt) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 497.3367 cm
Q
q
1 0 0 1 70.4315 497.3367 cm
Q
q
1 0 0 1 70.4315 497.3367 cm
Q
q
1 0 0 1 70.4315 464.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Defining Functions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 446.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (We can create a function that writes the Fibonacci series to an arbitrary boundary:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 305.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (fib) Tj /F5 8 Tf 0 0 0 rg (\() Tj (n) Tj (\):) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# write Fibonacci series up to n) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj .729412 .129412 .129412 rg ("""Print a Fibonacci series up to n.""") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj (n) Tj (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj (,) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (b) Tj (,) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (b) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Now call the function we just defined:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj (fib) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2000) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (144) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (233) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (377) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (610) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (987) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1597) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 297.7367 cm
Q
q
1 0 0 1 70.4315 243.7367 cm
q
BT 1 0 0 1 0 42.256 Tm .638248 Tw 12 TL /F1 8 Tf 0 0 0 rg (The keyword ) Tj /F5 8 Tf (def) Tj /F1 8 Tf ( introduces a function ) Tj /F4 8 Tf (definition) Tj /F1 8 Tf (. It must be followed by the function name and the) Tj T* 0 Tw .149248 Tw (parenthesized list of formal parameters. The statements that form the body of the function start at the) Tj T* 0 Tw .871763 Tw (next line, and must be indented. The first statement of the function body can optionally be a string) Tj T* 0 Tw (literal; this string literal is the function's documentation string, or ) Tj /F4 8 Tf (docstring) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 201.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .393998 Tw 12 TL /F1 8 Tf 0 0 0 rg (There are tools which use docstrings to automatically produce online or printed documentation, or to) Tj T* 0 Tw .026248 Tw (let the user interactively browse through code; it's good practice to include docstrings in code that you) Tj T* 0 Tw (write, so try to make a habit of it.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 123.7367 cm
q
BT 1 0 0 1 0 66.256 Tm .087763 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F4 8 Tf (execution) Tj /F1 8 Tf ( of a function introduces a new symbol table used for the local variables of the function.) Tj T* 0 Tw -0.293252 Tw (More precisely, all variable assignments in a function store the value in the local symbol table; whereas) Tj T* 0 Tw .956748 Tw (variable references first look in the local symbol table, then in the local symbol tables of enclosing) Tj T* 0 Tw 1.510748 Tw (functions, then in the global symbol table, and finally in the table of built-in names. Thus, global) Tj T* 0 Tw -0.159202 Tw (variables cannot be directly assigned a value within a function \(unless named in a ) Tj /F5 8 Tf (global) Tj /F1 8 Tf ( statement\),) Tj T* 0 Tw (although they may be referenced.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 105.7367 cm
q
BT 1 0 0 1 0 6.256 Tm .678248 Tw 12 TL /F1 8 Tf 0 0 0 rg (The actual parameters \(arguments\) to a function call are introduced in the local symbol table of the) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (25) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R298': class PDFStream 
298 0 obj
% page stream
<< /Length 7588 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 572.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .533881 Tw 12 TL /F1 8 Tf 0 0 0 rg (called function when it is called; thus, arguments are passed using ) Tj /F4 8 Tf (call by value) Tj /F1 8 Tf ( \(where the ) Tj /F4 8 Tf (value) Tj /F1 8 Tf ( is) Tj T* 0 Tw .649645 Tw (always an object ) Tj /F4 8 Tf (reference) Tj /F1 8 Tf (, not the value of the object\). ) Tj /F1 6 Tf 0 0 .501961 rg 4 Ts (1) Tj /F1 8 Tf 0 0 0 rg 0 Ts ( When a function calls another function, a) Tj T* 0 Tw (new local symbol table is created for that call.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 518.9367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.212752 Tw 12 TL /F1 8 Tf 0 0 0 rg (A function definition introduces the function name in the current symbol table. The value of the function) Tj T* 0 Tw .663292 Tw (name has a type that is recognized by the interpreter as a user-defined function. This value can be) Tj T* 0 Tw 1.447763 Tw (assigned to another name which can then also be used as a function. This serves as a general) Tj T* 0 Tw (renaming mechanism:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 438.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fib) Tj  T* .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (function) Tj ( ) Tj (fib) Tj ( ) Tj (at) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10042) Tj /F5 8 Tf 0 0 0 rg (ed0) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (fib) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 370.1367 cm
q
BT 1 0 0 1 0 54.256 Tm .373683 Tw 12 TL /F1 8 Tf 0 0 0 rg (You might object that ) Tj /F5 8 Tf (fib) Tj /F1 8 Tf ( is not a function but a procedure. In Python, like in C, procedures are just) Tj T* 0 Tw .136248 Tw (functions that don't return a value. In fact, technically speaking, procedures do return a value, albeit a) Tj T* 0 Tw .436469 Tw (rather boring one. This value is called ) Tj /F5 8 Tf (None) Tj /F1 8 Tf ( \(it's a built-in name\). Writing the value ) Tj /F5 8 Tf (None) Tj /F1 8 Tf ( is normally) Tj T* 0 Tw .275398 Tw (suppressed by the interpreter if it would be the only value written. You can see it if you really want to) Tj T* 0 Tw (using ) Tj /F5 8 Tf (print) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 313.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fib) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (fib) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* 0 .439216 .12549 rg (None) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 281.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .969051 Tw 12 TL /F1 8 Tf 0 0 0 rg (It is simple to write a function that returns a list of the numbers of the Fibonacci series, instead of) Tj T* 0 Tw (printing it:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 116.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 156 re B*
Q
q
BT 1 0 0 1 0 138.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (fib2) Tj /F5 8 Tf 0 0 0 rg (\() Tj (n) Tj (\):) Tj ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# return Fibonacci series up to n) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj .729412 .129412 .129412 rg ("""Return a list containing the Fibonacci series up to n.""") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (result) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([]) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj (n) Tj (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj (result) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj (b) Tj (\)) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# see below) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (b) Tj (,) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (b) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (result) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f100) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (fib2) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# call it) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f100) Tj (                ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# write the result) Tj /F5 8 Tf 0 0 0 rg  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (26) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R299': class PDFStream 
299 0 obj
% page stream
<< /Length 7375 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (This example, as usual, demonstrates some new Python features:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 594.9367 cm
Q
q
1 0 0 1 70.4315 570.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm .902459 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (return) Tj /F1 8 Tf ( statement returns with a value from a function. ) Tj /F5 8 Tf (return) Tj /F1 8 Tf ( without an expression) Tj T* 0 Tw (argument returns ) Tj /F5 8 Tf (None) Tj /F1 8 Tf (. Falling off the end of a procedure also returns ) Tj /F5 8 Tf (None) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 474.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 84 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 90.256 Tm .521426 Tw 12 TL /F1 8 Tf 0 0 0 rg (The statement ) Tj /F5 8 Tf (result.append\(b\)) Tj /F1 8 Tf ( calls a ) Tj /F4 8 Tf (method) Tj /F1 8 Tf ( of the list object ) Tj /F5 8 Tf (result) Tj /F1 8 Tf (. A method is a) Tj T* 0 Tw 1.590459 Tw (function that 'belongs' to an object and is named ) Tj /F5 8 Tf (obj.methodname) Tj /F1 8 Tf (, where ) Tj /F5 8 Tf (obj) Tj /F1 8 Tf ( is some) Tj T* 0 Tw .220748 Tw (object \(this may be an expression\), and ) Tj /F5 8 Tf (methodname) Tj /F1 8 Tf ( is the name of a method that is defined) Tj T* 0 Tw .562767 Tw (by the object's type. Different types define different methods. Methods of different types may) Tj T* 0 Tw .086665 Tw (have the same name without causing ambiguity. \(It is possible to define your own object types) Tj T* 0 Tw .088305 Tw (and methods, using ) Tj /F4 8 Tf (classes) Tj /F1 8 Tf (, as discussed later in this tutorial.\) The method ) Tj /F5 8 Tf (append\(\)) Tj /F1 8 Tf ( shown) Tj T* 0 Tw .686598 Tw (in the example is defined for list objects; it adds a new element at the end of the list. In this) Tj T* 0 Tw (example it is equivalent to ) Tj /F5 8 Tf (result = result + [b]) Tj /F1 8 Tf (, but more efficient.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 474.9367 cm
Q
q
1 0 0 1 70.4315 474.9367 cm
Q
q
1 0 0 1 70.4315 474.9367 cm
Q
q
1 0 0 1 70.4315 442.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (More on Defining Functions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 412.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .984248 Tw 12 TL /F1 8 Tf 0 0 0 rg (It is also possible to define functions with a variable number of arguments. There are three forms,) Tj T* 0 Tw (which can be combined.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 412.1367 cm
Q
q
1 0 0 1 70.4315 412.1367 cm
Q
q
1 0 0 1 70.4315 412.1367 cm
Q
q
1 0 0 1 70.4315 381.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Default Argument Values) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 351.7367 cm
q
BT 1 0 0 1 0 18.256 Tm .232665 Tw 12 TL /F1 8 Tf 0 0 0 rg (The most useful form is to specify a default value for one or more arguments. This creates a function) Tj T* 0 Tw (that can be called with fewer arguments than it is defined to allow. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 234.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (ask_ok) Tj /F5 8 Tf 0 0 0 rg (\() Tj (prompt) Tj (,) Tj ( ) Tj (retries) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (complaint) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('Yes or no, please!') Tj 0 0 0 rg (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj  T* (        ) Tj (ok) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (raw_input) Tj 0 0 0 rg (\() Tj (prompt) Tj (\)) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (ok) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (\() Tj .729412 .129412 .129412 rg ('y') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ye') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('yes') Tj 0 0 0 rg (\):) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (ok) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (\() Tj .729412 .129412 .129412 rg ('n') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('no') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('nop') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('nope') Tj 0 0 0 rg (\):) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (False) Tj 0 0 0 rg  T* (        ) Tj (retries) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (retries) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (retries) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (IOError) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('refusenik user') Tj 0 0 0 rg  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (complaint) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 202.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .533598 Tw 12 TL /F1 8 Tf 0 0 0 rg (This function can be called either like this: ) Tj /F5 8 Tf (ask_ok\('Do you really want to quit?'\)) Tj /F1 8 Tf ( or like) Tj T* 0 Tw (this: ) Tj /F5 8 Tf (ask_ok\('OK to overwrite the file?', 2\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 172.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.116252 Tw 12 TL /F1 8 Tf 0 0 0 rg (This example also introduces the ) Tj /F5 8 Tf (in) Tj /F1 8 Tf ( keyword. This tests whether or not a sequence contains a certain) Tj T* 0 Tw (value.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 154.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The default values are evaluated at the point of function definition in the ) Tj /F4 8 Tf (defining) Tj /F1 8 Tf ( scope, so that) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 110.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (i) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg  T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (27) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R300': class PDFStream 
300 0 obj
% page stream
<< /Length 5012 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 536.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (f) Tj /F5 8 Tf 0 0 0 rg (\() Tj (arg) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (i) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (arg) Tj  T*  T* (i) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg  T* (f) Tj (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (will print ) Tj /F5 8 Tf (5) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 474.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.284283 Tw 12 TL /F3 8 Tf 0 0 0 rg (Important warning:) Tj /F1 8 Tf ( The default value is evaluated only once. This makes a difference when the) Tj T* 0 Tw .586586 Tw (default is a mutable object such as a list, dictionary, or instances of most classes. For example, the) Tj T* 0 Tw (following function accumulates the arguments passed to it on subsequent calls:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 369.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (f) Tj /F5 8 Tf 0 0 0 rg (\() Tj (a) Tj (,) Tj ( ) Tj (L) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ([]\):) Tj  T* (    ) Tj (L) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj (a) Tj (\)) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (L) Tj  T*  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (f) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (f) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (f) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 349.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (This will print) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 292.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf 0 0 0 rg ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 260.5367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.17578 Tw 12 TL /F1 8 Tf 0 0 0 rg (If you don't want the default to be shared between subsequent calls, you can write the function like this) Tj T* 0 Tw (instead:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 179.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (f) Tj /F5 8 Tf 0 0 0 rg (\() Tj (a) Tj (,) Tj ( ) Tj (L) Tj .188235 .188235 .188235 rg (=) Tj 0 .439216 .12549 rg (None) Tj 0 0 0 rg (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (L) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (None) Tj 0 0 0 rg (:) Tj  T* (        ) Tj (L) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([]) Tj  T* (    ) Tj (L) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj (a) Tj (\)) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (L) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 171.7367 cm
Q
q
1 0 0 1 70.4315 171.7367 cm
Q
q
1 0 0 1 70.4315 171.7367 cm
Q
q
1 0 0 1 70.4315 141.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Keyword Arguments) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 111.3367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.015202 Tw 12 TL /F1 8 Tf 0 0 0 rg (Functions can also be called using keyword arguments of the form ) Tj /F5 8 Tf (keyword = value) Tj /F1 8 Tf (. For instance,) Tj T* 0 Tw (the following function:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (28) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R301': class PDFStream 
301 0 obj
% page stream
<< /Length 7345 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 538.7433 cm
q
q
.964195 0 0 .964195 0 0 cm
q
1 0 0 1 6.4 6.63766 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 372 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (parrot) Tj /F5 8 Tf 0 0 0 rg (\() Tj (voltage) Tj (,) Tj ( ) Tj (state) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('a stiff') Tj 0 0 0 rg (,) Tj ( ) Tj (action) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('voom') Tj 0 0 0 rg (,) Tj ( ) Tj 0 .439216 .12549 rg (type) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('Norwegian Blue') Tj 0 0 0 rg (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("-- This parrot wouldn't") Tj 0 0 0 rg (,) Tj ( ) Tj (action) Tj (,) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("if you put") Tj 0 0 0 rg (,) Tj ( ) Tj (voltage) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ("volts through it.") Tj 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("-- Lovely plumage, the") Tj 0 0 0 rg (,) Tj ( ) Tj 0 .439216 .12549 rg (type) Tj 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("-- It's") Tj 0 0 0 rg (,) Tj ( ) Tj (state) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ("!") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 518.7433 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (could be called in any of the following ways:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 449.9433 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (parrot) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1000) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (parrot) Tj (\() Tj (action) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('VOOOOOM') Tj 0 0 0 rg (,) Tj ( ) Tj (voltage) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1000000) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (parrot) Tj (\() Tj .729412 .129412 .129412 rg ('a thousand') Tj 0 0 0 rg (,) Tj ( ) Tj (state) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('pushing up the daisies') Tj 0 0 0 rg (\)) Tj  T* (parrot) Tj (\() Tj .729412 .129412 .129412 rg ('a million') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('bereft of life') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('jump') Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 429.9433 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (but the following calls would all be invalid:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 361.1433 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (parrot) Tj (\(\)) Tj (                     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# required argument missing) Tj /F5 8 Tf 0 0 0 rg  T* (parrot) Tj (\() Tj (voltage) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (5.0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('dead') Tj 0 0 0 rg (\)) Tj (  ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# non-keyword argument following keyword) Tj /F5 8 Tf 0 0 0 rg  T* (parrot) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (110) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (voltage) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (220) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# duplicate value for argument) Tj /F5 8 Tf 0 0 0 rg  T* (parrot) Tj (\() Tj (actor) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('John Cleese') Tj 0 0 0 rg (\)) Tj (  ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# unknown keyword) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 293.1433 cm
q
BT 1 0 0 1 0 54.256 Tm .044855 Tw 12 TL /F1 8 Tf 0 0 0 rg (In general, an argument list must have any positional arguments followed by any keyword arguments,) Tj T* 0 Tw .533598 Tw (where the keywords must be chosen from the formal parameter names. It's not important whether a) Tj T* 0 Tw .848233 Tw (formal parameter has a default value or not. No argument may receive a value more than once ---) Tj T* 0 Tw .698151 Tw (formal parameter names corresponding to positional arguments cannot be used as keywords in the) Tj T* 0 Tw (same calls. Here's an example that fails due to this restriction:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 188.3433 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (function) Tj /F5 8 Tf 0 0 0 rg (\() Tj (a) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (function) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (TypeError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (function) Tj (\(\)) Tj ( ) Tj (got) Tj ( ) Tj (multiple) Tj ( ) Tj (values) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (keyword) Tj ( ) Tj (argument) Tj ( ) Tj .729412 .129412 .129412 rg ('a') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 120.3433 cm
q
BT 1 0 0 1 0 54.256 Tm .158248 Tw 12 TL /F1 8 Tf 0 0 0 rg (When a final formal parameter of the form ) Tj /F5 8 Tf (**name) Tj /F1 8 Tf ( is present, it receives a dictionary \(see ) Tj /F4 8 Tf (typesmap\255) Tj T* 0 Tw .801536 Tw (ping) Tj /F1 8 Tf (\) containing all keyword arguments except for those corresponding to a formal parameter. This) Tj T* 0 Tw -0.070252 Tw (may be combined with a formal parameter of the form ) Tj /F5 8 Tf (*name) Tj /F1 8 Tf ( \(described in the next subsection\) which) Tj T* 0 Tw .596613 Tw (receives a tuple containing the positional arguments beyond the formal parameter list. \() Tj /F5 8 Tf (*name) Tj /F1 8 Tf ( must) Tj T* 0 Tw (occur before ) Tj /F5 8 Tf (**name) Tj /F1 8 Tf (.\) For example, if we define a function like this:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (29) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R302': class PDFStream 
302 0 obj
% page stream
<< /Length 5577 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 500.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (cheeseshop) Tj /F5 8 Tf 0 0 0 rg (\() Tj (kind) Tj (,) Tj ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (arguments) Tj (,) Tj ( ) Tj .188235 .188235 .188235 rg (**) Tj 0 0 0 rg (keywords) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("-- Do you have any") Tj 0 0 0 rg (,) Tj ( ) Tj (kind) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('?') Tj 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("-- I'm sorry, we're all out of") Tj 0 0 0 rg (,) Tj ( ) Tj (kind) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (arg) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (arguments) Tj (:) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (arg) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('-') Tj .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (40) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj (keys) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (keywords) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (keys) Tj (\(\)) Tj  T* (    ) Tj (keys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sort) Tj (\(\)) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (kw) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (keys) Tj (:) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (kw) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg (':') Tj 0 0 0 rg (,) Tj ( ) Tj (keywords) Tj ([) Tj (kw) Tj (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (It could be called like this:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 399.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (cheeseshop) Tj (\() Tj .729412 .129412 .129412 rg ('Limburger') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("It's very runny, sir.") Tj 0 0 0 rg (,) Tj  T* (           ) Tj .729412 .129412 .129412 rg ("It's really very, VERY runny, sir.") Tj 0 0 0 rg (,) Tj  T* (           ) Tj (client) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('John Cleese') Tj 0 0 0 rg (,) Tj  T* (           ) Tj (shopkeeper) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('Michael Palin') Tj 0 0 0 rg (,) Tj  T* (           ) Tj (sketch) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('Cheese Shop Sketch') Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 379.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (and of course it would print:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 262.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (--) Tj 0 0 0 rg ( ) Tj (Do) Tj ( ) Tj (you) Tj ( ) Tj (have) Tj ( ) Tj (any) Tj ( ) Tj (Limburger) Tj ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (--) Tj 0 0 0 rg ( ) Tj (I) Tj .729412 .129412 .129412 rg ('m sorry, we') Tj 0 0 0 rg (re) Tj ( ) Tj (all) Tj ( ) Tj (out) Tj ( ) Tj (of) Tj ( ) Tj (Limburger) Tj  T* (It) Tj .729412 .129412 .129412 rg ('s very runny, sir.) Tj 0 0 0 rg  T* (It) Tj .729412 .129412 .129412 rg ('s really very, VERY runny, sir.) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (----------------------------------------) Tj 0 0 0 rg  T* (client) Tj ( ) Tj (:) Tj ( ) Tj (John) Tj ( ) Tj (Cleese) Tj  T* (shopkeeper) Tj ( ) Tj (:) Tj ( ) Tj (Michael) Tj ( ) Tj (Palin) Tj  T* (sketch) Tj ( ) Tj (:) Tj ( ) Tj (Cheese) Tj ( ) Tj (Shop) Tj ( ) Tj (Sketch) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 218.5367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.156248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Note that the ) Tj /F5 8 Tf (sort\(\)) Tj /F1 8 Tf ( method of the list of keyword argument names is called before printing the) Tj T* 0 Tw .235528 Tw (contents of the ) Tj /F5 8 Tf (keywords) Tj /F1 8 Tf ( dictionary; if this is not done, the order in which the arguments are printed) Tj T* 0 Tw (is undefined.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 218.5367 cm
Q
q
1 0 0 1 70.4315 218.5367 cm
Q
q
1 0 0 1 70.4315 218.5367 cm
Q
q
1 0 0 1 70.4315 188.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Arbitrary Argument Lists) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 182.1367 cm
Q
q
1 0 0 1 70.4315 140.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .92541 Tw 12 TL /F1 8 Tf 0 0 0 rg (Finally, the least frequently used option is to specify that a function can be called with an arbitrary) Tj T* 0 Tw .233248 Tw (number of arguments. These arguments will be wrapped up in a tuple. Before the variable number of) Tj T* 0 Tw (arguments, zero or more normal arguments may occur.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (30) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R303': class PDFStream 
303 0 obj
% page stream
<< /Length 8142 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 572.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (fprintf) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (file) Tj 0 0 0 rg (,) Tj ( ) Tj (template) Tj (,) Tj ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (args) Tj (\):) Tj  T* (    ) Tj 0 .439216 .12549 rg (file) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write) Tj (\() Tj (template) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (args) Tj (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 564.1367 cm
Q
q
1 0 0 1 70.4315 564.1367 cm
Q
q
1 0 0 1 70.4315 564.1367 cm
Q
q
1 0 0 1 70.4315 533.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Unpacking Argument Lists) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 479.7367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.238002 Tw 12 TL /F1 8 Tf 0 0 0 rg (The reverse situation occurs when the arguments are already in a list or tuple but need to be unpacked) Tj T* 0 Tw .028613 Tw (for a function call requiring separate positional arguments. For instance, the built-in ) Tj /F5 8 Tf (range\(\)) Tj /F1 8 Tf ( function) Tj T* 0 Tw .159198 Tw (expects separate ) Tj /F4 8 Tf (start) Tj /F1 8 Tf ( and ) Tj /F4 8 Tf (stop) Tj /F1 8 Tf ( arguments. If they are not available separately, write the function call) Tj T* 0 Tw (with the ) Tj /F5 8 Tf (*) Tj /F1 8 Tf (-operator to unpack the arguments out of a list or tuple:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 398.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (             ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# normal call with separate arguments) Tj /F5 8 Tf 0 0 0 rg  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (args) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (args) Tj (\)) Tj (            ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# call with arguments unpacked from a list) Tj /F5 8 Tf 0 0 0 rg  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 390.9367 cm
Q
q
1 0 0 1 70.4315 372.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (In the same fashion, dictionaries can deliver keyword arguments with the ) Tj /F5 8 Tf (**) Tj /F1 8 Tf (-operator:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 279.7704 cm
q
q
.782779 0 0 .782779 0 0 cm
q
1 0 0 1 6.4 8.176002 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 458.4 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (parrot) Tj /F5 8 Tf 0 0 0 rg (\() Tj (voltage) Tj (,) Tj ( ) Tj (state) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('a stiff') Tj 0 0 0 rg (,) Tj ( ) Tj (action) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('voom') Tj 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("-- This parrot wouldn't") Tj 0 0 0 rg (,) Tj ( ) Tj (action) Tj (,) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("if you put") Tj 0 0 0 rg (,) Tj ( ) Tj (voltage) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ("volts through it.") Tj 0 0 0 rg (,) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("E's") Tj 0 0 0 rg (,) Tj ( ) Tj (state) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ("!") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (d) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj .729412 .129412 .129412 rg ("voltage") Tj 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ("four million") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("state") Tj 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ("bleedin' demised") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("action") Tj 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ("VOOM") Tj 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (parrot) Tj (\() Tj .188235 .188235 .188235 rg (**) Tj 0 0 0 rg (d) Tj (\)) Tj  T* .188235 .188235 .188235 rg (--) Tj 0 0 0 rg ( ) Tj (This) Tj ( ) Tj (parrot) Tj ( ) Tj (wouldn) Tj .729412 .129412 .129412 rg ('t VOOM if you put four million volts through it. E') Tj 0 0 0 rg (s) Tj ( ) Tj (bleedin) Tj .729412 .129412 .129412 rg (' demised !) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 271.7704 cm
Q
q
1 0 0 1 70.4315 271.7704 cm
Q
q
1 0 0 1 70.4315 271.7704 cm
Q
q
1 0 0 1 70.4315 241.3704 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Lambda Forms) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 163.3704 cm
q
BT 1 0 0 1 0 66.256 Tm .766459 Tw 12 TL /F1 8 Tf 0 0 0 rg (By popular demand, a few features commonly found in functional programming languages like Lisp) Tj T* 0 Tw .463141 Tw (have been added to Python. With the ) Tj /F5 8 Tf (lambda) Tj /F1 8 Tf ( keyword, small anonymous functions can be created.) Tj T* 0 Tw .032704 Tw (Here's a function that returns the sum of its two arguments: ) Tj /F5 8 Tf (lambda a, b: a+b) Tj /F1 8 Tf (. Lambda forms can) Tj T* 0 Tw -0.399145 Tw (be used wherever function objects are required. They are syntactically restricted to a single expression.) Tj T* 0 Tw 1.963382 Tw (Semantically, they are just syntactic sugar for a normal function definition. Like nested function) Tj T* 0 Tw (definitions, lambda forms can reference variables from the containing scope:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 106.5704 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (make_incrementor) Tj /F5 8 Tf 0 0 0 rg (\() Tj (n) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (lambda) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj (:) Tj ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (n) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (31) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R304': class PDFStream 
304 0 obj
% page stream
<< /Length 5152 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 536.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (make_incrementor) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (42) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (42) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (43) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 528.1367 cm
Q
q
1 0 0 1 70.4315 528.1367 cm
Q
q
1 0 0 1 70.4315 528.1367 cm
Q
q
1 0 0 1 70.4315 497.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Documentation Strings) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 491.7367 cm
Q
q
1 0 0 1 70.4315 473.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (There are emerging conventions about the content and formatting of documentation strings.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 419.7367 cm
q
BT 1 0 0 1 0 42.256 Tm .000233 Tw 12 TL /F1 8 Tf 0 0 0 rg (The first line should always be a short, concise summary of the object's purpose. For brevity, it should) Tj T* 0 Tw .417175 Tw (not explicitly state the object's name or type, since these are available by other means \(except if the) Tj T* 0 Tw .776248 Tw (name happens to be a verb describing a function's operation\). This line should begin with a capital) Tj T* 0 Tw (letter and end with a period.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 377.7367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.211752 Tw 12 TL /F1 8 Tf 0 0 0 rg (If there are more lines in the documentation string, the second line should be blank, visually separating) Tj T* 0 Tw .484248 Tw (the summary from the rest of the description. The following lines should be one or more paragraphs) Tj T* 0 Tw (describing the object's calling conventions, its side effects, etc.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 275.7367 cm
q
BT 1 0 0 1 0 90.256 Tm 1.287198 Tw 12 TL /F1 8 Tf 0 0 0 rg (The Python parser does not strip indentation from multi-line string literals in Python, so tools that) Tj T* 0 Tw -0.274002 Tw (process documentation have to strip indentation if desired. This is done using the following convention.) Tj T* 0 Tw .820469 Tw (The first non-blank line ) Tj /F4 8 Tf (after) Tj /F1 8 Tf ( the first line of the string determines the amount of indentation for the) Tj T* 0 Tw .932248 Tw (entire documentation string. \(We can't use the first line since it is generally adjacent to the string's) Tj T* 0 Tw .373065 Tw (opening quotes so its indentation is not apparent in the string literal.\) Whitespace "equivalent" to this) Tj T* 0 Tw .255776 Tw (indentation is then stripped from the start of all lines of the string. Lines that are indented less should) Tj T* 0 Tw .040798 Tw (not occur, but if they occur all their leading whitespace should be stripped. Equivalence of whitespace) Tj T* 0 Tw (should be tested after expansion of tabs \(to 8 spaces, normally\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 257.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Here is an example of a multi-line docstring:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 104.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 144 re B*
Q
q
BT 1 0 0 1 0 126.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (my_function) Tj /F5 8 Tf 0 0 0 rg (\(\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj .729412 .129412 .129412 rg ("""Do nothing, but document it.) Tj T* (...) Tj T* (...     No, really, it doesn't do anything.) Tj T* (...     """) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (my_function) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (__doc__) Tj  T* (Do) Tj ( ) Tj (nothing) Tj (,) Tj ( ) Tj (but) Tj ( ) Tj (document) Tj ( ) Tj (it) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T*  T* (    ) Tj (No) Tj (,) Tj ( ) Tj (really) Tj (,) Tj ( ) Tj (it) Tj ( ) Tj (doesn) Tj .729412 .129412 .129412 rg ('t do anything.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (32) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R305': class PDFStream 
305 0 obj
% page stream
<< /Length 7160 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Intermezzo: Coding Style) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 586.1367 cm
Q
q
1 0 0 1 70.4315 532.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .097398 Tw 12 TL /F1 8 Tf 0 0 0 rg (Now that you are about to write longer, more complex pieces of Python, it is a good time to talk about) Tj T* 0 Tw .102131 Tw /F4 8 Tf (coding style) Tj /F1 8 Tf (. Most languages can be written \(or more concise, ) Tj /F4 8 Tf (formatted) Tj /F1 8 Tf (\) in different styles; some are) Tj T* 0 Tw .725554 Tw (more readable than others. Making it easy for others to read your code is always a good idea, and) Tj T* 0 Tw (adopting a nice coding style helps tremendously for that.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 490.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .577554 Tw 12 TL /F1 8 Tf 0 0 0 rg (For Python, ) Tj /F3 8 Tf 0 0 .501961 rg (PEP 8) Tj /F1 8 Tf 0 0 0 rg ( has emerged as the style guide that most projects adhere to; it promotes a very) Tj T* 0 Tw -0.226402 Tw (readable and eye-pleasing coding style. Every Python developer should read it at some point; here are) Tj T* 0 Tw (the most important points extracted for you:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 488.1367 cm
Q
q
1 0 0 1 70.4315 446.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 30 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 30 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Use 4-space indentation, and no tabs.) Tj T* ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm 1.072331 Tw 12 TL /F1 8 Tf 0 0 0 rg (4 spaces are a good compromise between small indentation \(allows greater nesting depth\)) Tj T* 0 Tw (and large indentation \(easier to read\). Tabs introduce confusion, and are best left out.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 404.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 30 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 30 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Wrap lines so that they don't exceed 79 characters.) Tj T* ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm 2.508855 Tw 12 TL /F1 8 Tf 0 0 0 rg (This helps users with small displays and makes it possible to have several code files) Tj T* 0 Tw (side-by-side on larger displays.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 392.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 0 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Use blank lines to separate functions and classes, and larger blocks of code inside functions.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 380.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 0 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (When possible, put comments on a line of their own.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 368.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 0 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Use docstrings.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 344.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm .220331 Tw 12 TL /F1 8 Tf 0 0 0 rg (Use spaces around operators and after commas, but not directly inside bracketing constructs:) Tj T* 0 Tw /F5 8 Tf (a = f\(1, 2\) + g\(3, 4\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 308.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 24 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 30.256 Tm 2.177664 Tw 12 TL /F1 8 Tf 0 0 0 rg (Name your classes and functions consistently; the convention is to use ) Tj /F5 8 Tf (CamelCase) Tj /F1 8 Tf ( for) Tj T* 0 Tw 2.526496 Tw (classes and ) Tj /F5 8 Tf (lower_case_with_underscores) Tj /F1 8 Tf ( for functions and methods. Always use) Tj T* 0 Tw /F5 8 Tf (self) Tj /F1 8 Tf ( as the name for the first method argument.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 284.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm 1.253426 Tw 12 TL /F1 8 Tf 0 0 0 rg (Don't use fancy encodings if your code is meant to be used in international environments.) Tj T* 0 Tw (Plain ASCII works best in any case.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 266.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 161.938 0 Td 12 TL /F1 8 Tf .545098 0 0 rg (Footnotes) Tj T* -161.938 0 Td ET
Q
Q
q
1 0 0 1 70.4315 266.1367 cm
Q
q
1 0 0 1 70.4315 224.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 .501961 rg (1) Tj T* ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 30.256 Tm .59905 Tw 12 TL /F1 8 Tf 0 0 0 rg (Actually, ) Tj /F4 8 Tf (call by object reference) Tj /F1 8 Tf ( would be a better description, since if a) Tj T* 0 Tw -0.067617 Tw (mutable object is passed, the caller will see any changes the callee makes) Tj T* 0 Tw (to it \(items inserted into a list\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 224.1367 cm
Q
q
1 0 0 1 70.4315 224.1367 cm
Q
q
1 0 0 1 70.4315 224.1367 cm
Q
q
1 0 0 1 70.4315 188.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Data Structures) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 158.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .176798 Tw 12 TL /F1 8 Tf 0 0 0 rg (This chapter describes some things you've learned about already in more detail, and adds some new) Tj T* 0 Tw (things as well.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 158.9367 cm
Q
q
1 0 0 1 70.4315 158.9367 cm
Q
q
1 0 0 1 70.4315 158.9367 cm
Q
q
1 0 0 1 70.4315 126.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (More on Lists) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 108.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The list data type has some more methods. Here are all of the methods of list objects:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (33) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R306': class PDFStream 
306 0 obj
% page stream
<< /Length 3596 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 578.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 560.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 542.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Add an item to the end of the list; equivalent to ) Tj /F5 8 Tf (a[len\(a\):] = [x]) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 524.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 506.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 488.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 470.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Extend the list by appending all the items in the given list; equivalent to ) Tj /F5 8 Tf (a[len\(a\):] = L) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 452.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 434.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 416.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 398.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 356.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.061265 Tw 12 TL /F1 8 Tf 0 0 0 rg (Insert an item at a given position. The first argument is the index of the element before which to insert,) Tj T* 0 Tw .952265 Tw (so ) Tj /F5 8 Tf (a.insert\(0, x\)) Tj /F1 8 Tf ( inserts at the front of the list, and ) Tj /F5 8 Tf (a.insert\(len\(a\), x\)) Tj /F1 8 Tf ( is equivalent to) Tj T* 0 Tw /F5 8 Tf (a.append\(x\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 338.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 320.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 302.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 284.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Remove the first item from the list whose value is ) Tj /F4 8 Tf (x) Tj /F1 8 Tf (. It is an error if there is no such item.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 266.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 248.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 230.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 176.9367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.304665 Tw 12 TL /F1 8 Tf 0 0 0 rg (Remove the item at the given position in the list, and return it. If no index is specified, ) Tj /F5 8 Tf (a.pop\(\)) Tj T* 0 Tw -0.18778 Tw /F1 8 Tf (removes and returns the last item in the list. \(The square brackets around the ) Tj /F4 8 Tf (i) Tj /F1 8 Tf ( in the method signature) Tj T* 0 Tw .480748 Tw (denote that the parameter is optional, not that you should type square brackets at that position. You) Tj T* 0 Tw (will see this notation frequently in the Python Library Reference.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 158.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 140.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 122.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 104.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Return the index in the list of the first item whose value is ) Tj /F4 8 Tf (x) Tj /F1 8 Tf (. It is an error if there is no such item.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (34) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R307': class PDFStream 
307 0 obj
% page stream
<< /Length 7153 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 578.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 560.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 542.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Return the number of times ) Tj /F4 8 Tf (x) Tj /F1 8 Tf ( appears in the list.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 524.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 506.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 488.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Sort the items of the list, in place.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 470.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 452.9367 cm
q
BT 1 0 0 1 0 12 Tm 12 TL ET
Q
Q
q
1 0 0 1 70.4315 434.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Reverse the elements of the list, in place.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 416.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (An example that uses most of the list methods:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 180.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 228 re B*
Q
q
BT 1 0 0 1 0 210.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234.5) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (count) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (count) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (count) Tj (\() Tj .729412 .129412 .129412 rg ('x') Tj 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (insert) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234.5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (index) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (remove) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234.5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (reverse) Tj (\(\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234.5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sort) Tj (\(\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234.5) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 172.1367 cm
Q
q
1 0 0 1 70.4315 172.1367 cm
Q
q
1 0 0 1 70.4315 172.1367 cm
Q
q
1 0 0 1 70.4315 141.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Using Lists as Stacks) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 99.73669 cm
q
BT 1 0 0 1 0 30.256 Tm .453522 Tw 12 TL /F1 8 Tf 0 0 0 rg (The list methods make it very easy to use a list as a stack, where the last element added is the first) Tj T* 0 Tw -0.30659 Tw (element retrieved \("last-in, first-out"\). To add an item to the top of the stack, use ) Tj /F5 8 Tf (append\(\)) Tj /F1 8 Tf (. To retrieve) Tj T* 0 Tw (an item from the top of the stack, use ) Tj /F5 8 Tf (pop\(\)) Tj /F1 8 Tf ( without an explicit index. For example:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (35) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R308': class PDFStream 
308 0 obj
% page stream
<< /Length 6768 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 416.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 192 re B*
Q
q
BT 1 0 0 1 0 174.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pop) Tj (\(\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pop) Tj (\(\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pop) Tj (\(\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (stack) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 408.1367 cm
Q
q
1 0 0 1 70.4315 408.1367 cm
Q
q
1 0 0 1 70.4315 408.1367 cm
Q
q
1 0 0 1 70.4315 377.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Using Lists as Queues) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 335.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .774887 Tw 12 TL /F1 8 Tf 0 0 0 rg (You can also use a list conveniently as a queue, where the first element added is the first element) Tj T* 0 Tw .268469 Tw (retrieved \("first-in, first-out"\). To add an item to the back of the queue, use ) Tj /F5 8 Tf (append\(\)) Tj /F1 8 Tf (. To retrieve an) Tj T* 0 Tw (item from the front of the queue, use ) Tj /F5 8 Tf (pop\(\)) Tj /F1 8 Tf ( with ) Tj /F5 8 Tf (0) Tj /F1 8 Tf ( as the index. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 206.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (queue) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ("Eric") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("John") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("Michael") Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (queue) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj .729412 .129412 .129412 rg ("Terry") Tj 0 0 0 rg (\)) Tj (           ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Terry arrives) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (queue) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj .729412 .129412 .129412 rg ("Graham") Tj 0 0 0 rg (\)) Tj (          ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Graham arrives) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (queue) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pop) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('Eric') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (queue) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pop) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('John') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (queue) Tj  T* ([) Tj .729412 .129412 .129412 rg ('Michael') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Terry') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Graham') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 198.9367 cm
Q
q
1 0 0 1 70.4315 198.9367 cm
Q
q
1 0 0 1 70.4315 198.9367 cm
Q
q
1 0 0 1 70.4315 168.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Functional Programming Tools) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 138.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .772531 Tw 12 TL /F1 8 Tf 0 0 0 rg (There are three built-in functions that are very useful when used with lists: ) Tj /F5 8 Tf (filter\(\)) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (map\(\)) Tj /F1 8 Tf (, and) Tj T* 0 Tw /F5 8 Tf (reduce\(\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 108.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .513815 Tw 12 TL /F5 8 Tf 0 0 0 rg (filter\(function, sequence\)) Tj /F1 8 Tf ( returns a sequence consisting of those items from the sequence) Tj T* 0 Tw .062443 Tw (for which ) Tj /F5 8 Tf (function\(item\)) Tj /F1 8 Tf ( is true. If ) Tj /F4 8 Tf (sequence) Tj /F1 8 Tf ( is a ) Tj /F5 8 Tf (string) Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (tuple) Tj /F1 8 Tf (, the result will be of the same) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (36) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R309': class PDFStream 
309 0 obj
% page stream
<< /Length 8458 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (type; otherwise, it is always a ) Tj /F5 8 Tf (list) Tj /F1 8 Tf (. For example, to compute some primes:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 528.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (f) Tj /F5 8 Tf 0 0 0 rg (\() Tj (x) Tj (\):) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (!=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf (and) Tj /F5 8 Tf ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (!=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (filter) Tj 0 0 0 rg (\() Tj (f) Tj (,) Tj ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (25) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (11) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (17) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (19) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (23) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 496.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .142906 Tw 12 TL /F5 8 Tf 0 0 0 rg (map\(function, sequence\)) Tj /F1 8 Tf ( calls ) Tj /F5 8 Tf (function\(item\)) Tj /F1 8 Tf ( for each of the sequence's items and returns) Tj T* 0 Tw (a list of the return values. For example, to compute some cubes:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 427.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (cube) Tj /F5 8 Tf 0 0 0 rg (\() Tj (x) Tj (\):) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (map) Tj 0 0 0 rg (\() Tj (cube) Tj (,) Tj ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (11) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (27) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (64) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (125) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (216) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (343) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (512) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (729) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1000) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 383.3367 cm
q
BT 1 0 0 1 0 30.256 Tm .509748 Tw 12 TL /F1 8 Tf 0 0 0 rg (More than one sequence may be passed; the function must then have as many arguments as there) Tj T* 0 Tw 1.607731 Tw (are sequences and is called with the corresponding item from each sequence \(or ) Tj /F5 8 Tf (None) Tj /F1 8 Tf ( if some) Tj T* 0 Tw (sequence is shorter than another\). For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 302.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (seq) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (add) Tj /F5 8 Tf 0 0 0 rg (\() Tj (x) Tj (,) Tj ( ) Tj (y) Tj (\):) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (y) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (map) Tj 0 0 0 rg (\() Tj (add) Tj (,) Tj ( ) Tj (seq) Tj (,) Tj ( ) Tj (seq) Tj (\)) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (14) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 258.5367 cm
q
BT 1 0 0 1 0 30.256 Tm .878179 Tw 12 TL /F5 8 Tf 0 0 0 rg (reduce\(function, sequence\)) Tj /F1 8 Tf ( returns a single value constructed by calling the binary function) Tj T* 0 Tw .540598 Tw /F4 8 Tf (function) Tj /F1 8 Tf ( on the first two items of the sequence, then on the result and the next item, and so on. For) Tj T* 0 Tw (example, to compute the sum of the numbers 1 through 10:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 189.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (add) Tj /F5 8 Tf 0 0 0 rg (\() Tj (x) Tj (,) Tj (y) Tj (\):) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (y) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (reduce) Tj 0 0 0 rg (\() Tj (add) Tj (,) Tj ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (11) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (55) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 157.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.09537 Tw 12 TL /F1 8 Tf 0 0 0 rg (If there's only one item in the sequence, its value is returned; if the sequence is empty, an exception is) Tj T* 0 Tw (raised.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 115.7367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.213557 Tw 12 TL /F1 8 Tf 0 0 0 rg (A third argument can be passed to indicate the starting value. In this case the starting value is returned) Tj T* 0 Tw .740939 Tw (for an empty sequence, and the function is first applied to the starting value and the first sequence) Tj T* 0 Tw (item, then to the result and the next item, and so on. For example,) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (37) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R310': class PDFStream 
310 0 obj
% page stream
<< /Length 9265 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 500.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (sum) Tj /F5 8 Tf 0 0 0 rg (\() Tj (seq) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (add) Tj /F5 8 Tf 0 0 0 rg (\() Tj (x) Tj (,) Tj (y) Tj (\):) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (y) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (reduce) Tj 0 0 0 rg (\() Tj (add) Tj (,) Tj ( ) Tj (seq) Tj (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (sum) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (11) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (sum) Tj 0 0 0 rg (\([]\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 468.1367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.143731 Tw 12 TL /F1 8 Tf 0 0 0 rg (Don't use this example's definition of ) Tj /F5 8 Tf (sum\(\)) Tj /F1 8 Tf (: since summing numbers is such a common need, a) Tj T* 0 Tw (built-in function ) Tj /F5 8 Tf (sum\(sequence\)) Tj /F1 8 Tf ( is already provided, and works exactly like this.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 468.1367 cm
Q
q
1 0 0 1 70.4315 468.1367 cm
Q
q
1 0 0 1 70.4315 437.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (List Comprehensions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 359.7367 cm
q
BT 1 0 0 1 0 66.256 Tm 2.396283 Tw 12 TL /F1 8 Tf 0 0 0 rg (List comprehensions provide a concise way to create lists without resorting to use of ) Tj /F5 8 Tf (map\(\)) Tj /F1 8 Tf (,) Tj T* 0 Tw .511198 Tw /F5 8 Tf (filter\(\)) Tj /F1 8 Tf ( and/or ) Tj /F5 8 Tf (lambda) Tj /F1 8 Tf (. The resulting list definition tends often to be clearer than lists built using) Tj T* 0 Tw .476855 Tw (those constructs. Each list comprehension consists of an expression followed by a ) Tj /F5 8 Tf (for) Tj /F1 8 Tf ( clause, then) Tj T* 0 Tw -0.082317 Tw (zero or more ) Tj /F5 8 Tf (for) Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (if) Tj /F1 8 Tf ( clauses. The result will be a list resulting from evaluating the expression in the) Tj T* 0 Tw .243156 Tw (context of the ) Tj /F5 8 Tf (for) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (if) Tj /F1 8 Tf ( clauses which follow it. If the expression would evaluate to a tuple, it must) Tj T* 0 Tw (be parenthesized.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 110.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 240 re B*
Q
q
BT 1 0 0 1 0 222.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (freshfruit) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('  banana') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('  loganberry ') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('passion fruit  ') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj (weapon) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (strip) Tj (\(\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (weapon) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (freshfruit) Tj (]) Tj  T* ([) Tj .729412 .129412 .129412 rg ('banana') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('loganberry') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('passion fruit') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (vec) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec) Tj (]) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (18) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (18) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* ([]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([[) Tj (x) Tj (,) Tj (x) Tj .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec) Tj (]) Tj  T* ([[) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (],) Tj ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg (],) Tj ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (36) Tj /F5 8 Tf 0 0 0 rg (]]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj (x) Tj (,) Tj ( ) Tj (x) Tj .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec) Tj (]) Tj (   ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# error - parens required for tuples) Tj /F5 8 Tf 0 0 0 rg  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* (    ) Tj ([) Tj (x) Tj (,) Tj ( ) Tj (x) Tj .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec) Tj (]) Tj  T* (               ) Tj .188235 .188235 .188235 rg (^) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (SyntaxError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (invalid) Tj ( ) Tj (syntax) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([\() Tj (x) Tj (,) Tj ( ) Tj (x) Tj .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec) Tj (]) Tj  T* ([\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (36) Tj /F5 8 Tf 0 0 0 rg (\)]) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (38) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R311': class PDFStream 
311 0 obj
% page stream
<< /Length 9773 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 500.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (vec1) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (vec2) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (y) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec1) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (y) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec2) Tj (]) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (18) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (36) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (24) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (18) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (54) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj (x) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (y) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec1) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (y) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (vec2) Tj (]) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj (vec1) Tj ([) Tj (i) Tj (]) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (vec2) Tj ([) Tj (i) Tj (]) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (vec1) Tj (\)\)]) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (54) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 468.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .236283 Tw 12 TL /F1 8 Tf 0 0 0 rg (List comprehensions are much more flexible than ) Tj /F5 8 Tf (map\(\)) Tj /F1 8 Tf ( and can be applied to complex expressions) Tj T* 0 Tw (and nested functions:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 423.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (round) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (355) Tj /F5 8 Tf .188235 .188235 .188235 rg (/) Tj /F6 8 Tf .376471 0 .878431 rg (113.0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (i) Tj (\)\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (\)]) Tj  T* ([) Tj .729412 .129412 .129412 rg ('3.1') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('3.14') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('3.142') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('3.1416') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('3.14159') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 415.3367 cm
Q
q
1 0 0 1 70.4315 415.3367 cm
Q
q
1 0 0 1 70.4315 384.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Nested List Comprehensions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 354.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.001054 Tw 12 TL /F1 8 Tf 0 0 0 rg (If you've got the stomach for it, list comprehensions can be nested. They are a powerful tool but -- like) Tj T* 0 Tw (all powerful tools -- they need to be used carefully, if at all.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 336.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Consider the following example of a 3x3 matrix held as a list containing three lists, one list per row:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 256.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (mat) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (        ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (],) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (        ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (],) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (        ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (],) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (       ) Tj (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 236.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Now, if you wanted to swap rows and columns, you could use a list comprehension:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 191.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj ([[) Tj (row) Tj ([) Tj (i) Tj (]) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (row) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (mat) Tj (]) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]]) Tj  T* ([[) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (],) Tj ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (],) Tj ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (]]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 171.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Special care has to be taken for the ) Tj /F4 8 Tf (nested) Tj /F1 8 Tf ( list comprehension:) Tj T* ET
Q
Q
q
1 0 0 1 90.4315 153.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (To avoid apprehension when nesting list comprehensions, read from right to left.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 135.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (A more verbose version of this snippet shows the flow explicitly:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (39) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R312': class PDFStream 
312 0 obj
% page stream
<< /Length 6767 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (]:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (row) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (mat) Tj (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (row) Tj ([) Tj (i) Tj (],) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.283469 Tw 12 TL /F1 8 Tf 0 0 0 rg (In real world, you should prefer builtin functions to complex flow statements. The ) Tj /F5 8 Tf (zip\(\)) Tj /F1 8 Tf ( function would) Tj T* 0 Tw (do a great job for this use case:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 471.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (zip) Tj 0 0 0 rg (\() Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (mat) Tj (\)) Tj  T* ([\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (\)]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 451.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (See ) Tj /F4 8 Tf (tut-unpacking-arguments) Tj /F1 8 Tf ( for details on the asterisk in this line.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 451.3367 cm
Q
q
1 0 0 1 70.4315 451.3367 cm
Q
q
1 0 0 1 70.4315 451.3367 cm
Q
q
1 0 0 1 70.4315 418.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (The ) Tj /F5 14 Tf (del) Tj /F1 14 Tf ( statement) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 364.5367 cm
q
BT 1 0 0 1 0 42.256 Tm .556598 Tw 12 TL /F1 8 Tf 0 0 0 rg (There is a way to remove an item from a list given its index instead of its value: the ) Tj /F5 8 Tf (del) Tj /F1 8 Tf ( statement.) Tj T* 0 Tw .707057 Tw (This differs from the ) Tj /F5 8 Tf (pop\(\)) Tj /F1 8 Tf ( method which returns a value. The ) Tj /F5 8 Tf (del) Tj /F1 8 Tf ( statement can also be used to) Tj T* 0 Tw .166998 Tw (remove slices from a list or clear the entire list \(which we did earlier by assignment of an empty list to) Tj T* 0 Tw (the slice\). For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 223.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234.5) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (333) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234.5) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (66.25) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234.5) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (a) Tj ([:]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj  T* ([]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 203.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F5 8 Tf 0 0 0 rg (del) Tj /F1 8 Tf ( can also be used to delete entire variables:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 170.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (a) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 138.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .350443 Tw 12 TL /F1 8 Tf 0 0 0 rg (Referencing the name ) Tj /F5 8 Tf (a) Tj /F1 8 Tf ( hereafter is an error \(at least until another value is assigned to it\). We'll find) Tj T* 0 Tw (other uses for ) Tj /F5 8 Tf (del) Tj /F1 8 Tf ( later.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 138.9367 cm
Q
q
1 0 0 1 70.4315 138.9367 cm
Q
q
1 0 0 1 70.4315 138.9367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (40) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R313': class PDFStream 
313 0 obj
% page stream
<< /Length 6595 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Tuples and Sequences) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 538.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .013065 Tw 12 TL /F1 8 Tf 0 0 0 rg (We saw that lists and strings have many common properties, such as indexing and slicing operations.) Tj T* 0 Tw -0.167202 Tw (They are two examples of ) Tj /F4 8 Tf (sequence) Tj /F1 8 Tf ( data types \(see ) Tj /F4 8 Tf (typesseq) Tj /F1 8 Tf (\). Since Python is an evolving language,) Tj T* 0 Tw .779465 Tw (other sequence data types may be added. There is also another standard sequence data type: the) Tj T* 0 Tw /F4 8 Tf (tuple) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 520.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (A tuple consists of a number of values separated by commas, for instance:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 391.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12345) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (54321) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('hello!') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* /F6 8 Tf .376471 0 .878431 rg (12345) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj  T* (\() Tj /F6 8 Tf .376471 0 .878431 rg (12345) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (54321) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('hello!') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Tuples may be nested:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj (u) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (t) Tj (,) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (u) Tj  T* (\(\() Tj /F6 8 Tf .376471 0 .878431 rg (12345) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (54321) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('hello!') Tj 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 347.3367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.213252 Tw 12 TL /F1 8 Tf 0 0 0 rg (As you see, on output tuples are always enclosed in parentheses, so that nested tuples are interpreted) Tj T* 0 Tw .18369 Tw (correctly; they may be input with or without surrounding parentheses, although often parentheses are) Tj T* 0 Tw (necessary anyway \(if the tuple is part of a larger expression\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 293.3367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.046135 Tw 12 TL /F1 8 Tf 0 0 0 rg (Tuples have many uses. For example: \(x, y\) coordinate pairs, employee records from a database, etc.) Tj T* 0 Tw -0.24737 Tw (Tuples, like strings, are immutable: it is not possible to assign to the individual items of a tuple \(you can) Tj T* 0 Tw .205248 Tw (simulate much of the same effect with slicing and concatenation, though\). It is also possible to create) Tj T* 0 Tw (tuples which contain mutable objects, such as lists.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 239.3367 cm
q
BT 1 0 0 1 0 42.256 Tm .952233 Tw 12 TL /F1 8 Tf 0 0 0 rg (A special problem is the construction of tuples containing 0 or 1 items: the syntax has some extra) Tj T* 0 Tw .129865 Tw (quirks to accommodate these. Empty tuples are constructed by an empty pair of parentheses; a tuple) Tj T* 0 Tw .244419 Tw (with one item is constructed by following a value with a comma \(it is not sufficient to enclose a single) Tj T* 0 Tw (value in parentheses\). Ugly, but effective. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 122.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (empty) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (\(\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (singleton) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('hello') Tj 0 0 0 rg (,) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# ) Tj (<) Tj (-- note trailing comma) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (empty) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (singleton) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (singleton) Tj  T* (\() Tj .729412 .129412 .129412 rg ('hello') Tj 0 0 0 rg (,\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 102.5367 cm
q
BT 1 0 0 1 0 6.256 Tm .139998 Tw 12 TL /F1 8 Tf 0 0 0 rg (The statement ) Tj /F5 8 Tf (t = 12345, 54321, 'hello!') Tj /F1 8 Tf ( is an example of ) Tj /F4 8 Tf (tuple packing) Tj /F1 8 Tf (: the values ) Tj /F5 8 Tf (12345) Tj /F1 8 Tf (,) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (41) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R314': class PDFStream 
314 0 obj
% page stream
<< /Length 7879 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F5 8 Tf 0 0 0 rg (54321) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf ('hello!') Tj /F1 8 Tf ( are packed together in a tuple. The reverse operation is also possible:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 564.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (x) Tj (,) Tj ( ) Tj (y) Tj (,) Tj ( ) Tj (z) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (t) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 520.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .939664 Tw 12 TL /F1 8 Tf 0 0 0 rg (This is called, appropriately enough, ) Tj /F4 8 Tf (sequence unpacking) Tj /F1 8 Tf (. Sequence unpacking requires the list of) Tj T* 0 Tw .526443 Tw (variables on the left to have the same number of elements as the length of the sequence. Note that) Tj T* 0 Tw (multiple assignment is really just a combination of tuple packing and sequence unpacking!) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 490.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.070752 Tw 12 TL /F1 8 Tf 0 0 0 rg (There is a small bit of asymmetry here: packing multiple values always creates a tuple, and unpacking) Tj T* 0 Tw (works for any sequence.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 490.1367 cm
Q
q
1 0 0 1 70.4315 490.1367 cm
Q
q
1 0 0 1 70.4315 490.1367 cm
Q
q
1 0 0 1 70.4315 457.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Sets) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 415.3367 cm
q
BT 1 0 0 1 0 30.256 Tm .061881 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python also includes a data type for ) Tj /F4 8 Tf (sets) Tj /F1 8 Tf (. A set is an unordered collection with no duplicate elements.) Tj T* 0 Tw 1.238331 Tw (Basic uses include membership testing and eliminating duplicate entries. Set objects also support) Tj T* 0 Tw (mathematical operations like union, intersection, difference, and symmetric difference.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 397.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Here is a brief demonstration:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 100.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 288 re B*
Q
q
BT 1 0 0 1 0 270.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (basket) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('apple') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('orange') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('apple') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('pear') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('orange') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('banana') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fruit) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (set) Tj (\() Tj (basket) Tj (\)) Tj (               ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# create a set without duplicates) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fruit) Tj  T* (set) Tj (\([) Tj .729412 .129412 .129412 rg ('orange') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('pear') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('apple') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('banana') Tj 0 0 0 rg (]\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('orange') Tj 0 0 0 rg ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (fruit) Tj (                 ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# fast membership testing) Tj /F5 8 Tf 0 0 0 rg  T* 0 .439216 .12549 rg (True) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('crabgrass') Tj 0 0 0 rg ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (fruit) Tj  T* 0 .439216 .12549 rg (False) Tj 0 0 0 rg  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Demonstrate set operations on unique letters from two words) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (set) Tj (\() Tj .729412 .129412 .129412 rg ('abracadabra') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (set) Tj (\() Tj .729412 .129412 .129412 rg ('alacazam') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj (                                  ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# unique letters in a) Tj /F5 8 Tf 0 0 0 rg  T* (set) Tj (\([) Tj .729412 .129412 .129412 rg ('a') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('r') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('b') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('c') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('d') Tj 0 0 0 rg (]\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg ( ) Tj (b) Tj (                              ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# letters in a but not in b) Tj /F5 8 Tf 0 0 0 rg  T* (set) Tj (\([) Tj .729412 .129412 .129412 rg ('r') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('d') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('b') Tj 0 0 0 rg (]\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (|) Tj 0 0 0 rg ( ) Tj (b) Tj (                              ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# letters in either a or b) Tj /F5 8 Tf 0 0 0 rg  T* (set) Tj (\([) Tj .729412 .129412 .129412 rg ('a') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('c') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('r') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('d') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('b') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('m') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('z') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('l') Tj 0 0 0 rg (]\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (&) Tj 0 0 0 rg ( ) Tj (b) Tj (                              ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# letters in both a and b) Tj /F5 8 Tf 0 0 0 rg  T* (set) Tj (\([) Tj .729412 .129412 .129412 rg ('a') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('c') Tj 0 0 0 rg (]\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (^) Tj 0 0 0 rg ( ) Tj (b) Tj (                              ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# letters in a or b but not both) Tj /F5 8 Tf 0 0 0 rg  T* (set) Tj (\([) Tj .729412 .129412 .129412 rg ('r') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('d') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('b') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('m') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('z') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('l') Tj 0 0 0 rg (]\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (42) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R315': class PDFStream 
315 0 obj
% page stream
<< /Length 6874 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 608.9367 cm
Q
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Dictionaries) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 502.1367 cm
q
BT 1 0 0 1 0 78.256 Tm 1.792305 Tw 12 TL /F1 8 Tf 0 0 0 rg (Another useful data type built into Python is the ) Tj /F4 8 Tf (dictionary) Tj /F1 8 Tf ( \(see ) Tj /F4 8 Tf (typesmapping) Tj /F1 8 Tf (\). Dictionaries are) Tj T* 0 Tw 2.462906 Tw (sometimes found in other languages as "associative memories" or "associative arrays". Unlike) Tj T* 0 Tw .010748 Tw (sequences, which are indexed by a range of numbers, dictionaries are indexed by ) Tj /F4 8 Tf (keys) Tj /F1 8 Tf (, which can be) Tj T* 0 Tw .847763 Tw (any immutable type; strings and numbers can always be keys. Tuples can be used as keys if they) Tj T* 0 Tw 1.672265 Tw (contain only strings, numbers, or tuples; if a tuple contains any mutable object either directly or) Tj T* 0 Tw .243798 Tw (indirectly, it cannot be used as a key. You can't use lists as keys, since lists can be modified in place) Tj T* 0 Tw (using index assignments, slice assignments, or methods like ) Tj /F5 8 Tf (append\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (extend\(\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 448.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .185798 Tw 12 TL /F1 8 Tf 0 0 0 rg (It is best to think of a dictionary as an unordered set of ) Tj /F4 8 Tf (key: value) Tj /F1 8 Tf ( pairs, with the requirement that the) Tj T* 0 Tw .690248 Tw (keys are unique \(within one dictionary\). A pair of braces creates an empty dictionary: ) Tj /F5 8 Tf ({}) Tj /F1 8 Tf (. Placing a) Tj T* 0 Tw -0.017431 Tw (comma-separated list of key:value pairs within the braces adds initial key:value pairs to the dictionary;) Tj T* 0 Tw (this is also the way dictionaries are written on output.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 394.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .167292 Tw 12 TL /F1 8 Tf 0 0 0 rg (The main operations on a dictionary are storing a value with some key and extracting the value given) Tj T* 0 Tw -0.141638 Tw (the key. It is also possible to delete a key:value pair with ) Tj /F5 8 Tf (del) Tj /F1 8 Tf (. If you store using a key that is already in) Tj T* 0 Tw 1.553051 Tw (use, the old value associated with that key is forgotten. It is an error to extract a value using a) Tj T* 0 Tw (non-existent key.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 352.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.35937 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (keys\(\)) Tj /F1 8 Tf ( method of a dictionary object returns a list of all the keys used in the dictionary, in arbitrary) Tj T* 0 Tw -0.319402 Tw (order \(if you want it sorted, just apply the ) Tj /F5 8 Tf (sort\(\)) Tj /F1 8 Tf ( method to the list of keys\). To check whether a single) Tj T* 0 Tw (key is in the dictionary, use the ) Tj /F5 8 Tf (in) Tj /F1 8 Tf ( keyword.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 334.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Here is a small example using a dictionary:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 145.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 180 re B*
Q
q
BT 1 0 0 1 0 162.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tel) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj .729412 .129412 .129412 rg ('jack') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('sape') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4139) Tj /F5 8 Tf 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tel) Tj ([) Tj .729412 .129412 .129412 rg ('guido') Tj 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tel) Tj  T* ({) Tj .729412 .129412 .129412 rg ('sape') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4139) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('guido') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('jack') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tel) Tj ([) Tj .729412 .129412 .129412 rg ('jack') Tj 0 0 0 rg (]) Tj  T* /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (tel) Tj ([) Tj .729412 .129412 .129412 rg ('sape') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tel) Tj ([) Tj .729412 .129412 .129412 rg ('irv') Tj 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tel) Tj  T* ({) Tj .729412 .129412 .129412 rg ('guido') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('irv') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('jack') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tel) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (keys) Tj (\(\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('guido') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('irv') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('jack') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('guido') Tj 0 0 0 rg ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (tel) Tj  T* 0 .439216 .12549 rg (True) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 113.3367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.263145 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (dict\(\)) Tj /F1 8 Tf ( constructor builds dictionaries directly from lists of key-value pairs stored as tuples. When) Tj T* 0 Tw (the pairs form a pattern, list comprehensions can compactly specify the key-value list.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (43) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R316': class PDFStream 
316 0 obj
% page stream
<< /Length 7559 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dict) Tj 0 0 0 rg (\([\() Tj .729412 .129412 .129412 rg ('sape') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4139) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj (\() Tj .729412 .129412 .129412 rg ('guido') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj (\() Tj .729412 .129412 .129412 rg ('jack') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (\)]\)) Tj  T* ({) Tj .729412 .129412 .129412 rg ('sape') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4139) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('jack') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('guido') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dict) Tj 0 0 0 rg (\([\() Tj (x) Tj (,) Tj ( ) Tj (x) Tj .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (\)]\)) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# use a list comprehension) Tj /F5 8 Tf 0 0 0 rg  T* ({) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (36) Tj /F5 8 Tf 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.303296 Tw 12 TL /F1 8 Tf 0 0 0 rg (Later in the tutorial, we will learn about Generator Expressions which are even better suited for the task) Tj T* 0 Tw (of supplying key-values pairs to the ) Tj /F5 8 Tf (dict\(\)) Tj /F1 8 Tf ( constructor.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 498.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (When the keys are simple strings, it is sometimes easier to specify pairs using keyword arguments:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 453.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dict) Tj 0 0 0 rg (\() Tj (sape) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (4139) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (guido) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (jack) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* ({) Tj .729412 .129412 .129412 rg ('sape') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4139) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('jack') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('guido') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (}) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 445.3367 cm
Q
q
1 0 0 1 70.4315 445.3367 cm
Q
q
1 0 0 1 70.4315 445.3367 cm
Q
q
1 0 0 1 70.4315 412.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Looping Techniques) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 382.5367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.166669 Tw 12 TL /F1 8 Tf 0 0 0 rg (When looping through dictionaries, the key and corresponding value can be retrieved at the same time) Tj T* 0 Tw (using the ) Tj /F5 8 Tf (iteritems\(\)) Tj /F1 8 Tf ( method.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 289.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (knights) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj .729412 .129412 .129412 rg ('gallahad') Tj 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ('the pure') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('robin') Tj 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ('the brave') Tj 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (k) Tj (,) Tj ( ) Tj (v) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (knights) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (iteritems) Tj (\(\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (k) Tj (,) Tj ( ) Tj (v) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (gallahad) Tj ( ) Tj (the) Tj ( ) Tj (pure) Tj  T* (robin) Tj ( ) Tj (the) Tj ( ) Tj (brave) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 257.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.049869 Tw 12 TL /F1 8 Tf 0 0 0 rg (When looping through a sequence, the position index and corresponding value can be retrieved at the) Tj T* 0 Tw (same time using the ) Tj /F5 8 Tf (enumerate\(\)) Tj /F1 8 Tf ( function.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 164.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj (,) Tj ( ) Tj (v) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (enumerate) Tj 0 0 0 rg (\([) Tj .729412 .129412 .129412 rg ('tic') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('tac') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('toe') Tj 0 0 0 rg (]\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj (,) Tj ( ) Tj (v) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (tic) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (tac) Tj  T* /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (toe) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 132.9367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.097109 Tw 12 TL /F1 8 Tf 0 0 0 rg (To loop over two or more sequences at the same time, the entries can be paired with the ) Tj /F5 8 Tf (zip\(\)) Tj T* 0 Tw /F1 8 Tf (function.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (44) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R317': class PDFStream 
317 0 obj
% page stream
<< /Length 6557 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 500.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (questions) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('name') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('quest') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('favorite color') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (answers) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('lancelot') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('the holy grail') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('blue') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (q) Tj (,) Tj ( ) Tj (a) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (zip) Tj 0 0 0 rg (\() Tj (questions) Tj (,) Tj ( ) Tj (answers) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('What is your {0}?  It is {1}.') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (q) Tj (,) Tj ( ) Tj (a) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (What) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (your) Tj ( ) Tj (name) Tj .941176 0 0 rg (?) Tj 0 0 0 rg (  ) Tj (It) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (lancelot) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (What) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (your) Tj ( ) Tj (quest) Tj .941176 0 0 rg (?) Tj 0 0 0 rg (  ) Tj (It) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (the) Tj ( ) Tj (holy) Tj ( ) Tj (grail) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (What) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (your) Tj ( ) Tj (favorite) Tj ( ) Tj (color) Tj .941176 0 0 rg (?) Tj 0 0 0 rg (  ) Tj (It) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (blue) Tj .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 468.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .10822 Tw 12 TL /F1 8 Tf 0 0 0 rg (To loop over a sequence in reverse, first specify the sequence in a forward direction and then call the) Tj T* 0 Tw /F5 8 Tf (reversed\(\)) Tj /F1 8 Tf ( function.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 351.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (reversed) Tj (\() Tj 0 .439216 .12549 rg (xrange) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 319.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .366822 Tw 12 TL /F1 8 Tf 0 0 0 rg (To loop over a sequence in sorted order, use the ) Tj /F5 8 Tf (sorted\(\)) Tj /F1 8 Tf ( function which returns a new sorted list) Tj T* 0 Tw (while leaving the source unaltered.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 202.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (basket) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('apple') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('orange') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('apple') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('pear') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('orange') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('banana') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (f) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (sorted) Tj (\() Tj (set) Tj (\() Tj (basket) Tj (\)\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (f) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (apple) Tj  T* (banana) Tj  T* (orange) Tj  T* (pear) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 194.5367 cm
Q
q
1 0 0 1 70.4315 194.5367 cm
Q
q
1 0 0 1 70.4315 194.5367 cm
Q
q
1 0 0 1 70.4315 161.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (More on Conditions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 143.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The conditions used in ) Tj /F5 8 Tf (while) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (if) Tj /F1 8 Tf ( statements can contain any operators, not just comparisons.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 101.7367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.557748 Tw 12 TL /F1 8 Tf 0 0 0 rg (The comparison operators ) Tj /F5 8 Tf (in) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (not in) Tj /F1 8 Tf ( check whether a value occurs \(does not occur\) in a) Tj T* 0 Tw .653065 Tw (sequence. The operators ) Tj /F5 8 Tf (is) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (is not) Tj /F1 8 Tf ( compare whether two objects are really the same object;) Tj T* 0 Tw .162931 Tw (this only matters for mutable objects like lists. All comparison operators have the same priority, which) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (45) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R318': class PDFStream 
318 0 obj
% page stream
<< /Length 7175 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (is lower than that of all numerical operators.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.166528 Tw 12 TL /F1 8 Tf 0 0 0 rg (Comparisons can be chained. For example, ) Tj /F5 8 Tf (a ) Tj (<) Tj ( b == c) Tj /F1 8 Tf ( tests whether ) Tj /F5 8 Tf (a) Tj /F1 8 Tf ( is less than ) Tj /F5 8 Tf (b) Tj /F1 8 Tf ( and moreover) Tj T* 0 Tw /F5 8 Tf (b) Tj /F1 8 Tf ( equals ) Tj /F5 8 Tf (c) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 500.9367 cm
q
BT 1 0 0 1 0 54.256 Tm 1.404531 Tw 12 TL /F1 8 Tf 0 0 0 rg (Comparisons may be combined using the Boolean operators ) Tj /F5 8 Tf (and) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (or) Tj /F1 8 Tf (, and the outcome of a) Tj T* 0 Tw -0.413602 Tw (comparison \(or of any other Boolean expression\) may be negated with ) Tj /F5 8 Tf (not) Tj /F1 8 Tf (. These have lower priorities) Tj T* 0 Tw .433248 Tw (than comparison operators; between them, ) Tj /F5 8 Tf (not) Tj /F1 8 Tf ( has the highest priority and ) Tj /F5 8 Tf (or) Tj /F1 8 Tf ( the lowest, so that ) Tj /F5 8 Tf (A) Tj T* 0 Tw .195156 Tw (and not B or C) Tj /F1 8 Tf ( is equivalent to ) Tj /F5 8 Tf (\(A and \(not B\)\) or C) Tj /F1 8 Tf (. As always, parentheses can be used) Tj T* 0 Tw (to express the desired composition.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 446.9367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.327079 Tw 12 TL /F1 8 Tf 0 0 0 rg (The Boolean operators ) Tj /F5 8 Tf (and) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (or) Tj /F1 8 Tf ( are so-called ) Tj /F4 8 Tf (short-circuit) Tj /F1 8 Tf ( operators: their arguments are evaluated) Tj T* 0 Tw .08863 Tw (from left to right, and evaluation stops as soon as the outcome is determined. For example, if ) Tj /F5 8 Tf (A) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (C) Tj T* 0 Tw -0.012382 Tw /F1 8 Tf (are true but ) Tj /F5 8 Tf (B) Tj /F1 8 Tf ( is false, ) Tj /F5 8 Tf (A and B and C) Tj /F1 8 Tf ( does not evaluate the expression ) Tj /F5 8 Tf (C) Tj /F1 8 Tf (. When used as a general) Tj T* 0 Tw (value and not as a Boolean, the return value of a short-circuit operator is the last evaluated argument.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 416.9367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.318351 Tw 12 TL /F1 8 Tf 0 0 0 rg (It is possible to assign the result of a comparison or other Boolean expression to a variable. For) Tj T* 0 Tw (example,) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 348.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (string1) Tj (,) Tj ( ) Tj (string2) Tj (,) Tj ( ) Tj (string3) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Trondheim') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Hammer Dance') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (non_null) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (string1) Tj ( ) Tj /F6 8 Tf (or) Tj /F5 8 Tf ( ) Tj (string2) Tj ( ) Tj /F6 8 Tf (or) Tj /F5 8 Tf ( ) Tj (string3) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (non_null) Tj  T* .729412 .129412 .129412 rg ('Trondheim') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 304.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.486459 Tw 12 TL /F1 8 Tf 0 0 0 rg (Note that in Python, unlike C, assignment cannot occur inside expressions. C programmers may) Tj T* 0 Tw .121175 Tw (grumble about this, but it avoids a common class of problems encountered in C programs: typing ) Tj /F5 8 Tf (=) Tj /F1 8 Tf ( in) Tj T* 0 Tw (an expression when ) Tj /F5 8 Tf (==) Tj /F1 8 Tf ( was intended.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 304.1367 cm
Q
q
1 0 0 1 70.4315 304.1367 cm
Q
q
1 0 0 1 70.4315 304.1367 cm
Q
q
1 0 0 1 70.4315 271.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Comparing Sequences and Other Types) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 157.3367 cm
q
BT 1 0 0 1 0 102.256 Tm .361426 Tw 12 TL /F1 8 Tf 0 0 0 rg (Sequence objects may be compared to other objects with the same sequence type. The comparison) Tj T* 0 Tw .310131 Tw (uses ) Tj /F4 8 Tf (lexicographical) Tj /F1 8 Tf ( ordering: first the first two items are compared, and if they differ this determines) Tj T* 0 Tw .502887 Tw (the outcome of the comparison; if they are equal, the next two items are compared, and so on, until) Tj T* 0 Tw .752265 Tw (either sequence is exhausted. If two items to be compared are themselves sequences of the same) Tj T* 0 Tw .237426 Tw (type, the lexicographical comparison is carried out recursively. If all items of two sequences compare) Tj T* 0 Tw .542665 Tw (equal, the sequences are considered equal. If one sequence is an initial sub-sequence of the other,) Tj T* 0 Tw .427141 Tw (the shorter sequence is the smaller \(lesser\) one. Lexicographical ordering for strings uses the ASCII) Tj T* 0 Tw .645664 Tw (ordering for individual characters. Some examples of comparisons between sequences of the same) Tj T* 0 Tw (type:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 100.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (              ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj (              ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .729412 .129412 .129412 rg ('ABC') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('C') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Pascal') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Python') Tj 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (46) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R319': class PDFStream 
319 0 obj
% page stream
<< /Length 7714 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (           ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (                 ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (             ) Tj .188235 .188235 .188235 rg (==) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1.0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2.0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3.0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (\() Tj .729412 .129412 .129412 rg ('aa') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ab') Tj 0 0 0 rg (\)\)) Tj (   ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (\() Tj .729412 .129412 .129412 rg ('abc') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('a') Tj 0 0 0 rg (\),) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 492.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .309065 Tw 12 TL /F1 8 Tf 0 0 0 rg (Note that comparing objects of different types is legal. The outcome is deterministic but arbitrary: the) Tj T* 0 Tw .035156 Tw (types are ordered by their name. Thus, a list is always smaller than a string, a string is always smaller) Tj T* 0 Tw .389881 Tw (than a tuple, etc. ) Tj /F1 6 Tf 0 0 .501961 rg 4 Ts (1) Tj /F1 8 Tf 0 0 0 rg 0 Ts ( Mixed numeric types are compared according to their numeric value, so 0 equals) Tj T* 0 Tw (0.0, etc.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 474.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 161.938 0 Td 12 TL /F1 8 Tf .545098 0 0 rg (Footnotes) Tj T* -161.938 0 Td ET
Q
Q
q
1 0 0 1 70.4315 474.1367 cm
Q
q
1 0 0 1 70.4315 444.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 .501961 rg (1) Tj T* ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 18.256 Tm -0.439617 Tw 12 TL /F1 8 Tf 0 0 0 rg (The rules for comparing objects of different types should not be relied upon;) Tj T* 0 Tw (they may change in a future version of the language.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 444.1367 cm
Q
q
1 0 0 1 70.4315 444.1367 cm
Q
q
1 0 0 1 70.4315 444.1367 cm
Q
q
1 0 0 1 70.4315 408.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (M\363dulos) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 330.9367 cm
q
BT 1 0 0 1 0 66.256 Tm -0.072252 Tw 12 TL /F1 8 Tf 0 0 0 rg (Si sal\355s del int\351rprete de Python y entr\341s de nuevo, las definiciones que hiciste \(funciones y variables\)) Tj T* 0 Tw .726887 Tw (se pierden. Por lo tanto, si quer\351s escribir un programa m\341s o menos largo, es mejor que uses un) Tj T* 0 Tw .177248 Tw (editor de texto para preparar la entrada para el interprete y ejecutarlo con ese archivo como entrada.) Tj T* 0 Tw .403528 Tw (Esto es conocido como crear un ) Tj /F4 8 Tf (gui\363n) Tj /F1 8 Tf (, o ) Tj /F4 8 Tf (script) Tj /F1 8 Tf (. Si tu programa se vuelve m\341s largo, quiz\341s quieras) Tj T* 0 Tw .904305 Tw (separarlo en distintos archivos para un mantenimiento m\341s f\341cil. Quiz\341s tambi\351n quieras usar una) Tj T* 0 Tw (funci\363n \372til que escribiste desde distintos programas sin copiar su definici\363n a cada programa.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 276.9367 cm
q
BT 1 0 0 1 0 42.256 Tm .926748 Tw 12 TL /F1 8 Tf 0 0 0 rg (Para soportar esto, Python tiene una manera de poner definiciones en un archivo y usarlos en un) Tj T* 0 Tw .160798 Tw (script o en una instancia interactiva del int\351rprete. Tal archivo es llamado ) Tj /F4 8 Tf (m\363dulo) Tj /F1 8 Tf (; las definiciones de) Tj T* 0 Tw .289748 Tw (un m\363dulo pueden ser ) Tj /F4 8 Tf (importadas) Tj /F1 8 Tf ( a otros m\363dulos o al m\363dulo ) Tj /F4 8 Tf (principal) Tj /F1 8 Tf ( \(la colecci\363n de variables a) Tj T* 0 Tw (las que ten\351s acceso en un script ejecutado en el nivel superior y en el modo calculadora\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 210.9367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.114574 Tw 12 TL /F1 8 Tf 0 0 0 rg (Un m\363dulo es una archivo conteniendo definiciones y declaraciones de Python. El nombre del archivo) Tj T* 0 Tw .994586 Tw (es el nombre del m\363dulo con el sufijo ) Tj /F5 8 Tf (.py) Tj /F1 8 Tf ( agregado. Dentro de un m\363dulo, el nombre del mismo) Tj T* 0 Tw .528748 Tw (\(como una cadena\) est\341 disponible en el valor de la variable global ) Tj /F5 8 Tf (__name__) Tj /F1 8 Tf (. Por ejemplo, us\341 tu) Tj T* 0 Tw -0.365752 Tw (editor de textos favorito para crear un archivo llamado ) Tj /F5 8 Tf (fibo.py) Tj /F1 8 Tf ( en el directorio actual, con el siguiente) Tj T* 0 Tw (contenido:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 106.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F7 8 Tf .501961 .501961 .501961 rg (# m\363dulo de n\372meros Fibonacci) Tj /F5 8 Tf 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (fib) Tj /F5 8 Tf 0 0 0 rg (\() Tj (n) Tj (\):) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# escribe la serie Fibonacci hasta n) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj (n) Tj (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj (,) Tj  T* (        ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (b) Tj (,) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (b) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (47) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R320': class PDFStream 
320 0 obj
% page stream
<< /Length 8075 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 500.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (fib2) Tj /F5 8 Tf 0 0 0 rg (\() Tj (n) Tj (\):) Tj ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# devuelve la serie Fibonacci hasta n) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj (resultado) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([]) Tj  T* (    ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj (n) Tj (:) Tj  T* (        ) Tj (resultado) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj (b) Tj (\)) Tj  T* (        ) Tj (a) Tj (,) Tj ( ) Tj (b) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (b) Tj (,) Tj ( ) Tj (a) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (b) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (resultado) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Ahora entr\341 al int\351rprete de Python e import\341 este m\363dulo con la siguiente orden:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 447.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (fibo) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 403.3367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.161252 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esto no mete los nombres de las funciones definidas en ) Tj /F5 8 Tf (fibo) Tj /F1 8 Tf ( directamente en el espacio de nombres) Tj T* 0 Tw -0.125414 Tw (actual; s\363lo mete ah\355 el nombre del m\363dulo, ) Tj /F5 8 Tf (fibo) Tj /F1 8 Tf (. Usando el nombre del m\363dulo pod\351s acceder a las) Tj T* 0 Tw (funciones:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 310.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fibo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (fib) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1000) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (144) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (233) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (377) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (610) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (987) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fibo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (fib2) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fibo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (__name__) Tj  T* .729412 .129412 .129412 rg ('fibo') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 290.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Si pens\341s usar la funci\363n frecuentemente, pod\351s asignarla a un nombre local:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 233.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fib) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (fibo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (fib) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fib) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (500) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (144) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (233) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (377) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 225.7367 cm
Q
q
1 0 0 1 70.4315 225.7367 cm
Q
q
1 0 0 1 70.4315 225.7367 cm
Q
q
1 0 0 1 70.4315 192.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (M\341s sobre los m\363dulos) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 150.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .944361 Tw 12 TL /F1 8 Tf 0 0 0 rg (Un m\363dulo puede contener tanto declaraciones ejecutables como definiciones de funciones. Estas) Tj T* 0 Tw -0.082002 Tw (declaraciones est\341n pensadas para inicializar el m\363dulo. Se ejecutan solamente la ) Tj /F4 8 Tf (primera) Tj /F1 8 Tf ( vez que el) Tj T* 0 Tw (m\363dulo se importa en alg\372n lado. ) Tj /F1 6 Tf 0 0 .501961 rg 4 Ts (1) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 108.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .149248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Cada m\363dulo tiene su propio espacio de nombres, el que es usado como espacio de nombres global) Tj T* 0 Tw 1.499528 Tw (por todas las funciones definidas en el m\363dulo. Por lo tanto, el autor de un m\363dulo puede usar) Tj T* 0 Tw 1.283141 Tw (variables globales en el m\363dulo sin preocuparse acerca de conflictos con una variable global del) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (48) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R321': class PDFStream 
321 0 obj
% page stream
<< /Length 7275 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.252002 Tw 12 TL /F1 8 Tf 0 0 0 rg (usuario. Por otro lado, si sab\351s lo que est\341s haciendo pod\351s tocar las variables globales de un m\363dulo) Tj T* 0 Tw (con la misma notaci\363n usada para referirte a sus funciones, ) Tj /F5 8 Tf (nombremodulo.nombreitem) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 542.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .902569 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los m\363dulos pueden importar otros m\363dulos. Es costumbre pero no obligatorio el ubicar todas las) Tj T* 0 Tw .613065 Tw (declaraciones ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( al principio del m\363dulo \(o script, para el caso\). Los nombres de los m\363dulos) Tj T* 0 Tw (importados se ubican en el espacio de nombres global del m\363dulo que hace la importaci\363n.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 512.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .493065 Tw 12 TL /F1 8 Tf 0 0 0 rg (Hay una variante de la declaraci\363n ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( que importa los nombres de un m\363dulo directamente al) Tj T* 0 Tw (espacio de nombres del m\363dulo que hace la importaci\363n. Por ejemplo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 456.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (fibo) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (fib) Tj (,) Tj ( ) Tj (fib2) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fib) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (500) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (144) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (233) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (377) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 424.1367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.657645 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esto no introduce en el espacio de nombres local el nombre del m\363dulo desde el cual se est\341) Tj T* 0 Tw (importando \(entonces, en el ejemplo, ) Tj /F5 8 Tf (fibo) Tj /F1 8 Tf ( no se define\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 406.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Hay incluso una variante para importar todos los nombres que un m\363dulo define:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 349.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (fibo) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fib) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (500) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (55) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (89) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (144) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (233) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (377) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 329.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Esto importa todos los nombres excepto aquellos que comienzan con un subrayado \() Tj /F5 8 Tf (_) Tj /F1 8 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 241.3367 cm
q
.5 w
.666667 .8 .6 RG
.933333 1 .8 rg
n 0 0 359.252 75.8 re B*
Q
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 8.6 50.6 cm
q
BT 1 0 0 1 0 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Note) Tj T* ET
Q
Q
Q
q
1 0 0 1 0 0 cm
q
1 0 0 1 8.6 8.6 cm
q
BT 1 0 0 1 0 30.256 Tm -0.202752 Tw 12 TL /F1 8 Tf 0 0 0 rg (Por razones de eficiencia, cada m\363dulo se importa una vez por sesi\363n del int\351rprete. Por lo tanto,) Tj T* 0 Tw .673645 Tw (si cambi\341s los m\363dulos, ten\351s que reiniciar el int\351rprete -- o, si es s\363lo un m\363dulo que quer\351s) Tj T* 0 Tw (probar interactivamente, us\341 ) Tj /F5 8 Tf (reload\(\)) Tj /F1 8 Tf (, por ejemplo ) Tj /F5 8 Tf (reload\(nombremodulo\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 235.3367 cm
Q
q
1 0 0 1 70.4315 235.3367 cm
Q
q
1 0 0 1 70.4315 235.3367 cm
Q
q
1 0 0 1 70.4315 204.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Ejecutando m\363dulos como scripts) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 186.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Cuando ejecut\341s un m\363dulo de Python con) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 154.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (python) Tj ( ) Tj (fibo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (argumentos) Tj .188235 .188235 .188235 rg (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 122.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .222748 Tw 12 TL /F1 8 Tf 0 0 0 rg (...el c\363digo en el m\363dulo ser\341 ejecutado, tal como si lo hubieses importado, pero con ) Tj /F5 8 Tf (__name__) Tj /F1 8 Tf ( con) Tj T* 0 Tw (el valor de ) Tj /F5 8 Tf ("__main__") Tj /F1 8 Tf (. Eso significa que agregando este c\363digo al final de tu m\363dulo:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (49) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R322': class PDFStream 
322 0 obj
% page stream
<< /Length 5841 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (__name__) Tj ( ) Tj .188235 .188235 .188235 rg (==) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("__main__") Tj 0 0 0 rg (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sys) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj (fib) Tj (\() Tj 0 .439216 .12549 rg (int) Tj 0 0 0 rg (\() Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (argv) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]\)\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .426931 Tw 12 TL /F1 8 Tf 0 0 0 rg (...pod\351s hacer que el archivo sea utilizable tanto como script como un m\363dulo importable, porque el) Tj T* 0 Tw 1.566748 Tw (c\363digo que analiza la linea de \363rdenes s\363lo se ejecuta si el m\363dulo es ejecutado como archivo) Tj T* 0 Tw (principal:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 471.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .941176 0 0 rg ($) Tj 0 0 0 rg ( ) Tj (python) Tj ( ) Tj (fibo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (50) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (13) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (21) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (34) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 451.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Si el m\363dulo se importa, ese c\363digo no se ejecuta:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 406.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (fibo) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 374.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .741426 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esto es frecuentemente usado para proveer al m\363dulo una interfaz de usuario conveniente, o para) Tj T* 0 Tw (prop\363sitos de prueba \(ejecutar el m\363dulo como un script ejecuta el juego de pruebas\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 374.5367 cm
Q
q
1 0 0 1 70.4315 374.5367 cm
Q
q
1 0 0 1 70.4315 374.5367 cm
Q
q
1 0 0 1 70.4315 344.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (El camino de b\372squeda de los m\363dulos) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 338.1367 cm
Q
q
1 0 0 1 70.4315 260.1367 cm
q
BT 1 0 0 1 0 66.256 Tm .375198 Tw 12 TL /F1 8 Tf 0 0 0 rg (Cuando se importa un m\363dulo llamado ) Tj /F5 8 Tf (spam) Tj /F1 8 Tf (, el int\351rprete busca un archivo llamado ) Tj /F5 8 Tf (spam.py) Tj /F1 8 Tf ( en el) Tj T* 0 Tw .576265 Tw (directorio actual, y luego en la lista de directorios especificada por la variable de entorno ) Tj /F3 8 Tf (PYTHON\255) Tj T* 0 Tw .702887 Tw (PATH) Tj /F1 8 Tf (. Esta tiene la misma sint\341xis que la variable de shell ) Tj /F3 8 Tf (PATH) Tj /F1 8 Tf (, o sea, una lista de nombres de) Tj T* 0 Tw .267141 Tw (directorios. Cuando ) Tj /F3 8 Tf (PYTHONPATH) Tj /F1 8 Tf ( no est\341 configurada, o cuando el archivo no se encuentra all\355, la) Tj T* 0 Tw 2.083998 Tw (b\372squeda continua en un camino por default que depende de la instalaci\363n; en Unix, este es) Tj T* 0 Tw (normalmente ) Tj /F5 8 Tf (.:/usr/lib/python) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 158.1367 cm
q
BT 1 0 0 1 0 90.256 Tm .367292 Tw 12 TL /F1 8 Tf 0 0 0 rg (En realidad, los m\363dulos se buscan en la lista de directorios dada por la variable ) Tj /F5 8 Tf (sys.path) Tj /F1 8 Tf (, la cual) Tj T* 0 Tw .043998 Tw (se inicializa con el directorio que contiene al script de entrada \(o el directorio actual\), ) Tj /F3 8 Tf (PYTHONPATH) Tj /F1 8 Tf (,) Tj T* 0 Tw .544265 Tw (y el directorio default dependiente de la instalaci\363n. Esto permite que los programas en Python que) Tj T* 0 Tw .010398 Tw (saben lo que est\341n haciendo modifiquen o reemplacen el camino de b\372squeda de los m\363dulos. Notar) Tj T* 0 Tw 1.316939 Tw (que como el directorio que contiene el script que se ejecuta est\341 en el camino de b\372squeda, es) Tj T* 0 Tw -0.211752 Tw (importante que el script no tenga el mismo nombre que un m\363dulo est\341ndar, o Python intentar\341 cargar) Tj T* 0 Tw .679248 Tw (el script como un m\363dulo cuando ese m\363dulo se importe. Esto generalmente ser\341 un error. Mir\341 la) Tj T* 0 Tw (secci\363n ) Tj /F4 8 Tf (tut-standardmodules) Tj /F1 8 Tf ( para m\341s informaci\363n.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 158.1367 cm
Q
q
1 0 0 1 70.4315 158.1367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (50) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R323': class PDFStream 
323 0 obj
% page stream
<< /Length 7690 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 594.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Archivos "compilados" de Python) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 528.5367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.210002 Tw 12 TL /F1 8 Tf 0 0 0 rg (Como una importante aceleraci\363n del tiempo de arranque para programas cortos que usan un mont\363n) Tj T* 0 Tw .089865 Tw (de los m\363dulos est\341ndar, si un archivo llamado ) Tj /F5 8 Tf (spam.pyc) Tj /F1 8 Tf ( existe en el directorio donde se encuentra) Tj T* 0 Tw .996248 Tw /F5 8 Tf (spam.py) Tj /F1 8 Tf (, se asume que contiene una versi\363n ya "compilada a byte" del m\363dulo ) Tj /F5 8 Tf (spam) Tj /F1 8 Tf ( \(lo que se) Tj T* 0 Tw 2.31969 Tw (denomina ) Tj /F4 8 Tf (bytecode) Tj /F1 8 Tf (\). La fecha y hora de modificaci\363n del archivo ) Tj /F5 8 Tf (spam.py) Tj /F1 8 Tf ( usado para crear) Tj T* 0 Tw /F5 8 Tf (spam.pyc) Tj /F1 8 Tf ( se graba en este \372ltimo, y el ) Tj /F5 8 Tf (.pyc) Tj /F1 8 Tf ( se ignora si estos no coinciden.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 450.5367 cm
q
BT 1 0 0 1 0 66.256 Tm .383712 Tw 12 TL /F1 8 Tf 0 0 0 rg (Normalmente, no necesit\341s hacer nada para crear el archivo ) Tj /F5 8 Tf (spam.pyc) Tj /F1 8 Tf (. Siempre que el se compile) Tj T* 0 Tw .174569 Tw (satisfactoriamente el ) Tj /F5 8 Tf (spam.py) Tj /F1 8 Tf (, se hace un intento de escribir la versi\363n compilada al ) Tj /F5 8 Tf (spam.pyc) Tj /F1 8 Tf (. No) Tj T* 0 Tw 1.031292 Tw (es un error si este intento falla, si por cualquier raz\363n el archivo no se escribe completamente, el) Tj T* 0 Tw 3.680361 Tw (archivo ) Tj /F5 8 Tf (spam.pyc) Tj /F1 8 Tf ( resultante se reconocer\341 como inv\341lido luego. El contenido del archivo) Tj T* 0 Tw 2.191141 Tw /F5 8 Tf (spam.pyc) Tj /F1 8 Tf ( es independiente de la plataforma, por lo que un directorio de m\363dulos puede ser) Tj T* 0 Tw (compartido por m\341quinas de diferentes arquitecturas.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 432.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Algunos consejos para expertos:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 430.5367 cm
Q
q
1 0 0 1 70.4315 382.5367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 36 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 42.256 Tm .263198 Tw 12 TL /F1 8 Tf 0 0 0 rg (Cuando se invoca el int\351rprete de Python con la opci\363n ) Tj /F4 8 Tf (-O) Tj /F1 8 Tf (, se genera c\363digo optimizado que) Tj T* 0 Tw .732331 Tw (se almacena en archivos ) Tj /F5 8 Tf (.pyo) Tj /F1 8 Tf (. El optimizador actualmente no ayuda mucho; s\363lo remueve) Tj T* 0 Tw .798569 Tw (las declaraciones ) Tj /F5 8 Tf (assert) Tj /F1 8 Tf (. Cuando se usa ) Tj /F4 8 Tf (-O) Tj /F1 8 Tf (, se optimiza ) Tj /F4 8 Tf (todo) Tj /F1 8 Tf ( el ) Tj /F4 8 Tf (bytecode) Tj /F1 8 Tf (; se ignoran los) Tj T* 0 Tw (archivos ) Tj /F5 8 Tf (.pyc) Tj /F1 8 Tf ( y los archivos ) Tj /F5 8 Tf (.py) Tj /F1 8 Tf ( se compilan a bytecode optimizado.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 322.5367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 48 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 54.256 Tm 1.092613 Tw 12 TL /F1 8 Tf 0 0 0 rg (Pasando dos opciones ) Tj /F4 8 Tf (-O) Tj /F1 8 Tf ( al int\351rprete de Python \() Tj /F4 8 Tf (-OO) Tj /F1 8 Tf (\) causar\341 que el compilador realice) Tj T* 0 Tw 2.017815 Tw (optimizaciones que en algunos raros casos podr\355a resultar en programas que funcionen) Tj T* 0 Tw .015597 Tw (incorrectamente. Actualmente, solamente se remueven del bytecode a las cadenas ) Tj /F5 8 Tf (__doc__) Tj /F1 8 Tf (,) Tj T* 0 Tw 1.403997 Tw (resultando en archivos ) Tj /F5 8 Tf (.pyo) Tj /F1 8 Tf ( m\341s compactos. Ya que algunos programan necesitan tener) Tj T* 0 Tw (disponibles estas cadenas, s\363lo deber\355as usar esta opci\363n si sab\351s lo que est\341s haciendo.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 286.5367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 24 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 30.256 Tm .406351 Tw 12 TL /F1 8 Tf 0 0 0 rg (Un programa no corre m\341s r\341pido cuando se lee de un archivo ) Tj /F5 8 Tf (.pyc) Tj /F1 8 Tf ( o ) Tj /F5 8 Tf (.pyo) Tj /F1 8 Tf ( que cuando se) Tj T* 0 Tw .12063 Tw (lee del ) Tj /F5 8 Tf (.py) Tj /F1 8 Tf (; lo \372nico que es m\341s r\341pido en los archivos ) Tj /F5 8 Tf (.pyc) Tj /F1 8 Tf ( o ) Tj /F5 8 Tf (.pyo) Tj /F1 8 Tf ( es la velocidad con que) Tj T* 0 Tw (se cargan.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 226.5367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 48 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 54.256 Tm 1.300531 Tw 12 TL /F1 8 Tf 0 0 0 rg (Cuando se ejecuta un script desde la linea de \363rdenes, nunca se escribe el bytecode del) Tj T* 0 Tw .930116 Tw (script a los archivos ) Tj /F5 8 Tf (.pyc) Tj /F1 8 Tf ( o ) Tj /F5 8 Tf (.pyo) Tj /F1 8 Tf (. Por lo tanto, el tiempo de comienzo de un script puede) Tj T* 0 Tw .135748 Tw (reducirse moviendo la mayor parte de su c\363dugo a un m\363dulo y usando un peque\361o script de) Tj T* 0 Tw .971712 Tw (arranque que importe el m\363dulo. Tambi\351n es posible nombrar a los archivos ) Tj /F5 8 Tf (.pyc) Tj /F1 8 Tf ( o ) Tj /F5 8 Tf (.pyo) Tj T* 0 Tw /F1 8 Tf (directamente desde la linea de \363rdenes.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 178.5367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 36 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 42.256 Tm .324855 Tw 12 TL /F1 8 Tf 0 0 0 rg (Es posible tener archivos llamados ) Tj /F5 8 Tf (spam.pyc) Tj /F1 8 Tf ( \(o ) Tj /F5 8 Tf (spam.pyo) Tj /F1 8 Tf ( cuando se usa la opci\363n ) Tj /F4 8 Tf (-O) Tj /F1 8 Tf (\) sin) Tj T* 0 Tw .901426 Tw (un archivo ) Tj /F5 8 Tf (spam.py) Tj /F1 8 Tf ( para el mismo m\363dulo. Esto puede usarse para distribuir el c\363digo de) Tj T* 0 Tw 1.021844 Tw (una biblioteca de python en una forma que es moderadamente dif\355cil de hacerle ingenier\355a) Tj T* 0 Tw (inversa.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 178.5367 cm
Q
q
1 0 0 1 70.4315 154.5367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm 1.834151 Tw 12 TL /F1 8 Tf 0 0 0 rg (El m\363dulo ) Tj /F5 8 Tf (compileall) Tj /F1 8 Tf ( puede crear archivos ) Tj /F5 8 Tf (.pyc) Tj /F1 8 Tf ( \(o archivos ) Tj /F5 8 Tf (.pyo) Tj /F1 8 Tf ( cuando se usa la) Tj T* 0 Tw (opci\363n ) Tj /F4 8 Tf (-O) Tj /F1 8 Tf (\) para todos los m\363dulos en un directorio.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 154.5367 cm
Q
q
1 0 0 1 70.4315 154.5367 cm
Q
q
1 0 0 1 70.4315 154.5367 cm
Q
q
1 0 0 1 70.4315 121.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (M\363dulos est\341ndar) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 115.7367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (51) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R324': class PDFStream 
324 0 obj
% page stream
<< /Length 6351 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 500.9367 cm
q
BT 1 0 0 1 0 102.256 Tm 2.06369 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python viene con una biblioteca de m\363dulos est\341ndar, descrita en un documento separado, la) Tj T* 0 Tw 1.765998 Tw (Referencia de la Biblioteca de Python \(de aqu\355 en m\341s, "Referencia de la Biblioteca"\). Algunos) Tj T* 0 Tw -0.240752 Tw (m\363dulos se integran en el int\351rprete; estos proveen acceso a operaciones que no son parte del n\372cleo) Tj T* 0 Tw -0.018935 Tw (del lenguaje pero que sin embargo est\341n integrados, tanto por eficiencia como para proveer acceso a) Tj T* 0 Tw 1.316855 Tw (primitivas del sistema operativo, como llamadas al sistema. El conjunto de tales m\363dulos es una) Tj T* 0 Tw -0.242574 Tw (opci\363n de configuraci\363n el cual tambi\351n depende de la plataforma subyacente. Por ejemplo, el m\363dulo) Tj T* 0 Tw 1.100855 Tw /F5 8 Tf (winreg) Tj /F1 8 Tf ( s\363lo se provee en sistemas Windows. Un m\363dulo en particular merece algo de atenci\363n:) Tj T* 0 Tw .854665 Tw /F5 8 Tf (sys) Tj /F1 8 Tf (, el que est\341 integrado en todos los int\351rpretes de Python. Las variables ) Tj /F5 8 Tf (sys.ps1) Tj /F1 8 Tf ( y ) Tj /F5 8 Tf (sys.ps2) Tj T* 0 Tw /F1 8 Tf (definen las cadenas usadas como cursores primarios y secundarios:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 372.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sys) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (ps1) Tj  T* .729412 .129412 .129412 rg (') Tj (>) Tj (>) Tj (>) Tj ( ') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (ps2) Tj  T* .729412 .129412 .129412 rg ('... ') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (ps1) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('C) Tj (>) Tj ( ') Tj 0 0 0 rg  T* (C) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Yuck!') Tj 0 0 0 rg  T* (Yuck) Tj .941176 0 0 rg (!) Tj 0 0 0 rg  T* (C) Tj .188235 .188235 .188235 rg (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 352.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Estas dos variables est\341n solamente definidas si el int\351rprete est\341 en modo interactivo.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 298.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .118131 Tw 12 TL /F1 8 Tf 0 0 0 rg (La variable ) Tj /F5 8 Tf (sys.path) Tj /F1 8 Tf ( es una lista de cadenas que determinan el camino de b\372squeda del int\351rprete) Tj T* 0 Tw .318248 Tw (para los m\363dulos. Se inicializa por omisi\363n a un camino tomado de la variable de entorno ) Tj /F3 8 Tf (PYTHON\255) Tj T* 0 Tw 1.257331 Tw (PATH) Tj /F1 8 Tf (, o a un valor predefinido en el int\351rprete si ) Tj /F3 8 Tf (PYTHONPATH) Tj /F1 8 Tf ( no est\341 configurada. Lo pod\351s) Tj T* 0 Tw (modificar usando las operaciones est\341ndar de listas:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 253.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sys) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (path) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj .729412 .129412 .129412 rg ('/ufs/guido/lib/python') Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 245.3367 cm
Q
q
1 0 0 1 70.4315 245.3367 cm
Q
q
1 0 0 1 70.4315 245.3367 cm
Q
q
1 0 0 1 70.4315 212.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (La funci\363n ) Tj /F5 14 Tf (dir\(\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 182.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .189065 Tw 12 TL /F1 8 Tf 0 0 0 rg (La funci\363n integrada ) Tj /F5 8 Tf (dir\(\)) Tj /F1 8 Tf ( se usa par encontrar que nombres define un m\363dulo. Devuelve una lista) Tj T* 0 Tw (ordenada de cadenas:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 103.4277 cm
q
q
.976772 0 0 .976772 0 0 cm
q
1 0 0 1 6.4 6.552197 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 367.2 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (fibo) Tj /F5 8 Tf .188235 .188235 .188235 rg (,) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sys) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dir) Tj 0 0 0 rg (\() Tj (fibo) Tj (\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('__name__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('fib') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('fib2') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dir) Tj 0 0 0 rg (\() Tj (sys) Tj (\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('__displayhook__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__doc__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__excepthook__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__name__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__stderr__') Tj 0 0 0 rg (,) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (52) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R325': class PDFStream 
325 0 obj
% page stream
<< /Length 11987 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 495.386 cm
q
q
.939989 0 0 .939989 0 0 cm
q
1 0 0 1 6.4 6.808587 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 381.6 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('__stdin__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__stdout__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('_getframe') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('api_version') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('argv') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('builtin_module_names') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('byteorder') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('callstats') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('copyright') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('displayhook') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('exc_clear') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('exc_info') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('exc_type') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('excepthook') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('exec_prefix') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('executable') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('exit') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('getdefaultencoding') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('getdlopenflags') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('getrecursionlimit') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('getrefcount') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('hexversion') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('maxint') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('maxunicode') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('meta_path') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('modules') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('path') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('path_hooks') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('path_importer_cache') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('platform') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('prefix') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ps1') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ps2') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('setcheckinterval') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('setdlopenflags') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('setprofile') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('setrecursionlimit') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('settrace') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('stderr') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('stdin') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('stdout') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('version') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('version_info') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('warnoptions') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 475.386 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Sin argumentos, ) Tj /F5 8 Tf (dir\(\)) Tj /F1 8 Tf ( lista los nombres que ten\351s actualmente definidos:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 399.8031 cm
q
q
.928337 0 0 .928337 0 0 cm
q
1 0 0 1 6.4 6.89405 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 386.4 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (fibo) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fib) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (fibo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (fib) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dir) Tj 0 0 0 rg (\(\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('__builtins__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__doc__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__file__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__name__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('a') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('fib') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('fibo') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('sys') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 379.8031 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Not\341 que lista todos los tipos de nombres: variables, m\363dulos, funciones, etc.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 379.8031 cm
Q
q
1 0 0 1 70.4315 349.8031 cm
q
BT 1 0 0 1 0 18.256 Tm -0.146119 Tw 12 TL /F5 8 Tf 0 0 0 rg (dir\(\)) Tj /F1 8 Tf ( no lista los nombres de las funciones y variables integradas. Si quer\351s una lista de esos, est\341n) Tj T* 0 Tw (definidos en el m\363dulo est\341ndar ) Tj /F5 8 Tf (__builtin__) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 115.4536 cm
q
q
.939989 0 0 .939989 0 0 cm
q
1 0 0 1 6.4 6.808587 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 381.6 240 re B*
Q
q
BT 1 0 0 1 0 222.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (__builtin__) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dir) Tj 0 0 0 rg (\() Tj (__builtin__) Tj (\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('ArithmeticError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('AssertionError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('AttributeError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('DeprecationWarning') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('EOFError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Ellipsis') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('EnvironmentError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Exception') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('False') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('FloatingPointError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('FutureWarning') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('IOError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ImportError') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('IndentationError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('IndexError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('KeyError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('KeyboardInterrupt') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('LookupError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('MemoryError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('NameError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('None') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('NotImplemented') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('NotImplementedError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('OSError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('OverflowError') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('PendingDeprecationWarning') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ReferenceError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('RuntimeError') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('RuntimeWarning') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('StandardError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('StopIteration') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('SyntaxError') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('SyntaxWarning') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('SystemError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('SystemExit') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('TabError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('True') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('TypeError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('UnboundLocalError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('UnicodeDecodeError') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('UnicodeEncodeError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('UnicodeError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('UnicodeTranslateError') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('UserWarning') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ValueError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Warning') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('WindowsError') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('ZeroDivisionError') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('_') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__debug__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__doc__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('__import__') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('__name__') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('abs') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('apply') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('basestring') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('bool') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('buffer') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('callable') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('chr') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('classmethod') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('cmp') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('coerce') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('compile') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('complex') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('copyright') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('credits') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('delattr') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('dict') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('dir') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('divmod') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('enumerate') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eval') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('execfile') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('exit') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('file') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('filter') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('float') Tj 0 0 0 rg (,) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (53) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R326': class PDFStream 
326 0 obj
% page stream
<< /Length 7953 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 512.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('frozenset') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('getattr') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('globals') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('hasattr') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('hash') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('help') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('hex') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('id') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('input') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('int') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('intern') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('isinstance') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('issubclass') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('iter') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('len') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('license') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('list') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('locals') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('long') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('map') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('max') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('min') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('object') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('oct') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('open') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ord') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('pow') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('property') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('quit') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('range') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('raw_input') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('reduce') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('reload') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('repr') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('reversed') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('round') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('set') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('setattr') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('slice') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('sorted') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('staticmethod') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('str') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('sum') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('super') Tj 0 0 0 rg (,) Tj  T* ( ) Tj .729412 .129412 .129412 rg ('tuple') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('type') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('unichr') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('unicode') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('vars') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('xrange') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('zip') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 504.1367 cm
Q
q
1 0 0 1 70.4315 504.1367 cm
Q
q
1 0 0 1 70.4315 504.1367 cm
Q
q
1 0 0 1 70.4315 471.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Paquetes) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 381.3367 cm
q
BT 1 0 0 1 0 78.256 Tm .443712 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los paquetes son una manera de estructurar los espacios de nombres de Python usando "nombres) Tj T* 0 Tw -0.033252 Tw (de m\363dulos con puntos". Por ejemplo, el nombre de m\363dulo ) Tj /F5 8 Tf (A.B) Tj /F1 8 Tf ( designa un subm\363dulo llamado ) Tj /F5 8 Tf (B) Tj /F1 8 Tf ( en) Tj T* 0 Tw -0.351767 Tw (un paquete llamado ) Tj /F5 8 Tf (A) Tj /F1 8 Tf (. Tal como el uso de m\363dulos evita que los autores de diferentes m\363dulos tengan) Tj T* 0 Tw .616283 Tw (que preocuparse de los respectivos nombres de variables globales, el uso de nombres de m\363dulos) Tj T* 0 Tw .538248 Tw (con puntos evita que los autores de paquetes de muchos m\363dulos, como NumPy o la Biblioteca de) Tj T* 0 Tw 1.209536 Tw (Im\341genes de Python \(Python Imaging Library, o PIL\), tengan que preocuparse de los respectivos) Tj T* 0 Tw (nombres de m\363dulos.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 279.3367 cm
q
BT 1 0 0 1 0 90.256 Tm .176855 Tw 12 TL /F1 8 Tf 0 0 0 rg (Suponete que quer\351s designar una colecci\363n de m\363dulos \(un "paquete"\) para el manejo uniforme de) Tj T* 0 Tw -0.429849 Tw (archivos y datos de sonidos. Hay diferentes formatos de archivos de sonido \(normalmente reconocidos) Tj T* 0 Tw 1.579248 Tw (por su extensi\363n, por ejemplo: ) Tj /F5 8 Tf (.wav) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (.aiff) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (.au) Tj /F1 8 Tf (\), por lo que ten\351s que crear y mantener una) Tj T* 0 Tw .494459 Tw (colecci\363n siempre creciente de m\363dulos para la conversi\363n entre los distintos formatos de archivos.) Tj T* 0 Tw 1.928921 Tw (Hay muchas operaciones diferentes que quiz\341s quieras ejecutar en los datos de sonido \(como) Tj T* 0 Tw .108855 Tw (mezclarlos, a\361adir eco, aplicar una funci\363n ecualizadora, crear un efecto est\351reo artificial\), por lo que) Tj T* 0 Tw -0.314402 Tw (ademas estar\341s escribiendo una lista sin fin de m\363dulos para realizar estas operaciones. Aqu\355 hay una) Tj T* 0 Tw (posible estructura para tu paquete \(expresados en t\351rminos de un sistema jer\341rquico de archivos\):) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 102.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 168 re B*
Q
q
BT 1 0 0 1 0 150.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (sound) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg (                          ) Tj (Paquete) Tj ( ) Tj (superior) Tj  T* (      ) Tj (__init__) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj (               ) Tj (Inicializa) Tj ( ) Tj (el) Tj ( ) Tj (paquete) Tj ( ) Tj (de) Tj ( ) Tj (sonido) Tj  T* (      ) Tj (formats) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg (                  ) Tj (Subpaquete) Tj ( ) Tj (para) Tj ( ) Tj (conversiones) Tj ( ) Tj (de) Tj ( ) Tj (formato) Tj  T* (              ) Tj (__init__) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (wavread) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (wavwrite) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (aiffread) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (aiffwrite) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (auread) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (auwrite) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (      ) Tj (effects) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg (                  ) Tj (Subpaquete) Tj ( ) Tj (para) Tj ( ) Tj (efectos) Tj ( ) Tj (de) Tj ( ) Tj (sonido) Tj  T* (              ) Tj (__init__) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (54) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R327': class PDFStream 
327 0 obj
% page stream
<< /Length 5683 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 476.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (              ) Tj (echo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (surround) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (reverse) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (      ) Tj (filters) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg (                  ) Tj (Subpaquete) Tj ( ) Tj (para) Tj ( ) Tj (filtros) Tj  T* (              ) Tj (__init__) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (equalizer) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (vocoder) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj (karaoke) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (py) Tj  T* (              ) Tj .188235 .188235 .188235 rg (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 444.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .593865 Tw 12 TL /F1 8 Tf 0 0 0 rg (Al importar el paquete, Python busca a trav\351s de los directorios en ) Tj /F5 8 Tf (sys.path) Tj /F1 8 Tf (, buscando el subdir\255) Tj T* 0 Tw (ectorio del paquete.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 366.1367 cm
q
BT 1 0 0 1 0 66.256 Tm 1.698151 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los archivos ) Tj /F5 8 Tf (__init__.py) Tj /F1 8 Tf ( se necesitan para hacer que Python trate los directorios como que) Tj T* 0 Tw .082569 Tw (contienen paquetes; esto se hace para prevenir directorios con un nombre com\372n, como ) Tj /F5 8 Tf (string) Tj /F1 8 Tf (, de) Tj T* 0 Tw 1.729331 Tw (esconder sin intenci\363n a m\363dulos v\341lidos que se suceden luego en el camino de b\372squeda de) Tj T* 0 Tw -0.074002 Tw (m\363dulos. En el caso m\341s simple, ) Tj /F5 8 Tf (__init__.py) Tj /F1 8 Tf ( puede ser solamente un archivo vac\355o, pero tambi\351n) Tj T* 0 Tw 1.019998 Tw (puede ejecutar c\363digo de inicializaci\363n para el paquete o configurar la variable ) Tj /F5 8 Tf (__all__) Tj /F1 8 Tf (, descrita) Tj T* 0 Tw (luego.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 348.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Los usuarios del paquete pueden importar m\363dulos individuales del mismo, por ejemplo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 315.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sound.effects.echo) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 283.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .300997 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esto carga el subm\363dulo ) Tj /F5 8 Tf (sound.effects.echo) Tj /F1 8 Tf (. Debe hacerse referencia al mismo con el nombre) Tj T* 0 Tw (completo.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 250.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (sound) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (effects) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (echo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (echofilter) Tj (\() Tj 0 .439216 .12549 rg (input) Tj 0 0 0 rg (,) Tj ( ) Tj (output) Tj (,) Tj ( ) Tj (delay) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (0.7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (atten) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 230.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Otra alternativa para importar el subm\363dulos es:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 197.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sound.effects) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (echo) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 165.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.048237 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esto tambi\351n carga el subm\363dulo ) Tj /F5 8 Tf (echo) Tj /F1 8 Tf (, lo deja disponible sin su prefijo de paquete, por lo que puede) Tj T* 0 Tw (usarse as\355:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 132.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (echo) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (echofilter) Tj (\() Tj 0 .439216 .12549 rg (input) Tj 0 0 0 rg (,) Tj ( ) Tj (output) Tj (,) Tj ( ) Tj (delay) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (0.7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (atten) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 112.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Otra variaci\363n m\341s es importar la funci\363n o variable deseadas directamente:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (55) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R328': class PDFStream 
328 0 obj
% page stream
<< /Length 6206 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sound.effects.echo) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (echofilter) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 552.1367 cm
q
BT 1 0 0 1 0 18.256 Tm 3.426767 Tw 12 TL /F1 8 Tf 0 0 0 rg (De nuevo, esto carga el subm\363dulo ) Tj /F5 8 Tf (echo) Tj /F1 8 Tf (, pero deja directamente disponible a la funci\363n) Tj T* 0 Tw /F5 8 Tf (echofilter\(\)) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 519.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (echofilter) Tj (\() Tj 0 .439216 .12549 rg (input) Tj 0 0 0 rg (,) Tj ( ) Tj (output) Tj (,) Tj ( ) Tj (delay) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (0.7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (atten) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 463.3367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.576252 Tw 12 TL /F1 8 Tf 0 0 0 rg (Not\341 que al usar ) Tj /F5 8 Tf (from package import item) Tj /F1 8 Tf ( el \355tem puede ser tanto un subm\363dulo \(o subpaquete\)) Tj T* 0 Tw 1.092248 Tw (del paquete, o alg\372n otro nombre definido en el paquete, como una funci\363n, clase, o variable. La) Tj T* 0 Tw .643998 Tw (declaraci\363n ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( primero verifica si el \355tem est\341 definido en el paquete; si no, asume que es un) Tj T* 0 Tw (m\363dulo y trata de cargarlo. Si no lo puede encontrar, se genera una excepci\363n ) Tj /F5 8 Tf (ImportError) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 421.3367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.020331 Tw 12 TL /F1 8 Tf 0 0 0 rg (Por otro lado, cuando se usa la sintaxis como ) Tj /F5 8 Tf (import item.subitem.subsubitem) Tj /F1 8 Tf (, cada \355tem) Tj T* 0 Tw .402887 Tw (excepto el \372ltimo debe ser un paquete; el mismo puede ser un m\363dulo o un paquete pero no puede) Tj T* 0 Tw (ser una clase, funci\363n o variable definida en el \355tem previo.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 421.3367 cm
Q
q
1 0 0 1 70.4315 421.3367 cm
Q
q
1 0 0 1 70.4315 421.3367 cm
Q
q
1 0 0 1 70.4315 390.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Importando * desde un paquete) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 384.9367 cm
Q
q
1 0 0 1 70.4315 270.9367 cm
q
BT 1 0 0 1 0 102.256 Tm -0.152336 Tw 12 TL /F1 8 Tf 0 0 0 rg (Ahora, \277qu\351 sucede cuando el usuario escribe ) Tj /F5 8 Tf (from sound.effects import *) Tj /F1 8 Tf (? Idealmente, uno) Tj T* 0 Tw 1.141844 Tw (esperar\355a que esto de alguna manera vaya al sistema de archivos, encuentre cuales subm\363dulos) Tj T* 0 Tw -0.021431 Tw (est\341n presentes en el paquete, y los importe a todos. Desafortunadamente, esta operaci\363n no trabaja) Tj T* 0 Tw .840283 Tw (muy bien en las plataformas Windows, donde el sistema de archivos no siempre tiene informaci\363n) Tj T* 0 Tw .800921 Tw (precisa sobre may\372sculas y min\372sculas. En estas plataformas, no hay una manera garantizada de) Tj T* 0 Tw .234931 Tw (saber si el archivo ) Tj /F4 8 Tf (ECHO.PY) Tj /F1 8 Tf ( deber\355a importarse como el m\363dulo ) Tj /F5 8 Tf (echo) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (Echo) Tj /F1 8 Tf ( o ) Tj /F5 8 Tf (ECHO) Tj /F1 8 Tf (. \(Por ejemplo,) Tj T* 0 Tw .041248 Tw (Windows 95 tiene la molesta costumbre de mostrar todos los nombres de archivos con la primer letra) Tj T* 0 Tw .970748 Tw (en may\372sculas.\) La restricci\363n de DOS de los nombres de archivos con la forma 8+3 agrega otro) Tj T* 0 Tw (problema interesante para los nombres de m\363dulos largos.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 180.9367 cm
q
BT 1 0 0 1 0 78.256 Tm .314248 Tw 12 TL /F1 8 Tf 0 0 0 rg (La \372nica soluci\363n es que el autor del paquete provea un \355ndice expl\355cito del paquete. La declaraci\363n) Tj T* 0 Tw .557598 Tw /F5 8 Tf (import) Tj /F1 8 Tf ( usa la siguiente convenci\363n: si el c\363digo del ) Tj /F5 8 Tf (__init__.py) Tj /F1 8 Tf ( de un paquete define una lista) Tj T* 0 Tw .736798 Tw (llamada ) Tj /F5 8 Tf (__all__) Tj /F1 8 Tf (, se toma como la lista de los nombres de m\363dulos que deber\355an ser importados) Tj T* 0 Tw .687141 Tw (cuando se hace ) Tj /F5 8 Tf (from package import *) Tj /F1 8 Tf (. Es tarea del autor del paquete mantener actualizada) Tj T* 0 Tw -0.213752 Tw (esta lista cuando se libera una nueva versi\363n del paquete. Los autores de paquetes podr\355an decidir no) Tj T* 0 Tw 3.954398 Tw (soportarlo, si no ven un uso para importar * en sus paquetes. Por ejemplo, el archivo) Tj T* 0 Tw /F5 8 Tf (sounds/effects/__init__.py) Tj /F1 8 Tf ( podr\355a contener el siguiente c\363digo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 148.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (__all__) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ("echo") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("surround") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("reverse") Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 116.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.558336 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esto significar\355a que ) Tj /F5 8 Tf (from sound.effects import *) Tj /F1 8 Tf ( importar\355a esos tres subm\363dulos del paquete) Tj T* 0 Tw /F5 8 Tf (sound) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (56) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R329': class PDFStream 
329 0 obj
% page stream
<< /Length 6489 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 524.9367 cm
q
BT 1 0 0 1 0 78.256 Tm .773426 Tw 12 TL /F1 8 Tf 0 0 0 rg (Si no se define ) Tj /F5 8 Tf (__all__) Tj /F1 8 Tf (, la declaraci\363n ) Tj /F5 8 Tf (from sound.effects import *) Tj /F1 8 Tf ( ) Tj /F4 8 Tf (no) Tj /F1 8 Tf ( importa todos los) Tj T* 0 Tw -0.380859 Tw (subm\363dulos del paquete ) Tj /F5 8 Tf (sound.effects) Tj /F1 8 Tf ( al espacio de nombres actual; s\363lo se asegura que se haya) Tj T* 0 Tw .445997 Tw (importado el paquete ) Tj /F5 8 Tf (sound.effects) Tj /F1 8 Tf ( \(posiblemente ejecutando alg\372n c\363digo de inicializaci\363n que) Tj T* 0 Tw .590569 Tw (haya en ) Tj /F5 8 Tf (__init__.py) Tj /F1 8 Tf (\) y luego importa aquellos nombres que est\351n definidos en el paquete. Esto) Tj T* 0 Tw .253997 Tw (incluye cualquier nombre definido \(y subm\363dulos expl\355citamente cargados\) por ) Tj /F5 8 Tf (__init__.py) Tj /F1 8 Tf (. Tam\255) Tj T* 0 Tw 1.198997 Tw (bi\351n incluye cualquier subm\363dulo del paquete que pudiera haber sido expl\355citamente cargado por) Tj T* 0 Tw (declaraciones ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( previas. Consider\341 este c\363digo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 468.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sound.effects.echo) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sound.effects.surround) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sound.effects) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 424.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .677748 Tw 12 TL /F1 8 Tf 0 0 0 rg (En este ejemplo, los m\363dulos ) Tj /F4 8 Tf (echo) Tj /F1 8 Tf ( y ) Tj /F4 8 Tf (surround) Tj /F1 8 Tf ( se importan en el espacio de nombre actual porque) Tj T* 0 Tw .430906 Tw (est\341n definidos en el paquete ) Tj /F5 8 Tf (sound.effects) Tj /F1 8 Tf ( cuando se ejecuta la declaraci\363n ) Tj /F5 8 Tf (from...import) Tj /F1 8 Tf (.) Tj T* 0 Tw (\(Esto tambi\351n funciona cuando se define ) Tj /F5 8 Tf (__all__) Tj /F1 8 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 370.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .161554 Tw 12 TL /F1 8 Tf 0 0 0 rg (Not\341 que en general la pr\341ctica de importar ) Tj /F5 8 Tf (*) Tj /F1 8 Tf ( desde un m\363dulo o paquete no se recomienda, ya que) Tj T* 0 Tw .79969 Tw (frecuentemente genera un c\363digo con mala legibilidad. Sin embargo, est\341 bien usarlo para ahorrar) Tj T* 0 Tw .252613 Tw (tecleo en sesiones interactivas, y algunos m\363dulos est\341n dise\361ados para exportar s\363lo nombres que) Tj T* 0 Tw (siguen ciertos patrones.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 328.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .784331 Tw 12 TL /F1 8 Tf 0 0 0 rg (Record\341 que no est\341 mal usar ) Tj /F5 8 Tf (from Package import specific_submodule) Tj /F1 8 Tf (! De hecho, esta) Tj T* 0 Tw -0.019717 Tw (notaci\363n se recomienda a menos que el m\363dulo que est\341s importando necesite usar subm\363dulos con) Tj T* 0 Tw (el mismo nombre desde otros paquetes.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 328.1367 cm
Q
q
1 0 0 1 70.4315 328.1367 cm
Q
q
1 0 0 1 70.4315 297.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Referencias internas en paquetes) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 207.7367 cm
q
BT 1 0 0 1 0 78.256 Tm .186997 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los subm\363dulos frecuentemente necesitan referirse unos a otros. Por ejemplo, el m\363dulo ) Tj /F5 8 Tf (surround) Tj T* 0 Tw .717598 Tw /F1 8 Tf (quiz\341s necesite usar el m\363dulo ) Tj /F5 8 Tf (echo) Tj /F1 8 Tf ( module. De hecho, tales referencias son tan comunes que la) Tj T* 0 Tw 1.382665 Tw (declaraci\363n ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( primero mira en el paquete actual antes de mirar en el camino est\341ndar de) Tj T* 0 Tw -0.023717 Tw (b\372squeda de m\363dulos. Por lo tanto, el m\363dulo ) Tj /F5 8 Tf (surround) Tj /F1 8 Tf ( puede simplemente hacer ) Tj /F5 8 Tf (import echo) Tj /F1 8 Tf ( o) Tj T* 0 Tw -0.092002 Tw /F5 8 Tf (from echo import echofilter) Tj /F1 8 Tf (. Si el m\363dulo importado no se encuentra en el paquete actual \(el) Tj T* 0 Tw -0.205252 Tw (paquete del cual el m\363dulo actual es un subm\363dulo\), la declaraci\363n ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( busca en el nivel superior) Tj T* 0 Tw (por un m\363dulo con el nombre dado.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 153.7367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.894459 Tw 12 TL /F1 8 Tf 0 0 0 rg (Cuando se estructuran los paquetes en subpaquetes \(como en el ejemplo ) Tj /F5 8 Tf (sound) Tj /F1 8 Tf (\), pod\351s usar) Tj T* 0 Tw 1.218767 Tw /F5 8 Tf (import) Tj /F1 8 Tf ( absolutos para referirte a subm\363dulos de paquetes hermanos. Por ejemplo, si el m\363dulo) Tj T* 0 Tw .850797 Tw /F5 8 Tf (sound.filters.vocoder) Tj /F1 8 Tf ( necesita usar el m\363dulo ) Tj /F5 8 Tf (echo) Tj /F1 8 Tf ( en el paquete ) Tj /F5 8 Tf (sound.effects) Tj /F1 8 Tf (, puede) Tj T* 0 Tw (hacer ) Tj /F5 8 Tf (from sound.effects import echo) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 99.73669 cm
q
BT 1 0 0 1 0 42.256 Tm 2.470997 Tw 12 TL /F1 8 Tf 0 0 0 rg (Desde Python 2.5, adem\341s de los ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( relativos impl\355citos descritos arriba, pod\351s escribir) Tj T* 0 Tw 1.312305 Tw /F5 8 Tf (import) Tj /F1 8 Tf ( relativos expl\355citos con la declaraci\363n de la forma ) Tj /F5 8 Tf (from module import name) Tj /F1 8 Tf (. Estos) Tj T* 0 Tw -0.081541 Tw /F5 8 Tf (import) Tj /F1 8 Tf ( relativos expl\355citos usan puntos adelante para indicar los paquetes actual o padres involucra\255) Tj T* 0 Tw (dos en el ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( relativo. En el ejemplo ) Tj /F5 8 Tf (surround) Tj /F1 8 Tf (, podr\355as hacer:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (57) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R330': class PDFStream 
330 0 obj
% page stream
<< /Length 5983 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (.) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (echo) Tj  T* /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (..) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (formats) Tj  T* /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (..filters) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (equalizer) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .315465 Tw 12 TL /F1 8 Tf 0 0 0 rg (Not\341 que ambos ) Tj /F5 8 Tf (import) Tj /F1 8 Tf (, relativos expl\355citos e impl\355citos, se basan en el nombre del m\363dulo actual.) Tj T* 0 Tw .205426 Tw (Ya que el nombre del m\363dulo principal es siempre ) Tj /F5 8 Tf ("__main__") Tj /F1 8 Tf (, los m\363dulos pensados para usarse) Tj T* 0 Tw (como m\363dulo principal de una aplicaci\363n Python siempre deber\355an usar ) Tj /F5 8 Tf (import) Tj /F1 8 Tf ( absolutos.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
Q
q
1 0 0 1 70.4315 516.1367 cm
Q
q
1 0 0 1 70.4315 485.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Paquetes en m\372ltiple directorios) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 431.7367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.148535 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los paquetes soportan un atributo especial m\341s, ) Tj /F5 8 Tf (__path__) Tj /F1 8 Tf (. Este se inicializa, antes de que el c\363digo) Tj T* 0 Tw .610116 Tw (en ese archivo se ejecute, a una lista que contiene el nombre del directorio donde est\341 el paquete.) Tj T* 0 Tw -0.067276 Tw (Esta variable puede modificarse, afectando b\372squedas futuras de m\363dulos y subpaquetes contenidos) Tj T* 0 Tw (en el paquete.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 401.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.262464 Tw 12 TL /F1 8 Tf 0 0 0 rg (Aunque esta caracter\355stica no se necesita frecuentemente, puede usarse para extender el conjunto de) Tj T* 0 Tw (m\363dulos que se encuentran en el paquete.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 383.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 161.938 0 Td 12 TL /F1 8 Tf .545098 0 0 rg (Footnotes) Tj T* -161.938 0 Td ET
Q
Q
q
1 0 0 1 70.4315 383.7367 cm
Q
q
1 0 0 1 70.4315 341.7367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 27 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 .501961 rg (1) Tj T* ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 30.256 Tm .54526 Tw 12 TL /F1 8 Tf 0 0 0 rg (De hecho las definiciones de funci\363n son tambi\351n 'declaraciones' que se) Tj T* 0 Tw 1.380383 Tw ('ejecutan'; la ejecuci\363n mete el nombre de la funci\363n en el espacio de) Tj T* 0 Tw (nombres global.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 341.7367 cm
Q
q
1 0 0 1 70.4315 341.7367 cm
Q
q
1 0 0 1 70.4315 341.7367 cm
Q
q
1 0 0 1 70.4315 306.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Entrada y salida) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 264.5367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.156252 Tw 12 TL /F1 8 Tf 0 0 0 rg (Hay diferentes m\351todos de presentar la salida de un programa; los datos pueden ser impresos de una) Tj T* 0 Tw .010748 Tw (forma legible por humanos, o escritos a un archivo para uso futuro. Este cap\355tulo discutir\341 algunas de) Tj T* 0 Tw (las posibilidades.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 264.5367 cm
Q
q
1 0 0 1 70.4315 264.5367 cm
Q
q
1 0 0 1 70.4315 264.5367 cm
Q
q
1 0 0 1 70.4315 231.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Formateo elegante de la salida) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 177.7367 cm
q
BT 1 0 0 1 0 42.256 Tm .323382 Tw 12 TL /F1 8 Tf 0 0 0 rg (Hasta ahora encontramos dos maneras de escribir valores: ) Tj /F4 8 Tf (declaraciones de expresi\363n) Tj /F1 8 Tf ( y la declara\255) Tj T* 0 Tw -0.059252 Tw (ci\363n ) Tj /F5 8 Tf (print) Tj /F1 8 Tf (. \(Una tercer manera es usando el m\351todo ) Tj /F5 8 Tf (write\(\)) Tj /F1 8 Tf ( de los objetos tipo archivo; el archivo) Tj T* 0 Tw .357844 Tw (de salida est\341ndar puede referenciarse como ) Tj /F5 8 Tf (sys.stdout) Tj /F1 8 Tf (. Mir\341 la Referencia de la Biblioteca para) Tj T* 0 Tw (m\341s informaci\363n sobre esto.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 177.7367 cm
Q
q
1 0 0 1 70.4315 99.73669 cm
q
BT 1 0 0 1 0 66.256 Tm -0.085849 Tw 12 TL /F1 8 Tf 0 0 0 rg (Frecuentemente querr\341s m\341s control sobre el formateo de tu salida que simplemente imprimir valores) Tj T* 0 Tw .011748 Tw (separados por espacios. Hay dos maneras de formatear tu salida; la primera es hacer todo el manejo) Tj T* 0 Tw -0.052859 Tw (de las cadenas vos mismo, usando rebanado de cadenas y operaciones de concatenado pod\351s crear) Tj T* 0 Tw .726997 Tw (cualquier forma que puedas imaginar. El m\363dulo ) Tj /F5 8 Tf (string) Tj /F1 8 Tf ( contiene algunas operaciones \372tiles para) Tj T* 0 Tw -0.183252 Tw (emparejar cadenas a un determinado ancho; estas las discutiremos en breve. La otra forma es usar el) Tj T* 0 Tw (m\351todo ) Tj /F5 8 Tf (str.format\(\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (58) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R331': class PDFStream 
331 0 obj
% page stream
<< /Length 7837 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.9367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.792361 Tw 12 TL /F1 8 Tf 0 0 0 rg (Nos queda una pregunta, por supuesto: \277c\363mo convert\355s valores a cadenas? Afortunadamente,) Tj T* 0 Tw .491998 Tw (Python tiene maneras de convertir cualquier valor a una cadena: pasalos a las funciones ) Tj /F5 8 Tf (repr\(\)) Tj /F1 8 Tf ( o) Tj T* 0 Tw -0.081252 Tw /F5 8 Tf (str\(\)) Tj /F1 8 Tf (. Comillas invertidas \() Tj /F5 8 Tf (``) Tj /F1 8 Tf (\) son equivalentes a la ) Tj /F5 8 Tf (repr\(\)) Tj /F1 8 Tf (, pero no se usan m\341s en c\363digo actual) Tj T* 0 Tw (de Python y se eliminaron de versiones futuras del lenguaje.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 470.9367 cm
q
BT 1 0 0 1 0 78.256 Tm .218151 Tw 12 TL /F1 8 Tf 0 0 0 rg (La funci\363n ) Tj /F5 8 Tf (str\(\)) Tj /F1 8 Tf ( devuelve representaciones de los valores que son bastante legibles por humanos,) Tj T* 0 Tw .019141 Tw (mientras que ) Tj /F5 8 Tf (repr\(\)) Tj /F1 8 Tf ( genera representaciones que pueden ser le\355das por el el int\351rprete \(o forzar\355an) Tj T* 0 Tw .336283 Tw (un ) Tj /F5 8 Tf (SyntaxError) Tj /F1 8 Tf ( si no hay sint\341xis equivalente\). Para objetos que no tienen una representaci\363n en) Tj T* 0 Tw 1.174997 Tw (particular para consumo humano, ) Tj /F5 8 Tf (str\(\)) Tj /F1 8 Tf ( devolver\341 el mismo valor que ) Tj /F5 8 Tf (repr\(\)) Tj /F1 8 Tf (. Muchos valores,) Tj T* 0 Tw 1.758997 Tw (como n\372meros o estructuras como listas y diccionarios, tienen la misma representaci\363n usando) Tj T* 0 Tw .602931 Tw (cualquiera de las dos funciones. Las cadenas y los n\372meros de punto flotante, en particular, tienen) Tj T* 0 Tw (dos representaciones distintas.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 452.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Algunos ejemplos:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 168.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 276 re B*
Q
q
BT 1 0 0 1 0 258.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (s) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Hola mundo.') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj (s) Tj (\)) Tj  T* .729412 .129412 .129412 rg ('Hola mundo.') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj (s) Tj (\)) Tj  T* .729412 .129412 .129412 rg ("'Hola mundo.'") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('0.1') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('0.10000000000000001') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3.25) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (y) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (200) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (200) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (s) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('El valor de x es ') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj (x) Tj (\)) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg (', y es ') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj (y) Tj (\)) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('...') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (s) Tj  T* (El) Tj ( ) Tj (valor) Tj ( ) Tj (de) Tj ( ) Tj (x) Tj ( ) Tj (es) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (32.5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (y) Tj ( ) Tj (es) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (40000.) Tj /F5 8 Tf .188235 .188235 .188235 rg (..) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# El repr\(\) de una cadena agrega ap\363strofos y barras invertidas) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj (hola) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('hola mundo) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (holas) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj (hola) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (holas) Tj  T* .729412 .129412 .129412 rg ('hello, world) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# El argumento de repr\(\) puede ser cualquier objeto Python:) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\(\() Tj (x) Tj (,) Tj ( ) Tj (y) Tj (,) Tj ( ) Tj (\() Tj .729412 .129412 .129412 rg ('carne') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('huevos') Tj 0 0 0 rg (\)\)\)) Tj  T* .729412 .129412 .129412 rg ("\(32.5, 40000, \('carne', 'huevos'\)\)") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 148.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Ac\341 hay dos maneras de escribir una tabla de cuadrados y cubos:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 103.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (11) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj (x) Tj (\)) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (rjust) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj (\)) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (rjust) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (\),) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (59) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R332': class PDFStream 
332 0 obj
% page stream
<< /Length 7487 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 272.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 336 re B*
Q
q
BT 1 0 0 1 0 318.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# notar la coma al final de la linea anterior) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj (\)) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (rjust) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (    ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (    ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (27) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (64) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (25) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (125) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (36) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (216) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (49) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (343) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (64) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (512) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (81) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (729) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1000) Tj /F5 8 Tf 0 0 0 rg  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj /F6 8 Tf .376471 0 .878431 rg (11) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('{0:2d} {1:3d} {2:4d}') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (x) Tj (,) Tj ( ) Tj (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj (,) Tj ( ) Tj (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (x) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (    ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (    ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (27) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg (   ) Tj /F6 8 Tf .376471 0 .878431 rg (64) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (25) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (125) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (36) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (216) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (49) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (343) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (64) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (512) Tj /F5 8 Tf 0 0 0 rg  T* ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (81) Tj /F5 8 Tf 0 0 0 rg (  ) Tj /F6 8 Tf .376471 0 .878431 rg (729) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 240.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .219057 Tw 12 TL /F1 8 Tf 0 0 0 rg (\(Notar que en el primer ejemplo, un espacio entre cada columna fue agregado por la manera en que) Tj T* 0 Tw /F5 8 Tf (print) Tj /F1 8 Tf ( trabaja: siempre agrega espacios entre sus argumentos\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 150.1367 cm
q
BT 1 0 0 1 0 78.256 Tm .938748 Tw 12 TL /F1 8 Tf 0 0 0 rg (Este ejemplo muestra el m\351todo ) Tj /F5 8 Tf (rjust\(\)) Tj /F1 8 Tf ( de los objetos cadena, el cual ordena una cadena a la) Tj T* 0 Tw .159731 Tw (derecha en un campo del ancho dado llen\341ndolo con espacios a la izquierda. Hay m\351todos similares) Tj T* 0 Tw .870569 Tw /F5 8 Tf (ljust\(\)) Tj /F1 8 Tf ( y ) Tj /F5 8 Tf (center\(\)) Tj /F1 8 Tf (. Estos m\351todos no escriben nada, s\363lo devuelven una nueva cadena. Si la) Tj T* 0 Tw .565248 Tw (cadena de entrada es demasiado larga, no la truncan, sino la devuelven intacta; esto te romper\341 la) Tj T* 0 Tw .679712 Tw (alineaci\363n de tus columnas pero es normalmente mejor que la alternativa, que te estar\355a mintiendo) Tj T* 0 Tw 1.600855 Tw (sobre el valor. \(Si realmente quer\351s que se recorte, siempre pod\351s agregarle una operaci\363n de) Tj T* 0 Tw (rebanado, como en ) Tj /F5 8 Tf (x.ljust\(n\)[:n]) Tj /F1 8 Tf (.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 120.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .439198 Tw 12 TL /F1 8 Tf 0 0 0 rg (Hay otro m\351todo, ) Tj /F5 8 Tf (zfill\(\)) Tj /F1 8 Tf (, el cual rellena una cadena num\351rica a la izquierda con ceros. Entiendo) Tj T* 0 Tw (acerca de signos positivos y negativos:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (60) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R333': class PDFStream 
333 0 obj
% page stream
<< /Length 7209 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 524.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('12') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (zfill) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('00012') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('-3.14') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (zfill) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('-003.14') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('3.14159265359') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (zfill) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('3.14159265359') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 504.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (El uso b\341sico del m\351todo ) Tj /F5 8 Tf (str.format\(\)) Tj /F1 8 Tf ( es como esto:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 461.1054 cm
q
q
.951938 0 0 .951938 0 0 cm
q
1 0 0 1 6.4 6.723124 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 376.8 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Somos los {0} quienes decimos "{1}!"') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj .729412 .129412 .129412 rg ('caballeros') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Nop') Tj 0 0 0 rg (\)) Tj  T* (Somos) Tj ( ) Tj (los) Tj ( ) Tj (caballeros) Tj ( ) Tj (quienes) Tj ( ) Tj (decimos) Tj ( ) Tj .729412 .129412 .129412 rg ("Nop!") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 417.1054 cm
q
BT 1 0 0 1 0 30.256 Tm .491712 Tw 12 TL /F1 8 Tf 0 0 0 rg (Las llaves y caracteres dentro de las mismas \(llamados campos de formato\) son reemplazadas con) Tj T* 0 Tw -0.370002 Tw (los objetos pasados en el m\351todo ) Tj /F5 8 Tf (format\(\)) Tj /F1 8 Tf (. El n\372mero en las llaves se refiere a la posici\363n del objeto) Tj T* 0 Tw (pasado en el m\351todo.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 348.3054 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('{0} y {1}') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj .729412 .129412 .129412 rg ('carne') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('huevos') Tj 0 0 0 rg (\)) Tj  T* (carne) Tj ( ) Tj (y) Tj ( ) Tj (huevos) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('{1} y {0}') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj .729412 .129412 .129412 rg ('carne') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('huevos') Tj 0 0 0 rg (\)) Tj  T* (huevos) Tj ( ) Tj (y) Tj ( ) Tj (carne) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 316.3054 cm
q
BT 1 0 0 1 0 18.256 Tm .636283 Tw 12 TL /F1 8 Tf 0 0 0 rg (Si se usan argumentos nombrados en el m\351todo ) Tj /F5 8 Tf (format\(\)) Tj /F1 8 Tf (, sus valores ser\341n referidos usando el) Tj T* 0 Tw (nombre del argumento.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 276.8704 cm
q
q
.854211 0 0 .854211 0 0 cm
q
1 0 0 1 6.4 7.492294 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 420 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Esta {comida} es {adjetivo}.') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (comida) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('carne') Tj 0 0 0 rg (,) Tj ( ) Tj (adjetivo) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('espantosa') Tj 0 0 0 rg (\)) Tj  T* (Esta) Tj ( ) Tj (carne) Tj ( ) Tj (es) Tj ( ) Tj (espantosa) Tj .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 256.8704 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Se pueden combinar arbitrariamente argumentos posicionales y nombrados:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 217.79 cm
q
q
.844577 0 0 .844577 0 0 cm
q
1 0 0 1 6.4 7.577758 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 424.8 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('La historia de {0}, {1}, y {otro}.') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj .729412 .129412 .129412 rg ('Bill') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Manfred') Tj 0 0 0 rg (,) Tj ( ) Tj (otro) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('Georg') Tj 0 0 0 rg (\)) Tj  T* (La) Tj ( ) Tj (hostoria) Tj ( ) Tj (de) Tj ( ) Tj (Bill) Tj (,) Tj ( ) Tj (Manfred) Tj (,) Tj ( ) Tj (y) Tj ( ) Tj (Georg) Tj .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 173.79 cm
q
BT 1 0 0 1 0 30.256 Tm .237065 Tw 12 TL /F1 8 Tf 0 0 0 rg (Un ) Tj /F5 8 Tf (':`) Tj /F1 8 Tf ( y especificador de formato opcionales pueden ir luego del nombre del campo. Esto aumenta) Tj T* 0 Tw .377175 Tw (el control sobre c\363mo el valor es formateado. El siguiente ejemplo trunca Pi a tres lugares luego del) Tj T* 0 Tw (punto decimal.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 116.99 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (math) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('El valor de PI es aproximadamente {0:.3f}.') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (math) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pi) Tj (\)) Tj  T* (El) Tj ( ) Tj (valor) Tj ( ) Tj (de) Tj ( ) Tj (PI) Tj ( ) Tj (es) Tj ( ) Tj (aproximadamente) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3.142) Tj /F5 8 Tf .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (61) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R334': class PDFStream 
334 0 obj
% page stream
<< /Length 8487 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.105649 Tw 12 TL /F1 8 Tf 0 0 0 rg (Pasando un entero luego del ) Tj /F5 8 Tf (':') Tj /F1 8 Tf ( causar\341 que que el campo sea de un m\355nimo n\372mero de caracteres) Tj T* 0 Tw (de ancho. Esto es \372til para hacer tablas lindas.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tabla) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj .729412 .129412 .129412 rg ('Sjoerd') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Jack') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Dcab') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7678) Tj /F5 8 Tf 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (nombre) Tj (,) Tj ( ) Tj (telefono) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (tabla) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (items) Tj (\(\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('{0:10} ==) Tj (>) Tj ( {1:10d}') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (nombre) Tj (,) Tj ( ) Tj (telefono) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (Jack) Tj (       ) Tj .188235 .188235 .188235 rg (==) Tj (>) Tj 0 0 0 rg (       ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg  T* (Dcab) Tj (       ) Tj .188235 .188235 .188235 rg (==) Tj (>) Tj 0 0 0 rg (       ) Tj /F6 8 Tf .376471 0 .878431 rg (7678) Tj /F5 8 Tf 0 0 0 rg  T* (Sjoerd) Tj (     ) Tj .188235 .188235 .188235 rg (==) Tj (>) Tj 0 0 0 rg (       ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 424.1367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.373065 Tw 12 TL /F1 8 Tf 0 0 0 rg (Si ten\351s una cadena de formateo realmente larga que no quer\351s separar, podr\355a ser bueno que) Tj T* 0 Tw .245881 Tw (puedas hacer referencia a las variables a ser formateadas por el nombre en vez de la posici\363n. Esto) Tj T* 0 Tw 1.238459 Tw (puede hacerse simplemente pasando el diccionario y usando corchetes ) Tj /F5 8 Tf ('[]') Tj /F1 8 Tf ( para acceder a las) Tj T* 0 Tw (claves) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 374.4512 cm
q
q
.854211 0 0 .854211 0 0 cm
q
1 0 0 1 6.4 7.492294 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 420 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tabla) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj .729412 .129412 .129412 rg ('Sjoerd') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Jack') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Dcab') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8637678) Tj /F5 8 Tf 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Jack: {0[Jack]:d}; Sjoerd: {0[Sjoerd]:d}; Dcab: {0[Dcab]:d}') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (tabla) Tj (\)) Tj  T* (Jack) Tj (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (;) Tj ( ) Tj (Sjoerd) Tj (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (;) Tj ( ) Tj (Dcab) Tj (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8637678) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 354.4512 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Esto se podr\355a tambi\351n hacer pasando la tabla como argumentos nombrados con la notaci\363n '**'.:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 301.1484 cm
q
q
.928337 0 0 .928337 0 0 cm
q
1 0 0 1 6.4 6.89405 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 386.4 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (tabla) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj .729412 .129412 .129412 rg ('Sjoerd') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Jack') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Dcab') Tj 0 0 0 rg (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8637678) Tj /F5 8 Tf 0 0 0 rg (}) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Jack: {Jack:d}; Sjoerd: {Sjoerd:d}; Dcab: {Dcab:d}') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj .188235 .188235 .188235 rg (**) Tj 0 0 0 rg (tabla) Tj (\)) Tj  T* (Jack) Tj (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4098) Tj /F5 8 Tf 0 0 0 rg (;) Tj ( ) Tj (Sjoerd) Tj (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4127) Tj /F5 8 Tf 0 0 0 rg (;) Tj ( ) Tj (Dcab) Tj (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8637678) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 269.1484 cm
q
BT 1 0 0 1 0 18.256 Tm -0.044859 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esto es particularmente \372til en combinaci\363n con la nueva funci\363n integrada ) Tj /F5 8 Tf (vars\(\)) Tj /F1 8 Tf (, que devuelve un) Tj T* 0 Tw (diccionario conteniendo todas las variables locales.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 251.1484 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Para una completa descripci\363n del formateo de cadenas con ) Tj /F5 8 Tf (str.format\(\)) Tj /F1 8 Tf (, mir\341 en ) Tj /F4 8 Tf (formatstrings) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 251.1484 cm
Q
q
1 0 0 1 70.4315 251.1484 cm
Q
q
1 0 0 1 70.4315 220.7484 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Viejo formateo de cadenas) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 178.7484 cm
q
BT 1 0 0 1 0 30.256 Tm -0.517069 Tw 12 TL /F1 8 Tf 0 0 0 rg (El operador ) Tj /F5 8 Tf (%) Tj /F1 8 Tf ( tambi\351n puede usarse para formateo de cadenas. Interpreta el argumento de la izquierda) Tj T* 0 Tw .648704 Tw (con el estilo de formateo de ) Tj /F5 8 Tf (sprintf) Tj /F1 8 Tf ( para ser aplicado al argumento de la derecha, y devuelve la) Tj T* 0 Tw (cadena resultante de esta operaci\363n de formateo. Por ejemplo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 121.9484 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (math) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('El valor de PI es aproximadamente ) Tj /F6 8 Tf .733333 .4 .533333 rg (%5.3f) Tj /F5 8 Tf .729412 .129412 .129412 rg (.') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg ( ) Tj (math) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pi) Tj  T* (El) Tj ( ) Tj (valor) Tj ( ) Tj (de) Tj ( ) Tj (PI) Tj ( ) Tj (es) Tj ( ) Tj (aproximadamente) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3.142) Tj /F5 8 Tf .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 101.9484 cm
q
BT 1 0 0 1 0 6.256 Tm .324531 Tw 12 TL /F1 8 Tf 0 0 0 rg (Ya que ) Tj /F5 8 Tf (str.format\(\)) Tj /F1 8 Tf ( es bastante nuevo, un mont\363n de c\363digo Python todav\355a usa el operador ) Tj /F5 8 Tf (%) Tj /F1 8 Tf (.) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (62) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R335': class PDFStream 
335 0 obj
% page stream
<< /Length 6267 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.9367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.155141 Tw 12 TL /F1 8 Tf 0 0 0 rg (Sin embargo, ya que este viejo estilo de formateo ser\341 eventualmente eliminado del lenguaje, en) Tj T* 0 Tw (general deber\355a usarse ) Tj /F5 8 Tf (str.format\(\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Pod\351s encontrar m\341s informaci\363n en la secci\363n ) Tj /F4 8 Tf (string-formatting) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
Q
q
1 0 0 1 70.4315 566.9367 cm
Q
q
1 0 0 1 70.4315 566.9367 cm
Q
q
1 0 0 1 70.4315 534.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Leyendo y escribiendo archivos) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 528.1367 cm
Q
q
1 0 0 1 70.4315 498.1367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.93569 Tw 12 TL /F1 8 Tf 0 0 0 rg (La funci\363n ) Tj /F5 8 Tf (open\(\)) Tj /F1 8 Tf ( devuelve un objeto archivo, y es normalmente usado con dos argumentos:) Tj T* 0 Tw /F5 8 Tf (open\(nombre_de_archivo, modo\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 441.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ('/tmp/workfile') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('w') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (f) Tj  T* .188235 .188235 .188235 rg (<) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (file) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('/tmp/workfile') Tj 0 0 0 rg (,) Tj ( ) Tj (mode) Tj ( ) Tj .729412 .129412 .129412 rg ('w') Tj 0 0 0 rg ( ) Tj (at) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (80) Tj /F5 8 Tf 0 0 0 rg (a0960) Tj .188235 .188235 .188235 rg (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 361.3367 cm
q
BT 1 0 0 1 0 66.256 Tm -0.137335 Tw 12 TL /F1 8 Tf 0 0 0 rg (El primer argumento es una cadena conteniendo el nombre de archivo. El segundo argumento es otra) Tj T* 0 Tw .306931 Tw (cadena conteniendo unos pocos caracteres que describen la forma en que el archivo ser\341 usado. El) Tj T* 0 Tw .908531 Tw /F4 8 Tf (modo) Tj /F1 8 Tf ( puede ser ) Tj /F5 8 Tf ('r') Tj /F1 8 Tf ( cuando el archivo ser\341 solamente le\355do, ) Tj /F5 8 Tf ('w') Tj /F1 8 Tf ( para s\363lo escribirlo \(un archivo) Tj T* 0 Tw 1.336283 Tw (existente con el mismo nombre ser\341 borrado\), y ) Tj /F5 8 Tf ('a') Tj /F1 8 Tf ( abre el archivo para agregarle informaci\363n;) Tj T* 0 Tw .419712 Tw (cualquier dato escrito al archivo ser\341 autom\341ticamente agregado al final. ) Tj /F5 8 Tf ('r+') Tj /F1 8 Tf ( abre el archivo tanto) Tj T* 0 Tw (para leerlo como para escribirlo. El argumento ) Tj /F4 8 Tf (modo) Tj /F1 8 Tf ( es opcional; si se omite se asume ) Tj /F5 8 Tf ('r') Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 259.3367 cm
q
BT 1 0 0 1 0 90.256 Tm 1.020469 Tw 12 TL /F1 8 Tf 0 0 0 rg (En Windows y la Macintosh, agregando ) Tj /F5 8 Tf ('b') Tj /F1 8 Tf ( al modo abre al archivo en modo binario, por lo que) Tj T* 0 Tw -0.155717 Tw (tambi\351n hay modos como ) Tj /F5 8 Tf ('rb') Tj /F1 8 Tf (, ) Tj /F5 8 Tf ('wb') Tj /F1 8 Tf (, y ) Tj /F5 8 Tf ('r+b') Tj /F1 8 Tf (. Windows hace una distinci\363n entre archivos binarios) Tj T* 0 Tw 1.566248 Tw (y de texto; los caracteres de fin de linea en los archivos de texto son autom\341ticamente apenas) Tj T* 0 Tw -0.178574 Tw (alterados cuando los datos son le\355dos o escritos. Esta modificaci\363n en bambalinas para guardar datos) Tj T* 0 Tw 1.162931 Tw (est\341 bien con archivos de texto ASCII, pero corromper\341 datos binarios como en archivos ) Tj /F5 8 Tf (JPEG) Tj /F1 8 Tf ( o) Tj T* 0 Tw 1.038887 Tw /F5 8 Tf (EXE) Tj /F1 8 Tf (. Se muy cuidadoso en usar el modo binario al leer y escribir tales archivos. En Unix, no hay) Tj T* 0 Tw -0.416269 Tw (problema en agregarle una ) Tj /F5 8 Tf ('b') Tj /F1 8 Tf ( al modo, por lo que pod\351s usarlo independientemente de la plataforma) Tj T* 0 Tw (para todos los archivos binarios.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 259.3367 cm
Q
q
1 0 0 1 70.4315 259.3367 cm
Q
q
1 0 0 1 70.4315 259.3367 cm
Q
q
1 0 0 1 70.4315 228.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (M\351todos de los objetos Archivo) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 210.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (El resto de los ejemplos en esta secci\363n asumir\341n que ya se cre\363 un objeto archivo llamado ) Tj /F5 8 Tf (f) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 132.9367 cm
q
BT 1 0 0 1 0 66.256 Tm .641331 Tw 12 TL /F1 8 Tf 0 0 0 rg (Para leer el contenido de una archivo llam\341 a ) Tj /F5 8 Tf (f.read\(cantidad\)) Tj /F1 8 Tf (, el cual lee alguna cantidad de) Tj T* 0 Tw .995712 Tw (datos y los devuelve como una cadena. ) Tj /F4 8 Tf (cantidad) Tj /F1 8 Tf ( es un argumento num\351rico opcional. Cuando se) Tj T* 0 Tw .192704 Tw (omite ) Tj /F4 8 Tf (cantidad) Tj /F1 8 Tf ( o es negativo, el contenido entero del archivo ser\341 leido y devuelto; es tu problema si) Tj T* 0 Tw 1.10884 Tw (el archivo es el doble de grande que la memoria de tu m\341quina. De otra manera, a lo sumo una) Tj T* 0 Tw .500248 Tw /F4 8 Tf (cantidad) Tj /F1 8 Tf ( de bytes son le\355dos y devueltos. Si se alcanz\363 el fin del archivo, ) Tj /F5 8 Tf (f.read\(\)) Tj /F1 8 Tf ( devolver\341 una) Tj T* 0 Tw (cadena vac\355a \() Tj /F5 8 Tf ("") Tj /F1 8 Tf (\).) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (63) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R336': class PDFStream 
336 0 obj
% page stream
<< /Length 5810 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read) Tj (\(\)) Tj  T* .729412 .129412 .129412 rg ('Este es el archivo entero.) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read) Tj (\(\)) Tj  T* .729412 .129412 .129412 rg ('') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
BT 1 0 0 1 0 54.256 Tm .661262 Tw 12 TL /F5 8 Tf 0 0 0 rg (f.readline\(\)) Tj /F1 8 Tf ( lee una sola linea del archivo; el caracter de fin de linea \() Tj /F5 8 Tf (\\n) Tj /F1 8 Tf (\) se deja al final de la) Tj T* 0 Tw .305332 Tw (cadena, y s\363lo se omite en la \372ltima linea del archivo si el mismo no termina en un fin de linea. Esto) Tj T* 0 Tw -0.214825 Tw (hace que el valor de retorno no se ambiguo; si ) Tj /F5 8 Tf (f.readline\(\)) Tj /F1 8 Tf ( devuelve una cadena vac\355a, es que se) Tj T* 0 Tw .504748 Tw (alcanz\363 el fin del archivo, mientras que una linea en blanco es representada por ) Tj /F5 8 Tf ('\\n') Tj /F1 8 Tf (, una cadena) Tj T* 0 Tw (conteniendo s\363lo un \372nico fin de linea.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 387.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (readline) Tj (\(\)) Tj  T* .729412 .129412 .129412 rg ('Esta es la primer linea del archivo.) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (readline) Tj (\(\)) Tj  T* .729412 .129412 .129412 rg ('Segunda linea del archivo) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (readline) Tj (\(\)) Tj  T* .729412 .129412 .129412 rg ('') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 319.3367 cm
q
BT 1 0 0 1 0 54.256 Tm .166748 Tw 12 TL /F5 8 Tf 0 0 0 rg (f.readlines\(\)) Tj /F1 8 Tf ( devuelve una lista conteniendo todos las lineas de datos en el archivo. Si se da un) Tj T* 0 Tw 1.107998 Tw (par\341metro opcional ) Tj /F4 8 Tf (pista_tama\361o) Tj /F1 8 Tf (, lee esa cantidad de bytes del archivo y lo suficientemente m\341s) Tj T* 0 Tw -0.377752 Tw (como para completar una linea, y devuelve las lineas de eso. Esto se usa frecuentemente para permitir) Tj T* 0 Tw .372248 Tw (una lectura por lineas de forma eficiente en archivos grandes, sin tener que cargar el archivo entero) Tj T* 0 Tw (en memoria. S\363lo lineas completas ser\341n devueltas.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 274.9164 cm
q
q
.989681 0 0 .989681 0 0 cm
q
1 0 0 1 6.4 6.466733 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 362.4 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (readlines) Tj (\(\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('Esta es la primer linea del archivo.) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('Segunda linea del archivo) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 242.9164 cm
q
BT 1 0 0 1 0 18.256 Tm .846248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Una forma alternativa a leer lineas es ciclar sobre el objeto archivo. Esto es eficiente en memoria,) Tj T* 0 Tw (r\341pido, y conduce a un c\363digo m\341s simple:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 162.1164 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (linea) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (f) Tj (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (linea) Tj (,) Tj  T*  T* (Esta) Tj ( ) Tj (es) Tj ( ) Tj (la) Tj ( ) Tj (primer) Tj ( ) Tj (linea) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (archivo) Tj  T* (Segunda) Tj ( ) Tj (linea) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (archivo) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 130.1164 cm
q
BT 1 0 0 1 0 18.256 Tm -0.04259 Tw 12 TL /F1 8 Tf 0 0 0 rg (El enfoque alternativo es mucho m\341s simple peor no permite un control fino. Ya que los dos enfoques) Tj T* 0 Tw (manejan diferente el buffer de lineas, no deber\355an mezclarse.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 112.1164 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F5 8 Tf 0 0 0 rg (f.write\(cadena\)) Tj /F1 8 Tf ( escribe el contenido de la ) Tj /F4 8 Tf (cadena) Tj /F1 8 Tf ( al archivo, devolviendo ) Tj /F5 8 Tf (None) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (64) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R337': class PDFStream 
337 0 obj
% page stream
<< /Length 6853 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write) Tj (\() Tj .729412 .129412 .129412 rg ('Esto es una prueba) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 564.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Para escribir algo m\341s que una cadena, necesita convertirse primero a una cadena:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 507.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (valor) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (\() Tj .729412 .129412 .129412 rg ('la respuesta') Tj 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (42) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (s) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj (valor) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write) Tj (\() Tj (s) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 415.3367 cm
q
BT 1 0 0 1 0 78.256 Tm .333248 Tw 12 TL /F5 8 Tf 0 0 0 rg (f.tell\(\)) Tj /F1 8 Tf ( devuelve un entero que indica la posici\363n actual en el archivo, medida en bytes desde el) Tj T* 0 Tw .523997 Tw (comienzo del archivo. Para cambiar la posici\363n use ) Tj /F5 8 Tf (f.seek\(desplazamiento, desde_donde\)) Tj /F1 8 Tf (.) Tj T* 0 Tw -0.375735 Tw (La posici\363n es calculada agregando el ) Tj /F4 8 Tf (desplazamiento) Tj /F1 8 Tf ( a un punto de referencia; el punto de referencia) Tj T* 0 Tw .201426 Tw (se selecciona del argumento ) Tj /F4 8 Tf (desde_donde) Tj /F1 8 Tf (. Un valor ) Tj /F4 8 Tf (desde_donde) Tj /F1 8 Tf ( de 0 mide desde el comienzo del) Tj T* 0 Tw 1.096665 Tw (archivo, 1 usa la posici\363n actual del archivo, y 2 usa el fin del archivo como punto de referencia.) Tj T* 0 Tw .010398 Tw /F4 8 Tf (desde_donde) Tj /F1 8 Tf ( puede omitirse, el default es 0, usando el comienzo del archivo como punto de referen\255) Tj T* 0 Tw (cia.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 298.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ('/tmp/archivodetrabajo') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('r+') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write) Tj (\() Tj .729412 .129412 .129412 rg ('0123456789abcdef') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (seek) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Va al sexto byte en el archivo) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('5') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (seek) Tj (\() Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Va al tercer byte antes del final) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('d') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 254.5367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.117431 Tw 12 TL /F1 8 Tf 0 0 0 rg (Cuando hayas terminado con un archivo, llam\341 a ) Tj /F5 8 Tf (f.close\(\)) Tj /F1 8 Tf ( para cerrarlo y liberar cualquier recurso) Tj T* 0 Tw -0.021252 Tw (del sistema tomado por el archivo abierto. Luego de llamar ) Tj /F5 8 Tf (f.close\(\)) Tj /F1 8 Tf (, los intentos de usar el objeto) Tj T* 0 Tw (archivo fallar\341n autom\341ticamente.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 173.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (close) Tj (\(\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read) Tj (\(\)) Tj  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (ValueError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (I) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg (O) Tj ( ) Tj (operation) Tj ( ) Tj (on) Tj ( ) Tj (closed) Tj ( ) Tj 0 .439216 .12549 rg (file) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 129.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .11169 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los objetos archivo tienen algunos m\351todos m\341s, como ) Tj /F5 8 Tf (isatty\(\)) Tj /F1 8 Tf ( y ) Tj /F5 8 Tf (truncate`\(\)) Tj /F1 8 Tf ( que son usados) Tj T* 0 Tw 1.278459 Tw (menos frecuentemente; consult\341 la Referencia de la Biblioteca para una gu\355a completa sobre los) Tj T* 0 Tw (objetos archivo.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 129.7367 cm
Q
q
1 0 0 1 70.4315 129.7367 cm
Q
q
1 0 0 1 70.4315 129.7367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (65) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R338': class PDFStream 
338 0 obj
% page stream
<< /Length 5564 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 594.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (El m\363dulo The ) Tj /F5 12 Tf (pickle) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 588.5367 cm
Q
q
1 0 0 1 70.4315 522.5367 cm
q
BT 1 0 0 1 0 54.256 Tm .575198 Tw 12 TL /F1 8 Tf 0 0 0 rg (Las cadenas pueden facilmente escribirse y leerse de un archivo. Los n\372meros toman algo m\341s de) Tj T* 0 Tw 1.171998 Tw (esfuerzo, ya que el m\351todo ) Tj /F5 8 Tf (read\(\)) Tj /F1 8 Tf ( s\363lo devuelve cadenas, que tendr\341n que ser pasadas a una) Tj T* 0 Tw 1.227998 Tw (funci\363n como ) Tj /F5 8 Tf (int\(\)) Tj /F1 8 Tf (, que toma una cadena como ) Tj /F5 8 Tf ('123') Tj /F1 8 Tf ( y devuelve su valor num\351rico 123. Sin) Tj T* 0 Tw .15169 Tw (embargo, cuando quer\351s grabar tipos de datos m\341s complejos como listas, diccionarios, o instancias) Tj T* 0 Tw (de clases, las cosas se ponen m\341s complicadas.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 432.5367 cm
q
BT 1 0 0 1 0 78.256 Tm -0.116288 Tw 12 TL /F1 8 Tf 0 0 0 rg (En lugar de tener a los usuarios constantemente escribiendo y debugueando c\363digo para grabar tipos) Tj T* 0 Tw .602151 Tw (de datos complicados, Python provee un m\363dulo est\341ndar llamado ) Tj /F5 8 Tf (pickle) Tj /F1 8 Tf (. Este es un asombroso) Tj T* 0 Tw .107712 Tw (m\363dulo que puede tomar casi cualquier objeto Python \(\241incluso algunas formas de c\363digo Python!\), y) Tj T* 0 Tw .595998 Tw (convertirlo a una representaci\363n de cadena; este proceso se llama ) Tj /F4 8 Tf (picklear) Tj /F1 8 Tf (. Reconstruir los objetos) Tj T* 0 Tw .841865 Tw (desde la representaci\363n en cadena se llama ) Tj /F4 8 Tf (despicklear) Tj /F1 8 Tf (. Entre que se picklea y se despicklear, la) Tj T* 0 Tw -0.316535 Tw (cadena que representa al objeto puede almacenarse en un archivo, o enviarse a una m\341quina distante) Tj T* 0 Tw (por una conexi\363n de red.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 402.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .486525 Tw 12 TL /F1 8 Tf 0 0 0 rg (Si ten\351s un objeto ) Tj /F5 8 Tf (x) Tj /F1 8 Tf (, y un objeto archivo ) Tj /F5 8 Tf (f) Tj /F1 8 Tf ( que fue abierto para escritura, la manera m\341s simple de) Tj T* 0 Tw (picklear el objeto toma una sola linea de c\363digo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 369.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (pickle) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (dump) Tj (\() Tj (x) Tj (,) Tj ( ) Tj (f) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 349.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Para despicklear el objeto nuevamente, si ) Tj /F5 8 Tf (f) Tj /F1 8 Tf ( es un objeto archivo que fue abierto para lectura:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 316.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (pickle) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (load) Tj (\() Tj (f) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 272.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.155252 Tw 12 TL /F1 8 Tf 0 0 0 rg (\(Hay otras variantes de esto, usadas al picklear muchos objetos o cuando no quer\351s escribir los datos) Tj T* 0 Tw .908855 Tw (pickleados a un archivo; consult\341 la documentaci\363n completa para ) Tj /F5 8 Tf (pickle) Tj /F1 8 Tf ( en la Referencia de la) Tj T* 0 Tw (Biblioteca de Python.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 206.9367 cm
q
BT 1 0 0 1 0 54.256 Tm .136265 Tw 12 TL /F5 8 Tf 0 0 0 rg (pickle) Tj /F1 8 Tf ( es la manera est\341ndar de hacer que los objetos Python puedan almacenarse y reusarse por) Tj T* 0 Tw .873248 Tw (otros programas o por una futura invocaci\363n al mismo programa; el t\351rmino t\351cnido de esto es un) Tj T* 0 Tw .430459 Tw (objeto ) Tj /F4 8 Tf (persistente) Tj /F1 8 Tf (. Ya que ) Tj /F5 8 Tf (pickle) Tj /F1 8 Tf ( es tan ampliamente usado, muchos autores que escriben exten\255) Tj T* 0 Tw 1.285598 Tw (siones de Python toman el cuidado de asegurarse que los nuevos tipos de datos como matrices) Tj T* 0 Tw (puedan ser adecuadamente pickleados y despickleados.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 206.9367 cm
Q
q
1 0 0 1 70.4315 206.9367 cm
Q
q
1 0 0 1 70.4315 206.9367 cm
Q
q
1 0 0 1 70.4315 171.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Errors and Exceptions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 129.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .359748 Tw 12 TL /F1 8 Tf 0 0 0 rg (Until now error messages haven't been more than mentioned, but if you have tried out the examples) Tj T* 0 Tw .457865 Tw (you have probably seen some. There are \(at least\) two distinguishable kinds of errors: ) Tj /F4 8 Tf (syntax errors) Tj T* 0 Tw /F1 8 Tf (and ) Tj /F4 8 Tf (exceptions) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 129.7367 cm
Q
q
1 0 0 1 70.4315 129.7367 cm
Q
q
1 0 0 1 70.4315 129.7367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (66) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R339': class PDFStream 
339 0 obj
% page stream
<< /Length 7113 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Syntax Errors) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 562.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .095748 Tw 12 TL /F1 8 Tf 0 0 0 rg (Syntax errors, also known as parsing errors, are perhaps the most common kind of complaint you get) Tj T* 0 Tw (while you are still learning Python:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 481.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Hello world') Tj 0 0 0 rg  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Hello world') Tj 0 0 0 rg  T* (                   ) Tj .188235 .188235 .188235 rg (^) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (SyntaxError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (invalid) Tj ( ) Tj (syntax) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 413.3367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.160668 Tw 12 TL /F1 8 Tf 0 0 0 rg (The parser repeats the offending line and displays a little 'arrow' pointing at the earliest point in the line) Tj T* 0 Tw .083332 Tw (where the error was detected. The error is caused by \(or at least detected at\) the token ) Tj /F4 8 Tf (preceding) Tj /F1 8 Tf ( the) Tj T* 0 Tw .970116 Tw (arrow: in the example, the error is detected at the keyword ) Tj /F5 8 Tf (print) Tj /F1 8 Tf (, since a colon \() Tj /F5 8 Tf (':') Tj /F1 8 Tf (\) is missing) Tj T* 0 Tw .641051 Tw (before it. File name and line number are printed so you know where to look in case the input came) Tj T* 0 Tw (from a script.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 413.3367 cm
Q
q
1 0 0 1 70.4315 413.3367 cm
Q
q
1 0 0 1 70.4315 413.3367 cm
Q
q
1 0 0 1 70.4315 380.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Exceptions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 326.5367 cm
q
BT 1 0 0 1 0 42.256 Tm .691998 Tw 12 TL /F1 8 Tf 0 0 0 rg (Even if a statement or expression is syntactically correct, it may cause an error when an attempt is) Tj T* 0 Tw -0.083717 Tw (made to execute it. Errors detected during execution are called ) Tj /F4 8 Tf (exceptions) Tj /F1 8 Tf ( and are not unconditionally) Tj T* 0 Tw -0.016237 Tw (fatal: you will soon learn how to handle them in Python programs. Most exceptions are not handled by) Tj T* 0 Tw (programs, however, and result in error messages as shown here:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 161.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 156 re B*
Q
q
BT 1 0 0 1 0 138.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (/) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (ZeroDivisionError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (integer) Tj ( ) Tj (division) Tj ( ) Tj /F6 8 Tf (or) Tj /F5 8 Tf ( ) Tj (modulo) Tj ( ) Tj (by) Tj ( ) Tj (zero) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (spam) Tj .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (NameError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (name) Tj ( ) Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj /F6 8 Tf (not) Tj /F5 8 Tf ( ) Tj (defined) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('2') Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (TypeError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (cannot) Tj ( ) Tj (concatenate) Tj ( ) Tj .729412 .129412 .129412 rg ('str') Tj 0 0 0 rg ( ) Tj /F6 8 Tf (and) Tj /F5 8 Tf ( ) Tj .729412 .129412 .129412 rg ('int') Tj 0 0 0 rg ( ) Tj (objects) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 105.7367 cm
q
BT 1 0 0 1 0 42.256 Tm .366665 Tw 12 TL /F1 8 Tf 0 0 0 rg (The last line of the error message indicates what happened. Exceptions come in different types, and) Tj T* 0 Tw 1.447731 Tw (the type is printed as part of the message: the types in the example are ) Tj /F5 8 Tf (ZeroDivisionError) Tj /F1 8 Tf (,) Tj T* 0 Tw 1.275998 Tw /F5 8 Tf (NameError) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (TypeError) Tj /F1 8 Tf (. The string printed as the exception type is the name of the built-in) Tj T* 0 Tw .649748 Tw (exception that occurred. This is true for all built-in exceptions, but need not be true for user-defined) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (67) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R340': class PDFStream 
340 0 obj
% page stream
<< /Length 6573 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .458151 Tw 12 TL /F1 8 Tf 0 0 0 rg (exceptions \(although it is a useful convention\). Standard exception names are built-in identifiers \(not) Tj T* 0 Tw (reserved keywords\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The rest of the line provides detail based on the type of exception and what caused it.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 524.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.240252 Tw 12 TL /F1 8 Tf 0 0 0 rg (The preceding part of the error message shows the context where the exception happened, in the form) Tj T* 0 Tw .482116 Tw (of a stack traceback. In general it contains a stack traceback listing source lines; however, it will not) Tj T* 0 Tw (display lines read from standard input.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 506.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F4 8 Tf 0 0 0 rg (bltin-exceptions) Tj /F1 8 Tf ( lists the built-in exceptions and their meanings.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 506.9367 cm
Q
q
1 0 0 1 70.4315 506.9367 cm
Q
q
1 0 0 1 70.4315 506.9367 cm
Q
q
1 0 0 1 70.4315 474.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Handling Exceptions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 420.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .160265 Tw 12 TL /F1 8 Tf 0 0 0 rg (It is possible to write programs that handle selected exceptions. Look at the following example, which) Tj T* 0 Tw 1.243776 Tw (asks the user for input until a valid integer has been entered, but allows the user to interrupt the) Tj T* 0 Tw .453664 Tw (program \(using ) Tj /F5 8 Tf (Control-C) Tj /F1 8 Tf ( or whatever the operating system supports\); note that a user-generated) Tj T* 0 Tw (interruption is signalled by raising the ) Tj /F5 8 Tf (KeyboardInterrupt) Tj /F1 8 Tf ( exception.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 315.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (int) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (raw_input) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("Please enter a number: ") Tj 0 0 0 rg (\)\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (break) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (ValueError) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("Oops!  That was no valid number.  Try again...") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 295.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement works as follows.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 293.3367 cm
Q
q
1 0 0 1 70.4315 281.3367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 0 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (First, the ) Tj /F4 8 Tf (try clause) Tj /F1 8 Tf ( \(the statement\(s\) between the ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (except) Tj /F1 8 Tf ( keywords\) is executed.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 257.3367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm .992798 Tw 12 TL /F1 8 Tf 0 0 0 rg (If no exception occurs, the ) Tj /F4 8 Tf (except clause) Tj /F1 8 Tf ( is skipped and execution of the ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement is) Tj T* 0 Tw (finished.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 221.3367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 24 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 30.256 Tm 1.080748 Tw 12 TL /F1 8 Tf 0 0 0 rg (If an exception occurs during execution of the try clause, the rest of the clause is skipped.) Tj T* 0 Tw .211465 Tw (Then if its type matches the exception named after the ) Tj /F5 8 Tf (except) Tj /F1 8 Tf ( keyword, the except clause is) Tj T* 0 Tw (executed, and then execution continues after the ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 185.3367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 24 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 30.256 Tm .636248 Tw 12 TL /F1 8 Tf 0 0 0 rg (If an exception occurs which does not match the exception named in the except clause, it is) Tj T* 0 Tw .707248 Tw (passed on to outer ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statements; if no handler is found, it is an ) Tj /F4 8 Tf (unhandled exception) Tj /F1 8 Tf ( and) Tj T* 0 Tw (execution stops with a message as shown above.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 131.3367 cm
q
BT 1 0 0 1 0 42.256 Tm .118131 Tw 12 TL /F1 8 Tf 0 0 0 rg (A ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement may have more than one except clause, to specify handlers for different exceptions.) Tj T* 0 Tw -0.225869 Tw (At most one handler will be executed. Handlers only handle exceptions that occur in the corresponding) Tj T* 0 Tw .945248 Tw (try clause, not in other handlers of the same ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement. An except clause may name multiple) Tj T* 0 Tw (exceptions as a parenthesized tuple, for example:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (68) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R341': class PDFStream 
341 0 obj
% page stream
<< /Length 6293 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 572.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .941176 0 0 rg (RuntimeError) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .941176 0 0 rg (TypeError) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .941176 0 0 rg (NameError) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 528.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .064704 Tw 12 TL /F1 8 Tf 0 0 0 rg (The last except clause may omit the exception name\(s\), to serve as a wildcard. Use this with extreme) Tj T* 0 Tw .347999 Tw (caution, since it is easy to mask a real programming error in this way! It can also be used to print an) Tj T* 0 Tw (error message and then re-raise the exception \(allowing a caller to handle the exception as well\):) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 351.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 168 re B*
Q
q
BT 1 0 0 1 0 150.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sys) Tj /F5 8 Tf 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj (f) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ('myfile.txt') Tj 0 0 0 rg (\)) Tj  T* (    ) Tj (s) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (readline) Tj (\(\)) Tj  T* (    ) Tj (i) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (int) Tj 0 0 0 rg (\() Tj (s) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (strip) Tj (\(\)\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (IOError) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (as) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (\() Tj (errno) Tj (,) Tj ( ) Tj (strerror) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("I/O error\({0}\): {1}") Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (errno) Tj (,) Tj ( ) Tj (strerror) Tj (\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (ValueError) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("Could not convert data to an integer.") Tj 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("Unexpected error:") Tj 0 0 0 rg (,) Tj ( ) Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (exc_info) Tj (\(\)[) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 307.3367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.299252 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( ... ) Tj /F5 8 Tf (except) Tj /F1 8 Tf ( statement has an optional ) Tj /F4 8 Tf (else clause) Tj /F1 8 Tf (, which, when present, must follow all except) Tj T* 0 Tw .382946 Tw (clauses. It is useful for code that must be executed if the try clause does not raise an exception. For) Tj T* 0 Tw (example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 190.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (arg) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (argv) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (:]:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (        ) Tj (f) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg (\() Tj (arg) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('r') Tj 0 0 0 rg (\)) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (IOError) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('cannot open') Tj 0 0 0 rg (,) Tj ( ) Tj (arg) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (else) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (arg) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('has') Tj 0 0 0 rg (,) Tj ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (readlines) Tj (\(\)\),) Tj ( ) Tj .729412 .129412 .129412 rg ('lines') Tj 0 0 0 rg  T* (        ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (close) Tj (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 146.5367 cm
q
BT 1 0 0 1 0 30.256 Tm .141998 Tw 12 TL /F1 8 Tf 0 0 0 rg (The use of the ) Tj /F5 8 Tf (else) Tj /F1 8 Tf ( clause is better than adding additional code to the ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( clause because it avoids) Tj T* 0 Tw 1.556531 Tw (accidentally catching an exception that wasn't raised by the code being protected by the ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( ...) Tj T* 0 Tw /F5 8 Tf (except) Tj /F1 8 Tf ( statement.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 116.5367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.120269 Tw 12 TL /F1 8 Tf 0 0 0 rg (When an exception occurs, it may have an associated value, also known as the exception's ) Tj /F4 8 Tf (argument) Tj /F1 8 Tf (.) Tj T* 0 Tw (The presence and type of the argument depend on the exception type.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (69) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R342': class PDFStream 
342 0 obj
% page stream
<< /Length 6881 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.9367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.068002 Tw 12 TL /F1 8 Tf 0 0 0 rg (The except clause may specify a variable after the exception name \(or tuple\). The variable is bound to) Tj T* 0 Tw -0.073003 Tw (an exception instance with the arguments stored in ) Tj /F5 8 Tf (instance.args) Tj /F1 8 Tf (. For convenience, the exception) Tj T* 0 Tw 1.143664 Tw (instance defines ) Tj /F5 8 Tf (__getitem__\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (__str__\(\)) Tj /F1 8 Tf ( so the arguments can be accessed or printed) Tj T* 0 Tw (directly without having to reference ) Tj /F5 8 Tf (.args) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 506.9367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.500469 Tw 12 TL /F1 8 Tf 0 0 0 rg (But use of ) Tj /F5 8 Tf (.args) Tj /F1 8 Tf ( is discouraged. Instead, the preferred use is to pass a single argument to an) Tj T* 0 Tw .124939 Tw (exception \(which can be a tuple if multiple arguments are needed\) and have it bound to the ) Tj /F5 8 Tf (message) Tj T* 0 Tw .663292 Tw /F1 8 Tf (attribute. One may also instantiate an exception first before raising it and add any attributes to it as) Tj T* 0 Tw (desired.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 317.7067 cm
q
q
.939989 0 0 .939989 0 0 cm
q
1 0 0 1 6.4 6.808587 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 381.6 192 re B*
Q
q
BT 1 0 0 1 0 174.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (    ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (Exception) Tj /F5 8 Tf 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (Exception) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (as) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (inst) Tj (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (type) Tj 0 0 0 rg (\() Tj (inst) Tj (\)) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# the exception instance) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (inst) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (args) Tj (      ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# arguments stored in .args) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (inst) Tj (           ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# __str__ allows args to printed directly) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (    ) Tj (x) Tj (,) Tj ( ) Tj (y) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (inst) Tj (          ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# __getitem__ allows args to be unpacked directly) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('x =') Tj 0 0 0 rg (,) Tj ( ) Tj (x) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('y =') Tj 0 0 0 rg (,) Tj ( ) Tj (y) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (<) Tj 0 .439216 .12549 rg (type) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('exceptions.Exception') Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg  T* (\() Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (\)) Tj  T* (\() Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('eggs') Tj 0 0 0 rg (\)) Tj  T* (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (spam) Tj  T* (y) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (eggs) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 285.7067 cm
q
BT 1 0 0 1 0 18.256 Tm .530443 Tw 12 TL /F1 8 Tf 0 0 0 rg (If an exception has an argument, it is printed as the last part \('detail'\) of the message for unhandled) Tj T* 0 Tw (exceptions.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 255.7067 cm
q
BT 1 0 0 1 0 18.256 Tm .221248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Exception handlers don't just handle exceptions if they occur immediately in the try clause, but also if) Tj T* 0 Tw (they occur inside functions that are called \(even indirectly\) in the try clause. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 126.9067 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (this_fails) Tj /F5 8 Tf 0 0 0 rg (\(\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (/) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (this_fails) Tj (\(\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (ZeroDivisionError) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (as) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (detail) Tj (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Handling run-time error:') Tj 0 0 0 rg (,) Tj ( ) Tj (detail) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (Handling) Tj ( ) Tj (run) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (time) Tj ( ) Tj (error) Tj (:) Tj ( ) Tj (integer) Tj ( ) Tj (division) Tj ( ) Tj /F6 8 Tf (or) Tj /F5 8 Tf ( ) Tj (modulo) Tj ( ) Tj (by) Tj ( ) Tj (zero) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 118.9067 cm
Q
q
1 0 0 1 70.4315 118.9067 cm
Q
q
1 0 0 1 70.4315 118.9067 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (70) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R343': class PDFStream 
343 0 obj
% page stream
<< /Length 6486 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Raising Exceptions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 574.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (raise) Tj /F1 8 Tf ( statement allows the programmer to force a specified exception to occur. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 505.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (NameError) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('HiThere') Tj 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (NameError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (HiThere) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 449.3367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.432802 Tw 12 TL /F1 8 Tf 0 0 0 rg (The first argument to ) Tj /F5 8 Tf (raise) Tj /F1 8 Tf ( names the exception to be raised. The optional second argument specifies) Tj T* 0 Tw 8.757997 Tw (the exception's argument. Alternatively, the above could be written as ) Tj /F5 8 Tf (raise) Tj T* 0 Tw -0.426156 Tw (NameError\('HiThere'\)) Tj /F1 8 Tf (. Either form works fine, but there seems to be a growing stylistic preference) Tj T* 0 Tw (for the latter.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 419.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .07222 Tw 12 TL /F1 8 Tf 0 0 0 rg (If you need to determine whether an exception was raised but don't intend to handle it, a simpler form) Tj T* 0 Tw (of the ) Tj /F5 8 Tf (raise) Tj /F1 8 Tf ( statement allows you to re-raise the exception:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 278.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (NameError) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('HiThere') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (NameError) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('An exception flew by!') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (An) Tj ( ) Tj (exception) Tj ( ) Tj (flew) Tj ( ) Tj (by) Tj .941176 0 0 rg (!) Tj 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (NameError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (HiThere) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 270.5367 cm
Q
q
1 0 0 1 70.4315 270.5367 cm
Q
q
1 0 0 1 70.4315 270.5367 cm
Q
q
1 0 0 1 70.4315 237.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (User-defined Exceptions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 207.7367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.451382 Tw 12 TL /F1 8 Tf 0 0 0 rg (Programs may name their own exceptions by creating a new exception class. Exceptions should) Tj T* 0 Tw (typically be derived from the ) Tj /F5 8 Tf (Exception) Tj /F1 8 Tf ( class, either directly or indirectly. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 102.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (MyError) Tj /F5 8 Tf 0 0 0 rg (\() Tj /F6 8 Tf .941176 0 0 rg (Exception) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (value) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (value) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (value) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__str__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (value) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (71) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R344': class PDFStream 
344 0 obj
% page stream
<< /Length 5334 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 488.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (MyError) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (MyError) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (as) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (e) Tj (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('My exception occurred, value:') Tj 0 0 0 rg (,) Tj ( ) Tj (e) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (value) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (My) Tj ( ) Tj (exception) Tj ( ) Tj (occurred) Tj (,) Tj ( ) Tj (value) Tj (:) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (MyError) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('oops!') Tj 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* (__main__) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (MyError) Tj (:) Tj ( ) Tj .729412 .129412 .129412 rg ('oops!') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 456.1367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.23969 Tw 12 TL /F1 8 Tf 0 0 0 rg (In this example, the default ) Tj /F5 8 Tf (__init__\(\)) Tj /F1 8 Tf ( of ) Tj /F5 8 Tf (Exception) Tj /F1 8 Tf ( has been overridden. The new behavior) Tj T* 0 Tw (simply creates the ) Tj /F4 8 Tf (value) Tj /F1 8 Tf ( attribute. This replaces the default behavior of creating the ) Tj /F4 8 Tf (args) Tj /F1 8 Tf ( attribute.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 390.1367 cm
q
BT 1 0 0 1 0 54.256 Tm 1.149248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Exception classes can be defined which do anything any other class can do, but are usually kept) Tj T* 0 Tw .038248 Tw (simple, often only offering a number of attributes that allow information about the error to be extracted) Tj T* 0 Tw -0.293752 Tw (by handlers for the exception. When creating a module that can raise several distinct errors, a common) Tj T* 0 Tw .480233 Tw (practice is to create a base class for exceptions defined by that module, and subclass that to create) Tj T* 0 Tw (specific exception classes for different error conditions:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 105.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 276 re B*
Q
q
BT 1 0 0 1 0 258.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (Error) Tj /F5 8 Tf 0 0 0 rg (\() Tj /F6 8 Tf .941176 0 0 rg (Exception) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* (    ) Tj /F7 8 Tf .815686 .25098 .12549 rg ("""Base class for exceptions in this module.""") Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj /F5 8 Tf 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (InputError) Tj /F5 8 Tf 0 0 0 rg (\() Tj (Error) Tj (\):) Tj  T* (    ) Tj /F7 8 Tf .815686 .25098 .12549 rg ("""Exception raised for errors in the input.) Tj T*  T* (    Attributes:) Tj T* (        expression -- input expression in which the error occurred) Tj T* (        message -- explanation of the error) Tj T* (    """) Tj /F5 8 Tf 0 0 0 rg  T*  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (expression) Tj (,) Tj ( ) Tj (message) Tj (\):) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (expression) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (expression) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (message) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (message) Tj  T*  T* /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (TransitionError) Tj /F5 8 Tf 0 0 0 rg (\() Tj (Error) Tj (\):) Tj  T* (    ) Tj /F7 8 Tf .815686 .25098 .12549 rg ("""Raised when an operation attempts a state transition that's not) Tj T* (    allowed.) Tj T*  T* (    Attributes:) Tj T* (        previous -- state at beginning of transition) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (72) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R345': class PDFStream 
345 0 obj
% page stream
<< /Length 6286 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 505.3658 cm
q
q
.951938 0 0 .951938 0 0 cm
q
1 0 0 1 6.4 6.723124 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 376.8 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F7 8 Tf .815686 .25098 .12549 rg (        next -- attempted new state) Tj T* (        message -- explanation of why the specific transition is not allowed) Tj T* (    """) Tj /F5 8 Tf 0 0 0 rg  T*  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (previous) Tj (,) Tj ( ) Tj (next) Tj (,) Tj ( ) Tj (message) Tj (\):) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (previous) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (previous) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (next) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (next) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (message) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (message) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 473.3658 cm
q
BT 1 0 0 1 0 18.256 Tm 1.101248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Most exceptions are defined with names that end in "Error," similar to the naming of the standard) Tj T* 0 Tw (exceptions.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 443.3658 cm
q
BT 1 0 0 1 0 18.256 Tm .338398 Tw 12 TL /F1 8 Tf 0 0 0 rg (Many standard modules define their own exceptions to report errors that may occur in functions they) Tj T* 0 Tw (define. More information on classes is presented in chapter ) Tj /F4 8 Tf (tut-classes) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 443.3658 cm
Q
q
1 0 0 1 70.4315 443.3658 cm
Q
q
1 0 0 1 70.4315 443.3658 cm
Q
q
1 0 0 1 70.4315 410.5658 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Defining Clean-up Actions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 380.5658 cm
q
BT 1 0 0 1 0 18.256 Tm -0.030669 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement has another optional clause which is intended to define clean-up actions that must) Tj T* 0 Tw (be executed under all circumstances. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 251.7658 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (KeyboardInterrupt) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (finally) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Goodbye, world!') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (Goodbye) Tj (,) Tj ( ) Tj (world) Tj .941176 0 0 rg (!) Tj 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (KeyboardInterrupt) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 171.7658 cm
q
BT 1 0 0 1 0 66.256 Tm 1.524283 Tw 12 TL /F1 8 Tf 0 0 0 rg (A ) Tj /F4 8 Tf (finally clause) Tj /F1 8 Tf ( is always executed before leaving the ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement, whether an exception has) Tj T* 0 Tw .220665 Tw (occurred or not. When an exception has occurred in the ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( clause and has not been handled by an) Tj T* 0 Tw .945645 Tw /F5 8 Tf (except) Tj /F1 8 Tf ( clause \(or it has occurred in a ) Tj /F5 8 Tf (except) Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (else) Tj /F1 8 Tf ( clause\), it is re-raised after the ) Tj /F5 8 Tf (finally) Tj T* 0 Tw .666748 Tw /F1 8 Tf (clause has been executed. The ) Tj /F5 8 Tf (finally) Tj /F1 8 Tf ( clause is also executed "on the way out" when any other) Tj T* 0 Tw -0.113752 Tw (clause of the ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement is left via a ) Tj /F5 8 Tf (break) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (continue) Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (return) Tj /F1 8 Tf ( statement. A more complicated) Tj T* 0 Tw (example \(having ) Tj /F5 8 Tf (except) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (finally) Tj /F1 8 Tf ( clauses in the same ) Tj /F5 8 Tf (try) Tj /F1 8 Tf ( statement works as of Python 2.5\):) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 102.9658 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (divide) Tj /F5 8 Tf 0 0 0 rg (\() Tj (x) Tj (,) Tj ( ) Tj (y) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj (result) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj (y) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (ZeroDivisionError) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (73) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R346': class PDFStream 
346 0 obj
% page stream
<< /Length 6232 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 380.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 228 re B*
Q
q
BT 1 0 0 1 0 210.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("division by zero!") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (else) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("result is") Tj 0 0 0 rg (,) Tj ( ) Tj (result) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (finally) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("executing finally clause") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (divide) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (result) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* (executing) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (finally) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (clause) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (divide) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (division) Tj ( ) Tj (by) Tj ( ) Tj (zero) Tj .941176 0 0 rg (!) Tj 0 0 0 rg  T* (executing) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (finally) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (clause) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (divide) Tj (\() Tj .729412 .129412 .129412 rg ("2") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("1") Tj 0 0 0 rg (\)) Tj  T* (executing) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (finally) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (clause) Tj  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (divide) Tj  T* /F6 8 Tf .941176 0 0 rg (TypeError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj (unsupported) Tj ( ) Tj (operand) Tj ( ) Tj 0 .439216 .12549 rg (type) Tj 0 0 0 rg (\() Tj (s) Tj (\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ('str') Tj 0 0 0 rg ( ) Tj /F6 8 Tf (and) Tj /F5 8 Tf ( ) Tj .729412 .129412 .129412 rg ('str') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 336.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.140002 Tw 12 TL /F1 8 Tf 0 0 0 rg (As you can see, the ) Tj /F5 8 Tf (finally) Tj /F1 8 Tf ( clause is executed in any event. The ) Tj /F5 8 Tf (TypeError) Tj /F1 8 Tf ( raised by dividing two) Tj T* 0 Tw .534665 Tw (strings is not handled by the ) Tj /F5 8 Tf (except) Tj /F1 8 Tf ( clause and therefore re-raised after the ) Tj /F5 8 Tf (finally) Tj /F1 8 Tf ( clauses has) Tj T* 0 Tw (been executed.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 306.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.003469 Tw 12 TL /F1 8 Tf 0 0 0 rg (In real world applications, the ) Tj /F5 8 Tf (finally) Tj /F1 8 Tf ( clause is useful for releasing external resources \(such as files) Tj T* 0 Tw (or network connections\), regardless of whether the use of the resource was successful.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 306.1367 cm
Q
q
1 0 0 1 70.4315 306.1367 cm
Q
q
1 0 0 1 70.4315 306.1367 cm
Q
q
1 0 0 1 70.4315 273.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Predefined Clean-up Actions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 231.3367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.138935 Tw 12 TL /F1 8 Tf 0 0 0 rg (Some objects define standard clean-up actions to be undertaken when the object is no longer needed,) Tj T* 0 Tw .231748 Tw (regardless of whether or not the operation using the object succeeded or failed. Look at the following) Tj T* 0 Tw (example, which tries to open a file and print its contents to the screen.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 186.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("myfile.txt") Tj 0 0 0 rg (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 130.5367 cm
q
BT 1 0 0 1 0 42.256 Tm .149262 Tw 12 TL /F1 8 Tf 0 0 0 rg (The problem with this code is that it leaves the file open for an indeterminate amount of time after the) Tj T* 0 Tw .825554 Tw (code has finished executing. This is not an issue in simple scripts, but can be a problem for larger) Tj T* 0 Tw .528704 Tw (applications. The ) Tj /F5 8 Tf (with) Tj /F1 8 Tf ( statement allows objects like files to be used in a way that ensures they are) Tj T* 0 Tw (always cleaned up promptly and correctly.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (74) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R347': class PDFStream 
347 0 obj
% page stream
<< /Length 5905 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (with) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("myfile.txt") Tj 0 0 0 rg (\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (as) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (f) Tj (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (f) Tj (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .428939 Tw 12 TL /F1 8 Tf 0 0 0 rg (After the statement is executed, the file ) Tj /F4 8 Tf (f) Tj /F1 8 Tf ( is always closed, even if a problem was encountered while) Tj T* 0 Tw .077426 Tw (processing the lines. Other objects which provide predefined clean-up actions will indicate this in their) Tj T* 0 Tw (documentation.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
Q
q
1 0 0 1 70.4315 516.1367 cm
Q
q
1 0 0 1 70.4315 516.1367 cm
Q
q
1 0 0 1 70.4315 480.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Clases) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 378.9367 cm
q
BT 1 0 0 1 0 90.256 Tm .817248 Tw 12 TL /F1 8 Tf 0 0 0 rg (El mecanismo de clases de Python agrega clases al lenguaje con un m\355nimo de nuevas sint\341xis y) Tj T* 0 Tw .427998 Tw (sem\341nticas. Es una mezcla de los mecanismos de clase encontrados en C++ y Modula-3. Como es) Tj T* 0 Tw .454351 Tw (cierto para los m\363dulos, las clases en Python no ponen una barrera absoluta entre la definici\363n y el) Tj T* 0 Tw 1.558822 Tw (usuario, sino que m\341s bien se apoya en la cortes\355a del usuario de no "forzar la definici\363n". Sin) Tj T* 0 Tw 1.157426 Tw (embargo, se mantiene el poder completo de las caracter\355sticas m\341s importantes de las clases: el) Tj T* 0 Tw 2.066767 Tw (mecanismo de la herencia de clases permite m\372ltiples clases base, una clase derivada puede) Tj T* 0 Tw -0.348752 Tw (sobreescribir cualquier m\351todo de su\(s\) clase\(s\) base, y un m\351todo puede llamar al m\351todo de la clase) Tj T* 0 Tw (base con el mismo nombre. Los objetos pueden tener una cantidad arbitraria de datos privados.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 252.9367 cm
q
BT 1 0 0 1 0 114.256 Tm .457865 Tw 12 TL /F1 8 Tf 0 0 0 rg (En terminolog\355a de C++, todos los miembros de las clases \(incluyendo los miembros de datos\), son) Tj T* 0 Tw -0.360925 Tw /F4 8 Tf (p\372blicos) Tj /F1 8 Tf (, y todas las funciones miembro son ) Tj /F4 8 Tf (virtuales) Tj /F1 8 Tf (. No hay constructores o destructores especiales.) Tj T* 0 Tw -0.377752 Tw (Como en Modula-3, no hay atajos para hacer referencia a los miembros del objeto desde sus m\351todos:) Tj T* 0 Tw .455248 Tw (la funci\363n m\351todo se declara con un primer argumento expl\355cito que representa al objeto, el cual se) Tj T* 0 Tw .173426 Tw (provee impl\355citamente por la llamada. Como en Smalltalk, las clases mismas son objetos, aunque en) Tj T* 0 Tw -0.214446 Tw (un m\341s amplio sentido de la palabra: en Python, todos los tipos de datos son objetos. Esto provee una) Tj T* 0 Tw .309065 Tw (sem\341ntica para importar y renombrar. A diferencia de C++ y Modula-3, los tipos de datos integrados) Tj T* 0 Tw .732748 Tw (pueden usarse como clases base para que el usuario los extienda. Tambi\351n, como en C++ pero a) Tj T* 0 Tw .793664 Tw (diferencia de Modula-3, la mayor\355a de los operadores integrados con sint\341xis especial \(operadores) Tj T* 0 Tw (aritm\351ticos, de sub\355ndice, etc.\) pueden ser redefinidos por instancias de la clase.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 252.9367 cm
Q
q
1 0 0 1 70.4315 252.9367 cm
Q
q
1 0 0 1 70.4315 252.9367 cm
Q
q
1 0 0 1 70.4315 220.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Unas palabras sobre terminolog\355a) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 178.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.157849 Tw 12 TL /F1 8 Tf 0 0 0 rg (Sin haber una terminolog\355a universalmente aceptada sobre clases, har\351 uso ocasional de t\351rminos de) Tj T* 0 Tw 1.139465 Tw (Smalltalk y C++. \(Usar\355a t\351rminos de Modula-3, ya que su sem\341ntica orientada a objetos es m\341s) Tj T* 0 Tw (cercanas a Python que C++, pero no espero que muchos lectores hayan escuchado hablar de \351l\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 100.1367 cm
q
BT 1 0 0 1 0 66.256 Tm 1.312997 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los objetos tienen individualidad, y m\372ltiples nombres \(en muchos \341mbitos\) pueden vincularse al) Tj T* 0 Tw .486665 Tw (mismo objeto. Esto se conoce como ) Tj /F4 8 Tf (aliasing) Tj /F1 8 Tf ( en otros lenguajes. Normalmente no se aprecia esto a) Tj T* 0 Tw -0.145431 Tw (primera vista en Python, y puede ignorarse sin problemas cuando se maneja tipos b\341sicos inmutables) Tj T* 0 Tw 1.126331 Tw (\(n\372meros, cadenas, tuplas\). Sin embargo, el ) Tj /F4 8 Tf (aliasing) Tj /F1 8 Tf (, o renombrado, tiene un efecto \(intencional!\)) Tj T* 0 Tw .712283 Tw (sobre la sem\341ntica de c\363digo Python que involucra objetos mutables como listas, diccionarios, y la) Tj T* 0 Tw .457536 Tw (mayor\355a de tipos que representan entidades afuera del programa \(archivos, ventanas, etc.\). Esto se) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (75) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R348': class PDFStream 
348 0 obj
% page stream
<< /Length 5931 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.9367 cm
q
BT 1 0 0 1 0 42.256 Tm .868613 Tw 12 TL /F1 8 Tf 0 0 0 rg (usa normalmente para beneficio del programa, ya que los renombres funcionan como punteros en) Tj T* 0 Tw .233998 Tw (algunos aspectos. Por ejemplo, pasar un objeto es barato ya que la implementaci\363n solamente pasa) Tj T* 0 Tw .640209 Tw (el puntero; y si una funci\363n modifica el objeto que fue pasado, el que la llama ver\341 el cambio; esto) Tj T* 0 Tw (elimina la necesidad de tener dos formas diferentes de pasar argumentos, como en Pascal.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 560.9367 cm
Q
q
1 0 0 1 70.4315 560.9367 cm
Q
q
1 0 0 1 70.4315 560.9367 cm
Q
q
1 0 0 1 70.4315 528.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Python Scopes and Name Spaces) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 474.1367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.872855 Tw 12 TL /F1 8 Tf 0 0 0 rg (Before introducing classes, I first have to tell you something about Python's scope rules. Class) Tj T* 0 Tw -0.551735 Tw (definitions play some neat tricks with namespaces, and you need to know how scopes and namespaces) Tj T* 0 Tw .502131 Tw (work to fully understand what's going on. Incidentally, knowledge about this subject is useful for any) Tj T* 0 Tw (advanced Python programmer.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 456.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Let's begin with some definitions.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 354.1367 cm
q
BT 1 0 0 1 0 90.256 Tm .522569 Tw 12 TL /F1 8 Tf 0 0 0 rg (A ) Tj /F4 8 Tf (namespace) Tj /F1 8 Tf ( is a mapping from names to objects. Most namespaces are currently implemented as) Tj T* 0 Tw -0.030135 Tw (Python dictionaries, but that's normally not noticeable in any way \(except for performance\), and it may) Tj T* 0 Tw 1.522931 Tw (change in the future. Examples of namespaces are: the set of built-in names \(functions such as) Tj T* 0 Tw -0.225178 Tw /F5 8 Tf (abs\(\)) Tj /F1 8 Tf (, and built-in exception names\); the global names in a module; and the local names in a function) Tj T* 0 Tw .033109 Tw (invocation. In a sense the set of attributes of an object also form a namespace. The important thing to) Tj T* 0 Tw -0.496288 Tw (know about namespaces is that there is absolutely no relation between names in different namespaces;) Tj T* 0 Tw .275141 Tw (for instance, two different modules may both define a function "maximize" without confusion --- users) Tj T* 0 Tw (of the modules must prefix it with the module name.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 288.1367 cm
q
BT 1 0 0 1 0 54.256 Tm .688209 Tw 12 TL /F1 8 Tf 0 0 0 rg (By the way, I use the word ) Tj /F4 8 Tf (attribute) Tj /F1 8 Tf ( for any name following a dot --- for example, in the expression) Tj T* 0 Tw .573748 Tw /F5 8 Tf (z.real) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (real) Tj /F1 8 Tf ( is an attribute of the object ) Tj /F5 8 Tf (z) Tj /F1 8 Tf (. Strictly speaking, references to names in modules are) Tj T* 0 Tw 2.388724 Tw (attribute references: in the expression ) Tj /F5 8 Tf (modname.funcname) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (modname) Tj /F1 8 Tf ( is a module object and) Tj T* 0 Tw -0.183767 Tw /F5 8 Tf (funcname) Tj /F1 8 Tf ( is an attribute of it. In this case there happens to be a straightforward mapping between the) Tj T* 0 Tw (module's attributes and the global names defined in the module: they share the same namespace! ) Tj /F1 6 Tf 0 0 .501961 rg 4 Ts (1) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 234.1367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.046669 Tw 12 TL /F1 8 Tf 0 0 0 rg (Attributes may be read-only or writable. In the latter case, assignment to attributes is possible. Module) Tj T* 0 Tw .347382 Tw (attributes are writable: you can write ) Tj /F5 8 Tf (modname.the_answer = 42) Tj /F1 8 Tf (. Writable attributes may also be) Tj T* 0 Tw .316331 Tw (deleted with the ) Tj /F5 8 Tf (del) Tj /F1 8 Tf ( statement. For example, ) Tj /F5 8 Tf (del modname.the_answer) Tj /F1 8 Tf ( will remove the attribute) Tj T* 0 Tw /F5 8 Tf (the_answer) Tj /F1 8 Tf ( from the object named by ) Tj /F5 8 Tf (modname) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 144.1367 cm
q
BT 1 0 0 1 0 78.256 Tm -0.431079 Tw 12 TL /F1 8 Tf 0 0 0 rg (Name spaces are created at different moments and have different lifetimes. The namespace containing) Tj T* 0 Tw .482748 Tw (the built-in names is created when the Python interpreter starts up, and is never deleted. The global) Tj T* 0 Tw 2.649426 Tw (namespace for a module is created when the module definition is read in; normally, module) Tj T* 0 Tw .42369 Tw (namespaces also last until the interpreter quits. The statements executed by the top-level invocation) Tj T* 0 Tw .299057 Tw (of the interpreter, either read from a script file or interactively, are considered part of a module called) Tj T* 0 Tw 1.394931 Tw /F5 8 Tf (__main__) Tj /F1 8 Tf (, so they have their own global namespace. \(The built-in names actually also live in a) Tj T* 0 Tw (module; this is called ) Tj /F5 8 Tf (__builtin__) Tj /F1 8 Tf (.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 102.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.315748 Tw 12 TL /F1 8 Tf 0 0 0 rg (The local namespace for a function is created when the function is called, and deleted when the) Tj T* 0 Tw -0.404002 Tw (function returns or raises an exception that is not handled within the function. \(Actually, forgetting would) Tj T* 0 Tw .278665 Tw (be a better way to describe what actually happens.\) Of course, recursive invocations each have their) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (76) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R349': class PDFStream 
349 0 obj
% page stream
<< /Length 5276 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (own local namespace.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 554.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .474248 Tw 12 TL /F1 8 Tf 0 0 0 rg (A ) Tj /F4 8 Tf (scope) Tj /F1 8 Tf ( is a textual region of a Python program where a namespace is directly accessible. "Directly) Tj T* 0 Tw 1.193748 Tw (accessible" here means that an unqualified reference to a name attempts to find the name in the) Tj T* 0 Tw (namespace.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 476.9367 cm
q
BT 1 0 0 1 0 66.256 Tm .527075 Tw 12 TL /F1 8 Tf 0 0 0 rg (Although scopes are determined statically, they are used dynamically. At any time during execution,) Tj T* 0 Tw 1.416305 Tw (there are at least three nested scopes whose namespaces are directly accessible: the innermost) Tj T* 0 Tw .203141 Tw (scope, which is searched first, contains the local names; the namespaces of any enclosing functions,) Tj T* 0 Tw 1.655075 Tw (which are searched starting with the nearest enclosing scope; the middle scope, searched next,) Tj T* 0 Tw -0.509431 Tw (contains the current module's global names; and the outermost scope \(searched last\) is the namespace) Tj T* 0 Tw (containing built-in names.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 422.9367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.150248 Tw 12 TL /F1 8 Tf 0 0 0 rg (If a name is declared global, then all references and assignments go directly to the middle scope) Tj T* 0 Tw .408921 Tw (containing the module's global names. Otherwise, all variables found outside of the innermost scope) Tj T* 0 Tw 1.098443 Tw (are read-only \(an attempt to write to such a variable will simply create a ) Tj /F4 8 Tf (new) Tj /F1 8 Tf ( local variable in the) Tj T* 0 Tw (innermost scope, leaving the identically named outer variable unchanged\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 380.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.558574 Tw 12 TL /F1 8 Tf 0 0 0 rg (Usually, the local scope references the local names of the \(textually\) current function. Outside functions,) Tj T* 0 Tw -0.096859 Tw (the local scope references the same namespace as the global scope: the module's namespace. Class) Tj T* 0 Tw (definitions place yet another namespace in the local scope.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 314.9367 cm
q
BT 1 0 0 1 0 54.256 Tm .035528 Tw 12 TL /F1 8 Tf 0 0 0 rg (It is important to realize that scopes are determined textually: the global scope of a function defined in) Tj T* 0 Tw -0.148668 Tw (a module is that module's namespace, no matter from where or by what alias the function is called. On) Tj T* 0 Tw -0.172943 Tw (the other hand, the actual search for names is done dynamically, at run time --- however, the language) Tj T* 0 Tw .066398 Tw (definition is evolving towards static name resolution, at "compile" time, so don't rely on dynamic name) Tj T* 0 Tw (resolution! \(In fact, local variables are already determined statically.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 224.9367 cm
q
BT 1 0 0 1 0 78.256 Tm .147156 Tw 12 TL /F1 8 Tf 0 0 0 rg (A special quirk of Python is that -- if no ) Tj /F5 8 Tf (global) Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (nonlocal) Tj /F1 8 Tf ( statement is in effect -- assignments to) Tj T* 0 Tw .115057 Tw (names always go into the innermost scope. Assignments do not copy data --- they just bind names to) Tj T* 0 Tw 1.376233 Tw (objects. The same is true for deletions: the statement ) Tj /F5 8 Tf (del x) Tj /F1 8 Tf ( removes the binding of ) Tj /F5 8 Tf (x) Tj /F1 8 Tf ( from the) Tj T* 0 Tw .721865 Tw (namespace referenced by the local scope. In fact, all operations that introduce new names use the) Tj T* 0 Tw .044283 Tw (local scope: in particular, import statements and function definitions bind the module or function name) Tj T* 0 Tw .172939 Tw (in the local scope. \(The ) Tj /F5 8 Tf (global) Tj /F1 8 Tf ( statement can be used to indicate that particular variables live in the) Tj T* 0 Tw (global scope.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 224.9367 cm
Q
q
1 0 0 1 70.4315 224.9367 cm
Q
q
1 0 0 1 70.4315 224.9367 cm
Q
q
1 0 0 1 70.4315 192.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (A First Look at Classes) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 174.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Classes introduce a little bit of new syntax, three new object types, and some new semantics.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 174.1367 cm
Q
q
1 0 0 1 70.4315 174.1367 cm
Q
q
1 0 0 1 70.4315 174.1367 cm
Q
q
1 0 0 1 70.4315 143.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Class Definition Syntax) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 125.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The simplest form of class definition looks like this:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (77) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R350': class PDFStream 
350 0 obj
% page stream
<< /Length 5631 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 524.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (ClassName) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (statement) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (statement) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (N) Tj .188235 .188235 .188235 rg (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .821228 Tw 12 TL /F1 8 Tf 0 0 0 rg (Class definitions, like function definitions \() Tj /F5 8 Tf (def) Tj /F1 8 Tf ( statements\) must be executed before they have any) Tj T* 0 Tw 1.066586 Tw (effect. \(You could conceivably place a class definition in a branch of an ) Tj /F5 8 Tf (if) Tj /F1 8 Tf ( statement, or inside a) Tj T* 0 Tw (function.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 426.1367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.791141 Tw 12 TL /F1 8 Tf 0 0 0 rg (In practice, the statements inside a class definition will usually be function definitions, but other) Tj T* 0 Tw -0.118135 Tw (statements are allowed, and sometimes useful --- we'll come back to this later. The function definitions) Tj T* 0 Tw .595748 Tw (inside a class normally have a peculiar form of argument list, dictated by the calling conventions for) Tj T* 0 Tw (methods --- again, this is explained later.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 384.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .009554 Tw 12 TL /F1 8 Tf 0 0 0 rg (When a class definition is entered, a new namespace is created, and used as the local scope --- thus,) Tj T* 0 Tw .489426 Tw (all assignments to local variables go into this new namespace. In particular, function definitions bind) Tj T* 0 Tw (the name of the new function here.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 318.1367 cm
q
BT 1 0 0 1 0 54.256 Tm 1.123332 Tw 12 TL /F1 8 Tf 0 0 0 rg (When a class definition is left normally \(via the end\), a ) Tj /F4 8 Tf (class object) Tj /F1 8 Tf ( is created. This is basically a) Tj T* 0 Tw .116531 Tw (wrapper around the contents of the namespace created by the class definition; we'll learn more about) Tj T* 0 Tw 1.370116 Tw (class objects in the next section. The original local scope \(the one in effect just before the class) Tj T* 0 Tw -0.01578 Tw (definition was entered\) is reinstated, and the class object is bound here to the class name given in the) Tj T* 0 Tw (class definition header \() Tj /F5 8 Tf (ClassName) Tj /F1 8 Tf ( in the example\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 318.1367 cm
Q
q
1 0 0 1 70.4315 318.1367 cm
Q
q
1 0 0 1 70.4315 318.1367 cm
Q
q
1 0 0 1 70.4315 287.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Class Objects) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 269.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Class objects support two kinds of operations: attribute references and instantiation.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 227.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .718459 Tw 12 TL /F4 8 Tf 0 0 0 rg (Attribute references) Tj /F1 8 Tf ( use the standard syntax used for all attribute references in Python: ) Tj /F5 8 Tf (obj.name) Tj /F1 8 Tf (.) Tj T* 0 Tw -0.052943 Tw (Valid attribute names are all the names that were in the class's namespace when the class object was) Tj T* 0 Tw (created. So, if the class definition looked like this:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 146.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (MyClass) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj .729412 .129412 .129412 rg ("A simple example class") Tj 0 0 0 rg  T* (    ) Tj (i) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12345) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (f) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('hello world') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 102.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .582459 Tw 12 TL /F1 8 Tf 0 0 0 rg (then ) Tj /F5 8 Tf (MyClass.i) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (MyClass.f) Tj /F1 8 Tf ( are valid attribute references, returning an integer and a function) Tj T* 0 Tw 2.026398 Tw (object, respectively. Class attributes can also be assigned to, so you can change the value of) Tj T* 0 Tw -0.011145 Tw /F5 8 Tf (MyClass.i) Tj /F1 8 Tf ( by assignment. ) Tj /F5 8 Tf (__doc__) Tj /F1 8 Tf ( is also a valid attribute, returning the docstring belonging to the) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (78) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R351': class PDFStream 
351 0 obj
% page stream
<< /Length 6320 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (class: ) Tj /F5 8 Tf ("A simple example class") Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.337431 Tw 12 TL /F1 8 Tf 0 0 0 rg (Class ) Tj /F4 8 Tf (instantiation) Tj /F1 8 Tf ( uses function notation. Just pretend that the class object is a parameterless function) Tj T* 0 Tw (that returns a new instance of the class. For example \(assuming the above class\):) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 534.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (MyClass) Tj (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 514.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (creates a new ) Tj /F4 8 Tf (instance) Tj /F1 8 Tf ( of the class and assigns this object to the local variable ) Tj /F5 8 Tf (x) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 472.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.100855 Tw 12 TL /F1 8 Tf 0 0 0 rg (The instantiation operation \("calling" a class object\) creates an empty object. Many classes like to) Tj T* 0 Tw 1.050398 Tw (create objects with instances customized to a specific initial state. Therefore a class may define a) Tj T* 0 Tw (special method named ) Tj /F5 8 Tf (__init__\(\)) Tj /F1 8 Tf (, like this:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 427.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* (    ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (data) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 383.3367 cm
q
BT 1 0 0 1 0 30.256 Tm 4.733997 Tw 12 TL /F1 8 Tf 0 0 0 rg (When a class defines an ) Tj /F5 8 Tf (__init__\(\)) Tj /F1 8 Tf ( method, class instantiation automatically invokes) Tj T* 0 Tw .141998 Tw /F5 8 Tf (__init__\(\)) Tj /F1 8 Tf ( for the newly-created class instance. So in this example, a new, initialized instance can) Tj T* 0 Tw (be obtained by:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 350.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (MyClass) Tj (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 318.5367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.462002 Tw 12 TL /F1 8 Tf 0 0 0 rg (Of course, the ) Tj /F5 8 Tf (__init__\(\)) Tj /F1 8 Tf ( method may have arguments for greater flexibility. In that case, arguments) Tj T* 0 Tw (given to the class instantiation operator are passed on to ) Tj /F5 8 Tf (__init__\(\)) Tj /F1 8 Tf (. For example,) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 201.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (Complex) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (realpart) Tj (,) Tj ( ) Tj (imagpart) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (r) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (realpart) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (i) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (imagpart) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (Complex) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (3.0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (4.5) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (r) Tj (,) Tj ( ) Tj (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (i) Tj  T* (\() Tj /F6 8 Tf .376471 0 .878431 rg (3.0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (4.5) Tj /F5 8 Tf 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 193.7367 cm
Q
q
1 0 0 1 70.4315 193.7367 cm
Q
q
1 0 0 1 70.4315 193.7367 cm
Q
q
1 0 0 1 70.4315 163.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Instance Objects) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 133.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .426398 Tw 12 TL /F1 8 Tf 0 0 0 rg (Now what can we do with instance objects? The only operations understood by instance objects are) Tj T* 0 Tw (attribute references. There are two kinds of valid attribute names, data attributes and methods.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 103.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .693998 Tw 12 TL /F4 8 Tf 0 0 0 rg (data attributes) Tj /F1 8 Tf ( correspond to "instance variables" in Smalltalk, and to "data members" in C++. Data) Tj T* 0 Tw 1.167731 Tw (attributes need not be declared; like local variables, they spring into existence when they are first) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (79) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R352': class PDFStream 
352 0 obj
% page stream
<< /Length 6140 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .26141 Tw 12 TL /F1 8 Tf 0 0 0 rg (assigned to. For example, if ) Tj /F5 8 Tf (x) Tj /F1 8 Tf ( is the instance of ) Tj /F5 8 Tf (MyClass) Tj /F1 8 Tf ( created above, the following piece of code) Tj T* 0 Tw (will print the value ) Tj /F5 8 Tf (16) Tj /F1 8 Tf (, without leaving a trace:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 504.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (counter) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (counter) Tj ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (counter) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (counter) Tj ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (counter) Tj  T* /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (counter) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 436.1367 cm
q
BT 1 0 0 1 0 54.256 Tm .087776 Tw 12 TL /F1 8 Tf 0 0 0 rg (The other kind of instance attribute reference is a ) Tj /F4 8 Tf (method) Tj /F1 8 Tf (. A method is a function that "belongs to" an) Tj T* 0 Tw 1.204748 Tw (object. \(In Python, the term method is not unique to class instances: other object types can have) Tj T* 0 Tw .368265 Tw (methods as well. For example, list objects have methods called append, insert, remove, sort, and so) Tj T* 0 Tw .563465 Tw (on. However, in the following discussion, we'll use the term method exclusively to mean methods of) Tj T* 0 Tw (class instance objects, unless explicitly stated otherwise.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 436.1367 cm
Q
q
1 0 0 1 70.4315 382.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .506586 Tw 12 TL /F1 8 Tf 0 0 0 rg (Valid method names of an instance object depend on its class. By definition, all attributes of a class) Tj T* 0 Tw .444248 Tw (that are function objects define corresponding methods of its instances. So in our example, ) Tj /F5 8 Tf (x.f) Tj /F1 8 Tf ( is a) Tj T* 0 Tw .296748 Tw (valid method reference, since ) Tj /F5 8 Tf (MyClass.f) Tj /F1 8 Tf ( is a function, but ) Tj /F5 8 Tf (x.i) Tj /F1 8 Tf ( is not, since ) Tj /F5 8 Tf (MyClass.i) Tj /F1 8 Tf ( is not. But) Tj T* 0 Tw /F5 8 Tf (x.f) Tj /F1 8 Tf ( is not the same thing as ) Tj /F5 8 Tf (MyClass.f) Tj /F1 8 Tf ( --- it is a ) Tj /F4 8 Tf (method object) Tj /F1 8 Tf (, not a function object.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 382.1367 cm
Q
q
1 0 0 1 70.4315 382.1367 cm
Q
q
1 0 0 1 70.4315 382.1367 cm
Q
q
1 0 0 1 70.4315 351.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Method Objects) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 333.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Usually, a method is called right after it is bound:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 300.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (f) Tj (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 256.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .292748 Tw 12 TL /F1 8 Tf 0 0 0 rg (In the ) Tj /F5 8 Tf (MyClass) Tj /F1 8 Tf ( example, this will return the string ) Tj /F5 8 Tf ('hello world') Tj /F1 8 Tf (. However, it is not necessary to) Tj T* 0 Tw .310998 Tw (call a method right away: ) Tj /F5 8 Tf (x.f) Tj /F1 8 Tf ( is a method object, and can be stored away and called at a later time.) Tj T* 0 Tw (For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 200.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (xf) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (x) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (f) Tj  T* /F6 8 Tf 0 .501961 0 rg (while) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (xf) Tj (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 180.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (will continue to print ) Tj /F5 8 Tf (hello world) Tj /F1 8 Tf ( until the end of time.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 126.1367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.127752 Tw 12 TL /F1 8 Tf 0 0 0 rg (What exactly happens when a method is called? You may have noticed that ) Tj /F5 8 Tf (x.f\(\)) Tj /F1 8 Tf ( was called without) Tj T* 0 Tw -0.415717 Tw (an argument above, even though the function definition for ) Tj /F5 8 Tf (f\(\)) Tj /F1 8 Tf ( specified an argument. What happened) Tj T* 0 Tw 1.048265 Tw (to the argument? Surely Python raises an exception when a function that requires an argument is) Tj T* 0 Tw (called without any --- even if the argument isn't actually used...) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 108.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 1.093748 Tw 12 TL /F1 8 Tf 0 0 0 rg (Actually, you may have guessed the answer: the special thing about methods is that the object is) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (80) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R353': class PDFStream 
353 0 obj
% page stream
<< /Length 5487 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.9367 cm
q
BT 1 0 0 1 0 42.256 Tm .585645 Tw 12 TL /F1 8 Tf 0 0 0 rg (passed as the first argument of the function. In our example, the call ) Tj /F5 8 Tf (x.f\(\)) Tj /F1 8 Tf ( is exactly equivalent to) Tj T* 0 Tw .912748 Tw /F5 8 Tf (MyClass.f\(x\)) Tj /F1 8 Tf (. In general, calling a method with a list of ) Tj /F4 8 Tf (n) Tj /F1 8 Tf ( arguments is equivalent to calling the) Tj T* 0 Tw -0.150135 Tw (corresponding function with an argument list that is created by inserting the method's object before the) Tj T* 0 Tw (first argument.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 470.9367 cm
q
BT 1 0 0 1 0 78.256 Tm 1.451465 Tw 12 TL /F1 8 Tf 0 0 0 rg (If you still don't understand how methods work, a look at the implementation can perhaps clarify) Tj T* 0 Tw -0.053884 Tw (matters. When an instance attribute is referenced that isn't a data attribute, its class is searched. If the) Tj T* 0 Tw .532469 Tw (name denotes a valid class attribute that is a function object, a method object is created by packing) Tj T* 0 Tw -0.122119 Tw (\(pointers to\) the instance object and the function object just found together in an abstract object: this is) Tj T* 0 Tw -0.16378 Tw (the method object. When the method object is called with an argument list, it is unpacked again, a new) Tj T* 0 Tw .574665 Tw (argument list is constructed from the instance object and the original argument list, and the function) Tj T* 0 Tw (object is called with this new argument list.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 470.9367 cm
Q
q
1 0 0 1 70.4315 470.9367 cm
Q
q
1 0 0 1 70.4315 470.9367 cm
Q
q
1 0 0 1 70.4315 438.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Random Remarks) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 372.1367 cm
q
BT 1 0 0 1 0 54.256 Tm .937536 Tw 12 TL /F1 8 Tf 0 0 0 rg (Data attributes override method attributes with the same name; to avoid accidental name conflicts,) Tj T* 0 Tw .482116 Tw (which may cause hard-to-find bugs in large programs, it is wise to use some kind of convention that) Tj T* 0 Tw .341452 Tw (minimizes the chance of conflicts. Possible conventions include capitalizing method names, prefixing) Tj T* 0 Tw 1.583731 Tw (data attribute names with a small unique string \(perhaps just an underscore\), or using verbs for) Tj T* 0 Tw (methods and nouns for data attributes.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 306.1367 cm
q
BT 1 0 0 1 0 54.256 Tm .200233 Tw 12 TL /F1 8 Tf 0 0 0 rg (Data attributes may be referenced by methods as well as by ordinary users \("clients"\) of an object. In) Tj T* 0 Tw .315748 Tw (other words, classes are not usable to implement pure abstract data types. In fact, nothing in Python) Tj T* 0 Tw .675776 Tw (makes it possible to enforce data hiding --- it is all based upon convention. \(On the other hand, the) Tj T* 0 Tw -0.087695 Tw (Python implementation, written in C, can completely hide implementation details and control access to) Tj T* 0 Tw (an object if necessary; this can be used by extensions to Python written in C.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 252.1367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.347465 Tw 12 TL /F1 8 Tf 0 0 0 rg (Clients should use data attributes with care --- clients may mess up invariants maintained by the) Tj T* 0 Tw .087763 Tw (methods by stamping on their data attributes. Note that clients may add data attributes of their own to) Tj T* 0 Tw .093248 Tw (an instance object without affecting the validity of the methods, as long as name conflicts are avoided) Tj T* 0 Tw (--- again, a naming convention can save a lot of headaches here.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 210.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .605065 Tw 12 TL /F1 8 Tf 0 0 0 rg (There is no shorthand for referencing data attributes \(or other methods!\) from within methods. I find) Tj T* 0 Tw .248798 Tw (that this actually increases the readability of methods: there is no chance of confusing local variables) Tj T* 0 Tw (and instance variables when glancing through a method.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 156.1367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.193113 Tw 12 TL /F1 8 Tf 0 0 0 rg (Often, the first argument of a method is called ) Tj /F5 8 Tf (self) Tj /F1 8 Tf (. This is nothing more than a convention: the name) Tj T* 0 Tw -0.558135 Tw /F5 8 Tf (self) Tj /F1 8 Tf ( has absolutely no special meaning to Python. \(Note, however, that by not following the convention) Tj T* 0 Tw .219998 Tw (your code may be less readable to other Python programmers, and it is also conceivable that a ) Tj /F4 8 Tf (class) Tj T* 0 Tw (browser) Tj /F1 8 Tf ( program might be written that relies upon such a convention.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 114.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.317998 Tw 12 TL /F1 8 Tf 0 0 0 rg (Any function object that is a class attribute defines a method for instances of that class. It is not) Tj T* 0 Tw .297426 Tw (necessary that the function definition is textually enclosed in the class definition: assigning a function) Tj T* 0 Tw (object to a local variable in the class is also ok. For example:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (81) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R354': class PDFStream 
354 0 obj
% page stream
<< /Length 5856 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 488.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F7 8 Tf .501961 .501961 .501961 rg (# Function defined outside the class) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (f1) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (x) Tj (,) Tj ( ) Tj (y) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (min) Tj 0 0 0 rg (\() Tj (x) Tj (,) Tj ( ) Tj (x) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (y) Tj (\)) Tj  T*  T* /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (C) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj (f) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (f1) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (g) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('hello world') Tj 0 0 0 rg  T* (    ) Tj (h) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (g) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 444.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.018202 Tw 12 TL /F1 8 Tf 0 0 0 rg (Now ) Tj /F5 8 Tf (f) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (g) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (h) Tj /F1 8 Tf ( are all attributes of class ) Tj /F5 8 Tf (C) Tj /F1 8 Tf ( that refer to function objects, and consequently they are all) Tj T* 0 Tw -0.246446 Tw (methods of instances of ) Tj /F5 8 Tf (C) Tj /F1 8 Tf ( --- ) Tj /F5 8 Tf (h) Tj /F1 8 Tf ( being exactly equivalent to ) Tj /F5 8 Tf (g) Tj /F1 8 Tf (. Note that this practice usually only serves) Tj T* 0 Tw (to confuse the reader of a program.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 426.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Methods may call other methods by using method attributes of the ) Tj /F5 8 Tf (self) Tj /F1 8 Tf ( argument:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 309.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (Bag) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (data) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([]) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (add) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (x) Tj (\):) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (data) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj (x) Tj (\)) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (addtwice) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (x) Tj (\):) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (add) Tj (\() Tj (x) Tj (\)) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (add) Tj (\() Tj (x) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 217.3367 cm
q
BT 1 0 0 1 0 78.256 Tm 1.728283 Tw 12 TL /F1 8 Tf 0 0 0 rg (Methods may reference global names in the same way as ordinary functions. The global scope) Tj T* 0 Tw .178248 Tw (associated with a method is the module containing the class definition. \(The class itself is never used) Tj T* 0 Tw -0.213557 Tw (as a global scope!\) While one rarely encounters a good reason for using global data in a method, there) Tj T* 0 Tw .371248 Tw (are many legitimate uses of the global scope: for one thing, functions and modules imported into the) Tj T* 0 Tw -0.163335 Tw (global scope can be used by methods, as well as functions and classes defined in it. Usually, the class) Tj T* 0 Tw -0.19978 Tw (containing the method is itself defined in this global scope, and in the next section we'll find some good) Tj T* 0 Tw (reasons why a method would want to reference its own class!) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 187.3367 cm
q
BT 1 0 0 1 0 18.256 Tm 3.410586 Tw 12 TL /F1 8 Tf 0 0 0 rg (Each value is an object, and therefore has a ) Tj /F4 8 Tf (class) Tj /F1 8 Tf ( \(also called its ) Tj /F4 8 Tf (type) Tj /F1 8 Tf (\). It is stored as) Tj T* 0 Tw /F5 8 Tf (object.__class__) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 187.3367 cm
Q
q
1 0 0 1 70.4315 187.3367 cm
Q
q
1 0 0 1 70.4315 187.3367 cm
Q
q
1 0 0 1 70.4315 154.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Inheritance) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 124.5367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.071735 Tw 12 TL /F1 8 Tf 0 0 0 rg (Of course, a language feature would not be worthy of the name "class" without supporting inheritance.) Tj T* 0 Tw (The syntax for a derived class definition looks like this:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (82) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R355': class PDFStream 
355 0 obj
% page stream
<< /Length 6118 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 524.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (DerivedClassName) Tj /F5 8 Tf 0 0 0 rg (\() Tj (BaseClassName) Tj (\):) Tj  T* (    ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (statement) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (statement) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (N) Tj .188235 .188235 .188235 rg (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.048855 Tw 12 TL /F1 8 Tf 0 0 0 rg (The name ) Tj /F5 8 Tf (BaseClassName) Tj /F1 8 Tf ( must be defined in a scope containing the derived class definition. In) Tj T* 0 Tw 1.262248 Tw (place of a base class name, other arbitrary expressions are also allowed. This can be useful, for) Tj T* 0 Tw (example, when the base class is defined in another module:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 447.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (DerivedClassName) Tj /F5 8 Tf 0 0 0 rg (\() Tj (modname) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (BaseClassName) Tj (\):) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 391.3367 cm
q
BT 1 0 0 1 0 42.256 Tm .219528 Tw 12 TL /F1 8 Tf 0 0 0 rg (Execution of a derived class definition proceeds the same as for a base class. When the class object) Tj T* 0 Tw 1.317598 Tw (is constructed, the base class is remembered. This is used for resolving attribute references: if a) Tj T* 0 Tw -0.038107 Tw (requested attribute is not found in the class, the search proceeds to look in the base class. This rule is) Tj T* 0 Tw (applied recursively if the base class itself is derived from some other class.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 337.3367 cm
q
BT 1 0 0 1 0 42.256 Tm .106543 Tw 12 TL /F1 8 Tf 0 0 0 rg (There's nothing special about instantiation of derived classes: ) Tj /F5 8 Tf (DerivedClassName\(\)) Tj /F1 8 Tf ( creates a new) Tj T* 0 Tw .299141 Tw (instance of the class. Method references are resolved as follows: the corresponding class attribute is) Tj T* 0 Tw .010931 Tw (searched, descending down the chain of base classes if necessary, and the method reference is valid) Tj T* 0 Tw (if this yields a function object.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 283.3367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.554151 Tw 12 TL /F1 8 Tf 0 0 0 rg (Derived classes may override methods of their base classes. Because methods have no special) Tj T* 0 Tw .114586 Tw (privileges when calling other methods of the same object, a method of a base class that calls another) Tj T* 0 Tw .058887 Tw (method defined in the same base class may end up calling a method of a derived class that overrides) Tj T* 0 Tw (it. \(For C++ programmers: all methods in Python are effectively ) Tj /F5 8 Tf (virtual) Tj /F1 8 Tf (.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 229.3367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.162891 Tw 12 TL /F1 8 Tf 0 0 0 rg (An overriding method in a derived class may in fact want to extend rather than simply replace the base) Tj T* 0 Tw .010735 Tw (class method of the same name. There is a simple way to call the base class method directly: just call) Tj T* 0 Tw .338219 Tw /F5 8 Tf (BaseClassName.methodname\(self, arguments\)) Tj /F1 8 Tf (. This is occasionally useful to clients as well.) Tj T* 0 Tw (\(Note that this only works if the base class is defined or imported directly in the global scope.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 211.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Python has two builtin functions that work with inheritance:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 209.3367 cm
Q
q
1 0 0 1 70.4315 185.3367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm .029844 Tw 12 TL /F1 8 Tf 0 0 0 rg (Use ) Tj /F5 8 Tf (isinstance\(\)) Tj /F1 8 Tf ( to check an object's type: ) Tj /F5 8 Tf (isinstance\(obj, int\)) Tj /F1 8 Tf ( will be ) Tj /F5 8 Tf (True) Tj /F1 8 Tf ( only if) Tj T* 0 Tw /F5 8 Tf (obj.__class__) Tj /F1 8 Tf ( is ) Tj /F5 8 Tf (int) Tj /F1 8 Tf ( or some class derived from ) Tj /F5 8 Tf (int) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 149.3367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 24 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 30.256 Tm 1.001997 Tw 12 TL /F1 8 Tf 0 0 0 rg (Use ) Tj /F5 8 Tf (issubclass\(\)) Tj /F1 8 Tf ( to check class inheritance: ) Tj /F5 8 Tf (issubclass\(bool, int\)) Tj /F1 8 Tf ( is ) Tj /F5 8 Tf (True) Tj /F1 8 Tf ( since) Tj T* 0 Tw 2.721815 Tw /F5 8 Tf (bool) Tj /F1 8 Tf ( is a subclass of ) Tj /F5 8 Tf (int) Tj /F1 8 Tf (. However, ) Tj /F5 8 Tf (issubclass\(unicode, str\)) Tj /F1 8 Tf ( is ) Tj /F5 8 Tf (False) Tj /F1 8 Tf ( since) Tj T* 0 Tw /F5 8 Tf (unicode) Tj /F1 8 Tf ( is not a subclass of ) Tj /F5 8 Tf (str) Tj /F1 8 Tf ( \(they only share a common ancestor, ) Tj /F5 8 Tf (basestring) Tj /F1 8 Tf (\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 149.3367 cm
Q
q
1 0 0 1 70.4315 149.3367 cm
Q
q
1 0 0 1 70.4315 149.3367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (83) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R356': class PDFStream 
356 0 obj
% page stream
<< /Length 5043 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 594.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 24.4 re B*
Q
q
BT 1 0 0 1 10 5.784 Tm 14.4 TL /F1 12 Tf .12549 .262745 .360784 rg (Multiple Inheritance) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 564.5367 cm
q
BT 1 0 0 1 0 18.256 Tm .962398 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python supports a limited form of multiple inheritance as well. A class definition with multiple base) Tj T* 0 Tw (classes looks like this:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 471.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (DerivedClassName) Tj /F5 8 Tf 0 0 0 rg (\() Tj (Base1) Tj (,) Tj ( ) Tj (Base2) Tj (,) Tj ( ) Tj (Base3) Tj (\):) Tj  T* (    ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (statement) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf .188235 .188235 .188235 rg (>) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* (    ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (statement) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (N) Tj .188235 .188235 .188235 rg (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 427.7367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.568248 Tw 12 TL /F1 8 Tf 0 0 0 rg (For old-style classes, the only rule is depth-first, left-to-right. Thus, if an attribute is not found in) Tj T* 0 Tw .531712 Tw /F5 8 Tf (DerivedClassName) Tj /F1 8 Tf (, it is searched in ) Tj /F5 8 Tf (Base1) Tj /F1 8 Tf (, then \(recursively\) in the base classes of ) Tj /F5 8 Tf (Base1) Tj /F1 8 Tf (, and) Tj T* 0 Tw (only if it is not found there, it is searched in ) Tj /F5 8 Tf (Base2) Tj /F1 8 Tf (, and so on.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 361.7367 cm
q
BT 1 0 0 1 0 54.256 Tm .486248 Tw 12 TL /F1 8 Tf 0 0 0 rg (\(To some people breadth first --- searching ) Tj /F5 8 Tf (Base2) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (Base3) Tj /F1 8 Tf ( before the base classes of ) Tj /F5 8 Tf (Base1) Tj /F1 8 Tf ( ---) Tj T* 0 Tw -0.070252 Tw (looks more natural. However, this would require you to know whether a particular attribute of ) Tj /F5 8 Tf (Base1) Tj /F1 8 Tf ( is) Tj T* 0 Tw .082887 Tw (actually defined in ) Tj /F5 8 Tf (Base1) Tj /F1 8 Tf ( or in one of its base classes before you can figure out the consequences of) Tj T* 0 Tw .516531 Tw (a name conflict with an attribute of ) Tj /F5 8 Tf (Base2) Tj /F1 8 Tf (. The depth-first rule makes no differences between direct) Tj T* 0 Tw (and inherited attributes of ) Tj /F5 8 Tf (Base1) Tj /F1 8 Tf (.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 319.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .350331 Tw 12 TL /F1 8 Tf 0 0 0 rg (For ) Tj /F4 8 Tf (new-style class) Tj /F1 8 Tf (es, the method resolution order changes dynamically to support cooperative calls) Tj T* 0 Tw -0.412336 Tw (to ) Tj /F5 8 Tf (super\(\)) Tj /F1 8 Tf (. This approach is known in some other multiple-inheritance languages as call-next-method) Tj T* 0 Tw (and is more powerful than the super call found in single-inheritance languages.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 193.7367 cm
q
BT 1 0 0 1 0 114.256 Tm -0.393541 Tw 12 TL /F1 8 Tf 0 0 0 rg (With new-style classes, dynamic ordering is necessary because all cases of multiple inheritance exhibit) Tj T* 0 Tw .760748 Tw (one or more diamond relationships \(where one at least one of the parent classes can be accessed) Tj T* 0 Tw 1.043382 Tw (through multiple paths from the bottommost class\). For example, all new-style classes inherit from) Tj T* 0 Tw .245248 Tw /F5 8 Tf (object) Tj /F1 8 Tf (, so any case of multiple inheritance provides more than one path to reach ) Tj /F5 8 Tf (object) Tj /F1 8 Tf (. To keep) Tj T* 0 Tw .553426 Tw (the base classes from being accessed more than once, the dynamic algorithm linearizes the search) Tj T* 0 Tw .511748 Tw (order in a way that preserves the left-to-right ordering specified in each class, that calls each parent) Tj T* 0 Tw 1.640798 Tw (only once, and that is monotonic \(meaning that a class can be subclassed without affecting the) Tj T* 0 Tw .266569 Tw (precedence order of its parents\). Taken together, these properties make it possible to design reliable) Tj T* 0 Tw 1.220397 Tw (and extensible classes with multiple inheritance. For more detail, see ) Tj 0 0 .501961 rg (http://www.python.org/down\255) Tj T* 0 Tw (load/releases/2.3/mro/) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 193.7367 cm
Q
q
1 0 0 1 70.4315 193.7367 cm
Q
q
1 0 0 1 70.4315 193.7367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (84) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R357': class PDFStream 
357 0 obj
% page stream
<< /Length 5763 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Private Variables) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 490.1367 cm
q
BT 1 0 0 1 0 90.256 Tm .910131 Tw 12 TL /F1 8 Tf 0 0 0 rg (There is limited support for class-private identifiers. Any identifier of the form ) Tj /F5 8 Tf (__spam) Tj /F1 8 Tf ( \(at least two) Tj T* 0 Tw .028724 Tw (leading underscores, at most one trailing underscore\) is textually replaced with ) Tj /F5 8 Tf (_classname__spam) Tj /F1 8 Tf (,) Tj T* 0 Tw .934459 Tw (where ) Tj /F5 8 Tf (classname) Tj /F1 8 Tf ( is the current class name with leading underscore\(s\) stripped. This mangling is) Tj T* 0 Tw .218586 Tw (done without regard to the syntactic position of the identifier, so it can be used to define class-private) Tj T* 0 Tw 1.758459 Tw (instance and class variables, methods, variables stored in globals, and even variables stored in) Tj T* 0 Tw -0.076535 Tw (instances. private to this class on instances of ) Tj /F4 8 Tf (other) Tj /F1 8 Tf ( classes. Truncation may occur when the mangled) Tj T* 0 Tw .066748 Tw (name would be longer than 255 characters. Outside classes, or when the class name consists of only) Tj T* 0 Tw (underscores, no mangling occurs.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 400.1367 cm
q
BT 1 0 0 1 0 78.256 Tm .967198 Tw 12 TL /F1 8 Tf 0 0 0 rg (Name mangling is intended to give classes an easy way to define "private" instance variables and) Tj T* 0 Tw -0.176859 Tw (methods, without having to worry about instance variables defined by derived classes, or mucking with) Tj T* 0 Tw -0.322752 Tw (instance variables by code outside the class. Note that the mangling rules are designed mostly to avoid) Tj T* 0 Tw .796469 Tw (accidents; it still is possible for a determined soul to access or modify a variable that is considered) Tj T* 0 Tw .831748 Tw (private. This can even be useful in special circumstances, such as in the debugger, and that's one) Tj T* 0 Tw .133109 Tw (reason why this loophole is not closed. \(Buglet: derivation of a class with the same name as the base) Tj T* 0 Tw (class makes use of private variables of the base class possible.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 346.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .606131 Tw 12 TL /F1 8 Tf 0 0 0 rg (Notice that code passed to ) Tj /F5 8 Tf (exec) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (eval\(\)) Tj /F1 8 Tf ( or ) Tj /F5 8 Tf (execfile\(\)) Tj /F1 8 Tf ( does not consider the classname of the) Tj T* 0 Tw -0.126107 Tw (invoking class to be the current class; this is similar to the effect of the ) Tj /F5 8 Tf (global) Tj /F1 8 Tf ( statement, the effect of) Tj T* 0 Tw 1.189998 Tw (which is likewise restricted to code that is byte-compiled together. The same restriction applies to) Tj T* 0 Tw /F5 8 Tf (getattr\(\)) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (setattr\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (delattr\(\)) Tj /F1 8 Tf (, as well as when referencing ) Tj /F5 8 Tf (__dict__) Tj /F1 8 Tf ( directly.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 346.1367 cm
Q
q
1 0 0 1 70.4315 346.1367 cm
Q
q
1 0 0 1 70.4315 346.1367 cm
Q
q
1 0 0 1 70.4315 313.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Odds and Ends) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 283.3367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.225557 Tw 12 TL /F1 8 Tf 0 0 0 rg (Sometimes it is useful to have a data type similar to the Pascal "record" or C "struct", bundling together) Tj T* 0 Tw (a few named data items. An empty class definition will do nicely:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 154.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (Employee) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj /F5 8 Tf 0 0 0 rg  T*  T* (john) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (Employee) Tj (\(\)) Tj ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Create an empty employee record) Tj /F5 8 Tf 0 0 0 rg  T*  T* /F7 8 Tf .501961 .501961 .501961 rg (# Fill the fields of the record) Tj /F5 8 Tf 0 0 0 rg  T* (john) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (name) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('John Doe') Tj 0 0 0 rg  T* (john) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (dept) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('computer lab') Tj 0 0 0 rg  T* (john) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (salary) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1000) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 110.5367 cm
q
BT 1 0 0 1 0 30.256 Tm .402887 Tw 12 TL /F1 8 Tf 0 0 0 rg (A piece of Python code that expects a particular abstract data type can often be passed a class that) Tj T* 0 Tw -0.095767 Tw (emulates the methods of that data type instead. For instance, if you have a function that formats some) Tj T* 0 Tw .643998 Tw (data from a file object, you can define a class with methods ) Tj /F5 8 Tf (read\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (readline\(\)) Tj /F1 8 Tf ( that get the) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (85) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R358': class PDFStream 
358 0 obj
% page stream
<< /Length 4909 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (data from a string buffer instead, and pass it as an argument.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .025426 Tw 12 TL /F1 8 Tf 0 0 0 rg (Instance method objects have attributes, too: ) Tj /F5 8 Tf (m.im_self) Tj /F1 8 Tf ( is the instance object with the method ) Tj /F5 8 Tf (m\(\)) Tj /F1 8 Tf (,) Tj T* 0 Tw (and ) Tj /F5 8 Tf (m.im_func) Tj /F1 8 Tf ( is the function object corresponding to the method.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
Q
q
1 0 0 1 70.4315 566.9367 cm
Q
q
1 0 0 1 70.4315 566.9367 cm
Q
q
1 0 0 1 70.4315 534.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Exceptions Are Classes Too) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 504.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.193335 Tw 12 TL /F1 8 Tf 0 0 0 rg (User-defined exceptions are identified by classes as well. Using this mechanism it is possible to create) Tj T* 0 Tw (extensible hierarchies of exceptions.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 486.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (There are two new valid \(semantic\) forms for the raise statement:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 429.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (Class) Tj (,) Tj ( ) Tj (instance) Tj  T*  T* /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (instance) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 397.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .516419 Tw 12 TL /F1 8 Tf 0 0 0 rg (In the first form, ) Tj /F5 8 Tf (instance) Tj /F1 8 Tf ( must be an instance of ) Tj /F5 8 Tf (Class) Tj /F1 8 Tf ( or of a class derived from it. The second) Tj T* 0 Tw (form is a shorthand for:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 364.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (instance) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (__class__) Tj (,) Tj ( ) Tj (instance) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 320.5367 cm
q
BT 1 0 0 1 0 30.256 Tm .898998 Tw 12 TL /F1 8 Tf 0 0 0 rg (A class in an except clause is compatible with an exception if it is the same class or a base class) Tj T* 0 Tw -0.088668 Tw (thereof \(but not the other way around --- an except clause listing a derived class is not compatible with) Tj T* 0 Tw (a base class\). For example, the following code will print B, C, D in that order:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 107.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 204 re B*
Q
q
BT 1 0 0 1 0 186.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (B) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (C) Tj /F5 8 Tf 0 0 0 rg (\() Tj (B) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (D) Tj /F5 8 Tf 0 0 0 rg (\() Tj (C) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (pass) Tj /F5 8 Tf 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (c) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj ([) Tj (B) Tj (,) Tj ( ) Tj (C) Tj (,) Tj ( ) Tj (D) Tj (]:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (try) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (c) Tj (\(\)) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (D) Tj (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("D") Tj 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (C) Tj (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("C") Tj 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (B) Tj (:) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("B") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (86) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R359': class PDFStream 
359 0 obj
% page stream
<< /Length 6044 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .353051 Tw 12 TL /F1 8 Tf 0 0 0 rg (Note that if the except clauses were reversed \(with ) Tj /F5 8 Tf (except B) Tj /F1 8 Tf ( first\), it would have printed B, B, B ---) Tj T* 0 Tw (the first matching except clause is triggered.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 542.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .206131 Tw 12 TL /F1 8 Tf 0 0 0 rg (When an error message is printed for an unhandled exception, the exception's class name is printed,) Tj T* 0 Tw 1.107057 Tw (then a colon and a space, and finally the instance converted to a string using the built-in function) Tj T* 0 Tw /F5 8 Tf (str\(\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 542.9367 cm
Q
q
1 0 0 1 70.4315 542.9367 cm
Q
q
1 0 0 1 70.4315 542.9367 cm
Q
q
1 0 0 1 70.4315 510.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Iterators) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.555248 Tw 12 TL /F1 8 Tf 0 0 0 rg (By now you have probably noticed that most container objects can be looped over using a ) Tj /F5 8 Tf (for) Tj T* 0 Tw /F1 8 Tf (statement:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 339.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (element) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (element) Tj  T* /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (element) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (element) Tj  T* /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (key) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj ({) Tj .729412 .129412 .129412 rg ('one') Tj 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('two') Tj 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (}:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (key) Tj  T* /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (char) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .729412 .129412 .129412 rg ("123") Tj 0 0 0 rg (:) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (char) Tj  T* /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ("myfile.txt") Tj 0 0 0 rg (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 271.3367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.433752 Tw 12 TL /F1 8 Tf 0 0 0 rg (This style of access is clear, concise, and convenient. The use of iterators pervades and unifies Python.) Tj T* 0 Tw .331465 Tw (Behind the scenes, the ) Tj /F5 8 Tf (for) Tj /F1 8 Tf ( statement calls ) Tj /F5 8 Tf (iter\(\)) Tj /F1 8 Tf ( on the container object. The function returns an) Tj T* 0 Tw .877065 Tw (iterator object that defines the method ) Tj /F5 8 Tf (next\(\)) Tj /F1 8 Tf ( which accesses elements in the container one at a) Tj T* 0 Tw .105426 Tw (time. When there are no more elements, ) Tj /F5 8 Tf (next\(\)) Tj /F1 8 Tf ( raises a ) Tj /F5 8 Tf (StopIteration) Tj /F1 8 Tf ( exception which tells the) Tj T* 0 Tw /F5 8 Tf (for) Tj /F1 8 Tf ( loop to terminate. This example shows how it all works:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 106.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 156 re B*
Q
q
BT 1 0 0 1 0 138.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (s) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('abc') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (it) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (iter) Tj 0 0 0 rg (\() Tj (s) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (it) Tj  T* .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (iterator) Tj ( ) Tj 0 .439216 .12549 rg (object) Tj 0 0 0 rg ( ) Tj (at) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (x00A1DB50) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (it) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (next) Tj (\(\)) Tj  T* .729412 .129412 .129412 rg ('a') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (it) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (next) Tj (\(\)) Tj  T* .729412 .129412 .129412 rg ('b') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (it) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (next) Tj (\(\)) Tj  T* .729412 .129412 .129412 rg ('c') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (it) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (next) Tj (\(\)) Tj  T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (87) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R360': class PDFStream 
360 0 obj
% page stream
<< /Length 6490 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .941176 0 0 rg (?) Tj 0 0 0 rg  T* (    ) Tj (it) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (next) Tj (\(\)) Tj  T* /F6 8 Tf .941176 0 0 rg (StopIteration) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 504.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.066748 Tw 12 TL /F1 8 Tf 0 0 0 rg (Having seen the mechanics behind the iterator protocol, it is easy to add iterator behavior to your) Tj T* 0 Tw .613065 Tw (classes. Define a ) Tj /F5 8 Tf (__iter__\(\)) Tj /F1 8 Tf ( method which returns an object with a ) Tj /F5 8 Tf (next\(\)) Tj /F1 8 Tf ( method. If the class) Tj T* 0 Tw (defines ) Tj /F5 8 Tf (next\(\)) Tj /F1 8 Tf (, then ) Tj /F5 8 Tf (__iter__\(\)) Tj /F1 8 Tf ( can just return ) Tj /F5 8 Tf (self) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 243.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 252 re B*
Q
q
BT 1 0 0 1 0 234.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (Reverse) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (    ) Tj .729412 .129412 .129412 rg ("Iterator for looping over a sequence backwards") Tj 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (data) Tj (\):) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (data) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (data) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (index) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (data) Tj (\)) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__iter__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (next) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (index) Tj ( ) Tj .188235 .188235 .188235 rg (==) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* (            ) Tj /F6 8 Tf 0 .501961 0 rg (raise) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .941176 0 0 rg (StopIteration) Tj /F5 8 Tf 0 0 0 rg  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (index) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (index) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (data) Tj ([) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (index) Tj (]) Tj  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (char) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (Reverse) Tj (\() Tj .729412 .129412 .129412 rg ('spam') Tj 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (char) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (m) Tj  T* (a) Tj  T* (p) Tj  T* (s) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 235.3367 cm
Q
q
1 0 0 1 70.4315 235.3367 cm
Q
q
1 0 0 1 70.4315 235.3367 cm
Q
q
1 0 0 1 70.4315 202.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Generators) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 148.5367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.016269 Tw 12 TL /F4 8 Tf 0 0 0 rg (Generator) Tj /F1 8 Tf (s are a simple and powerful tool for creating iterators. They are written like regular functions) Tj T* 0 Tw .961748 Tw (but use the ) Tj /F5 8 Tf (yield) Tj /F1 8 Tf ( statement whenever they want to return data. Each time ) Tj /F5 8 Tf (next\(\)) Tj /F1 8 Tf ( is called, the) Tj T* 0 Tw .843465 Tw (generator resumes where it left-off \(it remembers all the data values and which statement was last) Tj T* 0 Tw (executed\). An example shows that generators can be trivially easy to create:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 103.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (reverse) Tj /F5 8 Tf 0 0 0 rg (\() Tj (data) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (index) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (data) Tj (\)) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (88) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R361': class PDFStream 
361 0 obj
% page stream
<< /Length 6480 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 488.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (        ) Tj /F6 8 Tf 0 .501961 0 rg (yield) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (data) Tj ([) Tj (index) Tj (]) Tj  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (char) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (reverse) Tj (\() Tj .729412 .129412 .129412 rg ('golf') Tj 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (char) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* (f) Tj  T* (l) Tj  T* (o) Tj  T* (g) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 444.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.095296 Tw 12 TL /F1 8 Tf 0 0 0 rg (Anything that can be done with generators can also be done with class based iterators as described in) Tj T* 0 Tw 1.698767 Tw (the previous section. What makes generators so compact is that the ) Tj /F5 8 Tf (__iter__\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (next\(\)) Tj T* 0 Tw /F1 8 Tf (methods are created automatically.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 402.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .678569 Tw 12 TL /F1 8 Tf 0 0 0 rg (Another key feature is that the local variables and execution state are automatically saved between) Tj T* 0 Tw .678248 Tw (calls. This made the function easier to write and much more clear than an approach using instance) Tj T* 0 Tw (variables like ) Tj /F5 8 Tf (self.index) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (self.data) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 360.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .423075 Tw 12 TL /F1 8 Tf 0 0 0 rg (In addition to automatic method creation and saving program state, when generators terminate, they) Tj T* 0 Tw .447664 Tw (automatically raise ) Tj /F5 8 Tf (StopIteration) Tj /F1 8 Tf (. In combination, these features make it easy to create iterators) Tj T* 0 Tw (with no more effort than writing a regular function.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 360.1367 cm
Q
q
1 0 0 1 70.4315 360.1367 cm
Q
q
1 0 0 1 70.4315 360.1367 cm
Q
q
1 0 0 1 70.4315 327.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Generator Expressions) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 261.3367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.074402 Tw 12 TL /F1 8 Tf 0 0 0 rg (Some simple generators can be coded succinctly as expressions using a syntax similar to list compre\255) Tj T* 0 Tw 1.199664 Tw (hensions but with parentheses instead of brackets. These expressions are designed for situations) Tj T* 0 Tw .997426 Tw (where the generator is used right away by an enclosing function. Generator expressions are more) Tj T* 0 Tw .782665 Tw (compact but less versatile than full generator definitions and tend to be more memory friendly than) Tj T* 0 Tw (equivalent list comprehensions.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 243.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Examples:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 102.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (sum) Tj 0 0 0 rg (\() Tj (i) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (i) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj (                 ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# sum of squares) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (285) Tj /F5 8 Tf 0 0 0 rg  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (xvec) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (20) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (30) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (yvec) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (sum) Tj 0 0 0 rg (\() Tj (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (y) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj (,) Tj (y) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (zip) Tj 0 0 0 rg (\() Tj (xvec) Tj (,) Tj ( ) Tj (yvec) Tj (\)\)) Tj (         ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# dot product) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (260) Tj /F5 8 Tf 0 0 0 rg  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (math) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (pi) Tj (,) Tj ( ) Tj (sin) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (sine_table) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dict) Tj 0 0 0 rg (\(\() Tj (x) Tj (,) Tj ( ) Tj (sin) Tj (\() Tj (x) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg (pi) Tj .188235 .188235 .188235 rg (/) Tj /F6 8 Tf .376471 0 .878431 rg (180) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (x) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (91) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (89) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R362': class PDFStream 
362 0 obj
% page stream
<< /Length 7372 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 506.6658 cm
q
q
.939989 0 0 .939989 0 0 cm
q
1 0 0 1 6.4 6.808587 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 381.6 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (unique_words) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (set) Tj (\() Tj (word) Tj (  ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (page) Tj (  ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (word) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (line) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (split) Tj (\(\)\)) Tj  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (valedictorian) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (max) Tj 0 0 0 rg (\(\() Tj (student) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (gpa) Tj (,) Tj ( ) Tj (student) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (name) Tj (\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (student) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (graduates) Tj (\)) Tj  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (data) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('golf') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (list) Tj 0 0 0 rg (\() Tj (data) Tj ([) Tj (i) Tj (]) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (data) Tj (\)) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('f') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('l') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('o') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('g') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 486.6658 cm
q
BT 1 0 0 1 0 6.256 Tm 161.938 0 Td 12 TL /F1 8 Tf .545098 0 0 rg (Footnotes) Tj T* -161.938 0 Td ET
Q
Q
q
1 0 0 1 70.4315 486.6658 cm
Q
q
1 0 0 1 70.4315 420.6658 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 51 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 .501961 rg (1) Tj T* ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 54.256 Tm 1.60686 Tw 12 TL /F1 8 Tf 0 0 0 rg (Except for one thing. Module objects have a secret read-only attribute) Tj T* 0 Tw 2.263622 Tw (called ) Tj /F5 8 Tf (__dict__) Tj /F1 8 Tf ( which returns the dictionary used to implement the) Tj T* 0 Tw .134236 Tw (module's namespace; the name ) Tj /F5 8 Tf (__dict__) Tj /F1 8 Tf ( is an attribute but not a global) Tj T* 0 Tw .453844 Tw (name. Obviously, using this violates the abstraction of namespace imple\255) Tj T* 0 Tw (mentation, and should be restricted to things like post-mortem debuggers.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 420.6658 cm
Q
q
1 0 0 1 70.4315 420.6658 cm
Q
q
1 0 0 1 70.4315 420.6658 cm
Q
q
1 0 0 1 70.4315 385.4658 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Brief Tour of the Standard Library) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 379.4658 cm
Q
q
1 0 0 1 70.4315 379.4658 cm
Q
q
1 0 0 1 70.4315 379.4658 cm
Q
q
1 0 0 1 70.4315 346.6658 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Operating System Interface) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 328.6658 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (os) Tj /F1 8 Tf ( module provides dozens of functions for interacting with the operating system:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 235.8658 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (os) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (os) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (system) Tj (\() Tj .729412 .129412 .129412 rg ('time 0:02') Tj 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (os) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (getcwd) Tj (\(\)) Tj (      ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Return the current working directory) Tj /F5 8 Tf 0 0 0 rg  T* .729412 .129412 .129412 rg ('C:) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\\\) Tj /F5 8 Tf .729412 .129412 .129412 rg (Python26') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (os) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (chdir) Tj (\() Tj .729412 .129412 .129412 rg ('/server/accesslogs') Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 203.8658 cm
q
BT 1 0 0 1 0 18.256 Tm -0.089557 Tw 12 TL /F1 8 Tf 0 0 0 rg (Be sure to use the ) Tj /F5 8 Tf (import os) Tj /F1 8 Tf ( style instead of ) Tj /F5 8 Tf (from os import *) Tj /F1 8 Tf (. This will keep ) Tj /F5 8 Tf (os.open\(\)) Tj /F1 8 Tf ( from) Tj T* 0 Tw (shadowing the builtin ) Tj /F5 8 Tf (open\(\)) Tj /F1 8 Tf ( function which operates much differently.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 203.8658 cm
Q
q
1 0 0 1 70.4315 173.8658 cm
q
BT 1 0 0 1 0 18.256 Tm .109065 Tw 12 TL /F1 8 Tf 0 0 0 rg (The builtin ) Tj /F5 8 Tf (dir\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (help\(\)) Tj /F1 8 Tf ( functions are useful as interactive aids for working with large modules) Tj T* 0 Tw (like ) Tj /F5 8 Tf (os) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 105.0658 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (os) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dir) Tj 0 0 0 rg (\() Tj (os) Tj (\)) Tj  T* .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (returns) Tj ( ) Tj (a) Tj ( ) Tj 0 .439216 .12549 rg (list) Tj 0 0 0 rg ( ) Tj (of) Tj ( ) Tj (all) Tj ( ) Tj (module) Tj ( ) Tj (functions) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (help) Tj (\() Tj (os) Tj (\)) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (90) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R363': class PDFStream 
363 0 obj
% page stream
<< /Length 7349 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (returns) Tj ( ) Tj (an) Tj ( ) Tj (extensive) Tj ( ) Tj (manual) Tj ( ) Tj (page) Tj ( ) Tj (created) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (the) Tj /F5 8 Tf .941176 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (module) Tj /F5 8 Tf .941176 0 0 rg (') Tj /F6 8 Tf .054902 .517647 .709804 rg (s) Tj /F5 8 Tf .941176 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (docstrings) Tj /F5 8 Tf .941176 0 0 rg (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 552.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .560855 Tw 12 TL /F1 8 Tf 0 0 0 rg (For daily file and directory management tasks, the ) Tj /F5 8 Tf (shutil) Tj /F1 8 Tf ( module provides a higher level interface) Tj T* 0 Tw (that is easier to use:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 495.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (shutil) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (shutil) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (copyfile) Tj (\() Tj .729412 .129412 .129412 rg ('data.db') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('archive.db') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (shutil) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (move) Tj (\() Tj .729412 .129412 .129412 rg ('/build/executables') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('installdir') Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 487.3367 cm
Q
q
1 0 0 1 70.4315 487.3367 cm
Q
q
1 0 0 1 70.4315 487.3367 cm
Q
q
1 0 0 1 70.4315 454.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (File Wildcards) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 436.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (glob) Tj /F1 8 Tf ( module provides a function for making file lists from directory wildcard searches:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 379.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (glob) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (glob) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (glob) Tj (\() Tj .729412 .129412 .129412 rg ('*.py') Tj 0 0 0 rg (\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('primes.py') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('random.py') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('quote.py') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 371.7367 cm
Q
q
1 0 0 1 70.4315 371.7367 cm
Q
q
1 0 0 1 70.4315 371.7367 cm
Q
q
1 0 0 1 70.4315 338.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Command Line Arguments) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 296.9367 cm
q
BT 1 0 0 1 0 30.256 Tm .39169 Tw 12 TL /F1 8 Tf 0 0 0 rg (Common utility scripts often need to process command line arguments. These arguments are stored) Tj T* 0 Tw 1.155748 Tw (in the ) Tj /F5 8 Tf (sys) Tj /F1 8 Tf ( module's ) Tj /F4 8 Tf (argv) Tj /F1 8 Tf ( attribute as a list. For instance the following output results from running) Tj T* 0 Tw /F5 8 Tf (python demo.py one two three) Tj /F1 8 Tf ( at the command line:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 240.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (sys) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (argv) Tj  T* ([) Tj .729412 .129412 .129412 rg ('demo.py') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('one') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('two') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('three') Tj 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 208.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .146151 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (getopt) Tj /F1 8 Tf ( module processes ) Tj /F4 8 Tf (sys.argv) Tj /F1 8 Tf ( using the conventions of the Unix ) Tj /F5 8 Tf (getopt\(\)) Tj /F1 8 Tf ( function. More) Tj T* 0 Tw (powerful and flexible command line processing is provided by the ) Tj /F5 8 Tf (optparse) Tj /F1 8 Tf ( module.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 208.1367 cm
Q
q
1 0 0 1 70.4315 208.1367 cm
Q
q
1 0 0 1 70.4315 208.1367 cm
Q
q
1 0 0 1 70.4315 175.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Error Output Redirection and Program Termination) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 145.3367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.528748 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (sys) Tj /F1 8 Tf ( module also has attributes for ) Tj /F4 8 Tf (stdin) Tj /F1 8 Tf (, ) Tj /F4 8 Tf (stdout) Tj /F1 8 Tf (, and ) Tj /F4 8 Tf (stderr) Tj /F1 8 Tf (. The latter is useful for emitting) Tj T* 0 Tw (warnings and error messages to make them visible even when ) Tj /F4 8 Tf (stdout) Tj /F1 8 Tf ( has been redirected:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 100.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (sys) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (stderr) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write) Tj (\() Tj .729412 .129412 .129412 rg ('Warning, log file not found starting a new one) Tj /F6 8 Tf .376471 .376471 .376471 rg (\\n) Tj /F5 8 Tf .729412 .129412 .129412 rg (') Tj 0 0 0 rg (\)) Tj  T* /F6 8 Tf .941176 0 0 rg (Warning) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (log) Tj ( ) Tj 0 .439216 .12549 rg (file) Tj 0 0 0 rg ( ) Tj /F6 8 Tf (not) Tj /F5 8 Tf ( ) Tj (found) Tj ( ) Tj (starting) Tj ( ) Tj (a) Tj ( ) Tj (new) Tj ( ) Tj (one) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (91) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R364': class PDFStream 
364 0 obj
% page stream
<< /Length 7637 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The most direct way to terminate a script is to use ) Tj /F5 8 Tf (sys.exit\(\)) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 596.9367 cm
Q
q
1 0 0 1 70.4315 596.9367 cm
Q
q
1 0 0 1 70.4315 596.9367 cm
Q
q
1 0 0 1 70.4315 564.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (String Pattern Matching) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 534.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.038464 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (re) Tj /F1 8 Tf ( module provides regular expression tools for advanced string processing. For complex match\255) Tj T* 0 Tw (ing and manipulation, regular expressions offer succinct, optimized solutions:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 453.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (re) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (re) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (findall) Tj (\() Tj .729412 .129412 .129412 rg (r'\\bf[a-z]*') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('which foot or hand fell fastest') Tj 0 0 0 rg (\)) Tj  T* ([) Tj .729412 .129412 .129412 rg ('foot') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('fell') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('fastest') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (re) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sub) Tj (\() Tj .729412 .129412 .129412 rg (r'\(\\b[a-z]+\) \\1') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg (r'\\1') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('cat in the the hat') Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('cat in the hat') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 421.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .711712 Tw 12 TL /F1 8 Tf 0 0 0 rg (When only simple capabilities are needed, string methods are preferred because they are easier to) Tj T* 0 Tw (read and debug:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 376.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('tea for too') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (replace) Tj (\() Tj .729412 .129412 .129412 rg ('too') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('two') Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('tea for two') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 368.5367 cm
Q
q
1 0 0 1 70.4315 368.5367 cm
Q
q
1 0 0 1 70.4315 368.5367 cm
Q
q
1 0 0 1 70.4315 335.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Mathematics) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 317.7367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (math) Tj /F1 8 Tf ( module gives access to the underlying C library functions for floating point math:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 236.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (math) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (math) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (cos) Tj (\() Tj (math) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pi) Tj ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4.0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0.70710678118654757) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (math) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (log) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1024) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (10.0) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 216.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (random) Tj /F1 8 Tf ( module provides tools for making random selections:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 100.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (random) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (random) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (choice) Tj (\([) Tj .729412 .129412 .129412 rg ('apple') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('pear') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('banana') Tj 0 0 0 rg (]\)) Tj  T* .729412 .129412 .129412 rg ('apple') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (random) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sample) Tj (\() Tj 0 .439216 .12549 rg (xrange) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (   ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# sampling without replacement) Tj /F5 8 Tf 0 0 0 rg  T* ([) Tj /F6 8 Tf .376471 0 .878431 rg (30) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (83) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (81) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (41) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (50) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (18) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (33) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (random) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (random) Tj (\(\)) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# random float) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0.17970987693706186) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (random) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (randrange) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# random integer chosen from range\(6\)) Tj /F5 8 Tf 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (92) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R365': class PDFStream 
365 0 obj
% page stream
<< /Length 6940 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.992 Tm 12 TL /F6 8 Tf .376471 0 .878431 rg (4) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 576.1367 cm
Q
q
1 0 0 1 70.4315 576.1367 cm
Q
q
1 0 0 1 70.4315 576.1367 cm
Q
q
1 0 0 1 70.4315 543.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Internet Access) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 513.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .486131 Tw 12 TL /F1 8 Tf 0 0 0 rg (There are a number of modules for accessing the internet and processing internet protocols. Two of) Tj T* 0 Tw (the simplest are ) Tj /F5 8 Tf (urllib2) Tj /F1 8 Tf ( for retrieving data from urls and ) Tj /F5 8 Tf (smtplib) Tj /F1 8 Tf ( for sending mail:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 317.5414 cm
q
q
.916969 0 0 .916969 0 0 cm
q
1 0 0 1 6.4 6.979514 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 391.2 204 re B*
Q
q
BT 1 0 0 1 0 186.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (urllib2) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (urllib2) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (urlopen) Tj (\() Tj .729412 .129412 .129412 rg ('http://tycho.usno.navy.mil/cgi-bin/timer.pl') Tj 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('EST') Tj 0 0 0 rg ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (line) Tj ( ) Tj /F6 8 Tf (or) Tj /F5 8 Tf ( ) Tj .729412 .129412 .129412 rg ('EDT') Tj 0 0 0 rg ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (line) Tj (:) Tj (  ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# look for Eastern Time) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (         ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (line) Tj  T*  T* .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (BR) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg (Nov) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (25) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (09) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (43) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (32) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (PM) Tj ( ) Tj (EST) Tj  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (smtplib) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (server) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (smtplib) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (SMTP) Tj (\() Tj .729412 .129412 .129412 rg ('localhost') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (server) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (sendmail) Tj (\() Tj .729412 .129412 .129412 rg ('soothsayer@example.org') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('jcaesar@example.org') Tj 0 0 0 rg (,) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("""To: jcaesar@example.org) Tj T* (... From: soothsayer@example.org) Tj T* (...) Tj T* (... Beware the Ides of March.) Tj T* (... """) Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (server) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (quit) Tj (\(\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 297.5414 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (\(Note that the second example needs a mailserver running on localhost.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 297.5414 cm
Q
q
1 0 0 1 70.4315 297.5414 cm
Q
q
1 0 0 1 70.4315 297.5414 cm
Q
q
1 0 0 1 70.4315 264.7414 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Dates and Times) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 210.7414 cm
q
BT 1 0 0 1 0 42.256 Tm -0.061431 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (datetime) Tj /F1 8 Tf ( module supplies classes for manipulating dates and times in both simple and complex) Tj T* 0 Tw 1.257331 Tw (ways. While date and time arithmetic is supported, the focus of the implementation is on efficient) Tj T* 0 Tw .218767 Tw (member extraction for output formatting and manipulation. The module also supports objects that are) Tj T* 0 Tw (timezone aware.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 105.9414 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F7 8 Tf .501961 .501961 .501961 rg (# dates are easily constructed and formatted) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (datetime) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (date) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (now) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (date) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (today) Tj (\(\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (now) Tj  T* (datetime) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (date) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2003) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (12) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (now) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (strftime) Tj (\() Tj .729412 .129412 .129412 rg ("%m-) Tj /F6 8 Tf .733333 .4 .533333 rg (%d) Tj /F5 8 Tf .729412 .129412 .129412 rg (-%y. ) Tj /F6 8 Tf .733333 .4 .533333 rg (%d) Tj /F5 8 Tf .729412 .129412 .129412 rg ( %b %Y is a %A on the ) Tj /F6 8 Tf .733333 .4 .533333 rg (%d) Tj /F5 8 Tf .729412 .129412 .129412 rg ( day of %B.") Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('12-02-03. 02 Dec 2003 is a Tuesday on the 02 day of December.') Tj 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (93) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R366': class PDFStream 
366 0 obj
% page stream
<< /Length 6003 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 524.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (# dates support calendar arithmetic) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (birthday) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (date) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1964) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (31) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (age) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (now) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg ( ) Tj (birthday) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (age) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (days) Tj  T* /F6 8 Tf .376471 0 .878431 rg (14368) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 516.1367 cm
Q
q
1 0 0 1 70.4315 516.1367 cm
Q
q
1 0 0 1 70.4315 516.1367 cm
Q
q
1 0 0 1 70.4315 483.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Data Compression) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 453.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .084331 Tw 12 TL /F1 8 Tf 0 0 0 rg (Common data archiving and compression formats are directly supported by modules including: ) Tj /F5 8 Tf (zlib) Tj /F1 8 Tf (,) Tj T* 0 Tw /F5 8 Tf (gzip) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (bz2) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (zipfile) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (tarfile) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 300.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 144 re B*
Q
q
BT 1 0 0 1 0 126.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (zlib) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (s) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('witch which has which witches wrist watch') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (s) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (41) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (zlib) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (compress) Tj (\() Tj (s) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (t) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (37) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (zlib) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (decompress) Tj (\() Tj (t) Tj (\)) Tj  T* .729412 .129412 .129412 rg ('witch which has which witches wrist watch') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (zlib) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (crc32) Tj (\() Tj (s) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (226805979) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 292.5367 cm
Q
q
1 0 0 1 70.4315 292.5367 cm
Q
q
1 0 0 1 70.4315 292.5367 cm
Q
q
1 0 0 1 70.4315 259.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Performance Measurement) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 229.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.591717 Tw 12 TL /F1 8 Tf 0 0 0 rg (Some Python users develop a deep interest in knowing the relative performance of different approaches) Tj T* 0 Tw (to the same problem. Python provides a measurement tool that answers those questions immediately.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 187.7367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.676748 Tw 12 TL /F1 8 Tf 0 0 0 rg (For example, it may be tempting to use the tuple packing and unpacking feature instead of the) Tj T* 0 Tw 1.278906 Tw (traditional approach to swapping arguments. The ) Tj /F5 8 Tf (timeit) Tj /F1 8 Tf ( module quickly demonstrates a modest) Tj T* 0 Tw (performance advantage:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 106.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (timeit) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (Timer) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (Timer) Tj (\() Tj .729412 .129412 .129412 rg ('t=a; a=b; b=t') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('a=1; b=2') Tj 0 0 0 rg (\)) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (timeit) Tj (\(\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0.57535828626024577) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (Timer) Tj (\() Tj .729412 .129412 .129412 rg ('a,b = b,a') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('a=1; b=2') Tj 0 0 0 rg (\)) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (timeit) Tj (\(\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0.54962537085770791) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (94) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R367': class PDFStream 
367 0 obj
% page stream
<< /Length 6126 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .321331 Tw 12 TL /F1 8 Tf 0 0 0 rg (In contrast to ) Tj /F5 8 Tf (timeit) Tj /F1 8 Tf ('s fine level of granularity, the ) Tj /F5 8 Tf (profile) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (pstats) Tj /F1 8 Tf ( modules provide tools for) Tj T* 0 Tw (identifying time critical sections in larger blocks of code.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 584.9367 cm
Q
q
1 0 0 1 70.4315 584.9367 cm
Q
q
1 0 0 1 70.4315 584.9367 cm
Q
q
1 0 0 1 70.4315 552.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Quality Control) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 522.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .035998 Tw 12 TL /F1 8 Tf 0 0 0 rg (One approach for developing high quality software is to write tests for each function as it is developed) Tj T* 0 Tw (and to run those tests frequently during the development process.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 468.1367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.357598 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (doctest) Tj /F1 8 Tf ( module provides a tool for scanning a module and validating tests embedded in a) Tj T* 0 Tw .064855 Tw (program's docstrings. Test construction is as simple as cutting-and-pasting a typical call along with its) Tj T* 0 Tw -0.106402 Tw (results into the docstring. This improves the documentation by providing the user with an example and) Tj T* 0 Tw (it allows the doctest module to make sure the code remains true to the documentation:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 327.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (average) Tj /F5 8 Tf 0 0 0 rg (\() Tj (values) Tj (\):) Tj  T* (    ) Tj /F7 8 Tf .815686 .25098 .12549 rg ("""Computes the arithmetic mean of a list of numbers.) Tj T*  T* (    ) Tj (>) Tj (>) Tj (>) Tj ( print average\([20, 30, 70]\)) Tj T* (    40.0) Tj T* (    """) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (sum) Tj 0 0 0 rg (\() Tj (values) Tj (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0.0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (len) Tj 0 0 0 rg (\() Tj (values) Tj (\)) Tj  T*  T* /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (doctest) Tj /F5 8 Tf 0 0 0 rg  T* (doctest) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (testmod) Tj (\(\)) Tj (   ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# automatically validate the embedded tests) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 295.3367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.514252 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (unittest) Tj /F1 8 Tf ( module is not as effortless as the ) Tj /F5 8 Tf (doctest) Tj /F1 8 Tf ( module, but it allows a more comprehensive) Tj T* 0 Tw (set of tests to be maintained in a separate file:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 142.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 144 re B*
Q
q
BT 1 0 0 1 0 126.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (unittest) Tj /F5 8 Tf 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (TestStatisticalFunctions) Tj /F5 8 Tf 0 0 0 rg (\() Tj (unittest) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (TestCase) Tj (\):) Tj  T*  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (test_average) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (assertEqual) Tj (\() Tj (average) Tj (\([) Tj /F6 8 Tf .376471 0 .878431 rg (20) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (30) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (70) Tj /F5 8 Tf 0 0 0 rg (]\),) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (40.0) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (assertEqual) Tj (\() Tj 0 .439216 .12549 rg (round) Tj 0 0 0 rg (\() Tj (average) Tj (\([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (]\),) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\),) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4.3) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (assertRaises) Tj (\() Tj /F6 8 Tf .941176 0 0 rg (ZeroDivisionError) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (average) Tj (,) Tj ( ) Tj ([]\)) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (assertRaises) Tj (\() Tj /F6 8 Tf .941176 0 0 rg (TypeError) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj (average) Tj (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (20) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (30) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (70) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T*  T* (unittest) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (main) Tj (\(\)) Tj ( ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Calling from the command line invokes all tests) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 134.5367 cm
Q
q
1 0 0 1 70.4315 134.5367 cm
Q
q
1 0 0 1 70.4315 134.5367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (95) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R368': class PDFStream 
368 0 obj
% page stream
<< /Length 7062 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Batteries Included) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 562.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .399141 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python has a "batteries included" philosophy. This is best seen through the sophisticated and robust) Tj T* 0 Tw (capabilities of its larger packages. For example:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 560.1367 cm
Q
q
1 0 0 1 70.4315 524.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 24 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 30.256 Tm .082496 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (xmlrpclib) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (SimpleXMLRPCServer) Tj /F1 8 Tf ( modules make implementing remote procedure) Tj T* 0 Tw .475141 Tw (calls into an almost trivial task. Despite the modules names, no direct knowledge or handling) Tj T* 0 Tw (of XML is needed.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 464.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 48 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 54.256 Tm 1.402151 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (email) Tj /F1 8 Tf ( package is a library for managing email messages, including MIME and other) Tj T* 0 Tw .024361 Tw (RFC 2822-based message documents. Unlike ) Tj /F5 8 Tf (smtplib) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (poplib) Tj /F1 8 Tf ( which actually send and) Tj T* 0 Tw 2.664997 Tw (receive messages, the email package has a complete toolset for building or decoding) Tj T* 0 Tw .690219 Tw (complex message structures \(including attachments\) and for implementing internet encoding) Tj T* 0 Tw (and header protocols.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 416.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 36 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 42.256 Tm 1.065664 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (xml.dom) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (xml.sax) Tj /F1 8 Tf ( packages provide robust support for parsing this popular data) Tj T* 0 Tw .567075 Tw (interchange format. Likewise, the ) Tj /F5 8 Tf (csv) Tj /F1 8 Tf ( module supports direct reads and writes in a common) Tj T* 0 Tw 1.373997 Tw (database format. Together, these modules and packages greatly simplify data interchange) Tj T* 0 Tw (between python applications and other tools.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 392.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm 1.073815 Tw 12 TL /F1 8 Tf 0 0 0 rg (Internationalization is supported by a number of modules including ) Tj /F5 8 Tf (gettext) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (locale) Tj /F1 8 Tf (, and) Tj T* 0 Tw (the ) Tj /F5 8 Tf (codecs) Tj /F1 8 Tf ( package.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 392.1367 cm
Q
q
1 0 0 1 70.4315 392.1367 cm
Q
q
1 0 0 1 70.4315 392.1367 cm
Q
q
1 0 0 1 70.4315 356.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Brief Tour of the Standard Library -- Part II) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 326.9367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.429003 Tw 12 TL /F1 8 Tf 0 0 0 rg (This second tour covers more advanced modules that support professional programming needs. These) Tj T* 0 Tw (modules rarely occur in small scripts.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 326.9367 cm
Q
q
1 0 0 1 70.4315 326.9367 cm
Q
q
1 0 0 1 70.4315 326.9367 cm
Q
q
1 0 0 1 70.4315 294.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Output Formatting) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 264.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.312269 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (repr) Tj /F1 8 Tf ( module provides a version of ) Tj /F5 8 Tf (repr\(\)) Tj /F1 8 Tf ( customized for abbreviated displays of large or deeply) Tj T* 0 Tw (nested containers:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 207.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (repr) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (repr) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (repr) Tj (\() Tj (set) Tj (\() Tj .729412 .129412 .129412 rg ('supercalifragilisticexpialidocious') Tj 0 0 0 rg (\)\)) Tj  T* .729412 .129412 .129412 rg ("set\(['a', 'c', 'd', 'e', 'f', 'g', ...]\)") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 163.3367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.287075 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (pprint) Tj /F1 8 Tf ( module offers more sophisticated control over printing both built-in and user defined) Tj T* 0 Tw .069683 Tw (objects in a way that is readable by the interpreter. When the result is longer than one line, the "pretty) Tj T* 0 Tw (printer" adds line breaks and indentation to more clearly reveal data structure:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 106.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (pprint) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([[[[) Tj .729412 .129412 .129412 rg ('black') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('cyan') Tj 0 0 0 rg (],) Tj ( ) Tj .729412 .129412 .129412 rg ('white') Tj 0 0 0 rg (,) Tj ( ) Tj ([) Tj .729412 .129412 .129412 rg ('green') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('red') Tj 0 0 0 rg (]],) Tj ( ) Tj ([[) Tj .729412 .129412 .129412 rg ('magenta') Tj 0 0 0 rg (,) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj .729412 .129412 .129412 rg ('yellow') Tj 0 0 0 rg (],) Tj ( ) Tj .729412 .129412 .129412 rg ('blue') Tj 0 0 0 rg (]]]) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (96) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R369': class PDFStream 
369 0 obj
% page stream
<< /Length 6921 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 512.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (pprint) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (pprint) Tj (\() Tj (t) Tj (,) Tj ( ) Tj (width) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (30) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* ([[[[) Tj .729412 .129412 .129412 rg ('black') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('cyan') Tj 0 0 0 rg (],) Tj  T* (   ) Tj .729412 .129412 .129412 rg ('white') Tj 0 0 0 rg (,) Tj  T* (   ) Tj ([) Tj .729412 .129412 .129412 rg ('green') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('red') Tj 0 0 0 rg (]],) Tj  T* (  ) Tj ([[) Tj .729412 .129412 .129412 rg ('magenta') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('yellow') Tj 0 0 0 rg (],) Tj  T* (   ) Tj .729412 .129412 .129412 rg ('blue') Tj 0 0 0 rg (]]]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 492.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (textwrap) Tj /F1 8 Tf ( module formats paragraphs of text to fit a given screen width:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 352.7071 cm
q
q
.989681 0 0 .989681 0 0 cm
q
1 0 0 1 6.4 6.466733 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 362.4 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (textwrap) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (doc) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("""The wrap\(\) method is just like fill\(\) except that it returns) Tj T* (... a list of strings instead of one big string with newlines to separate) Tj T* (... the wrapped lines.""") Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (textwrap) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (fill) Tj (\() Tj (doc) Tj (,) Tj ( ) Tj (width) Tj .188235 .188235 .188235 rg (=) Tj /F6 8 Tf .376471 0 .878431 rg (40) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (The) Tj ( ) Tj (wrap) Tj (\(\)) Tj ( ) Tj (method) Tj ( ) Tj /F6 8 Tf (is) Tj /F5 8 Tf ( ) Tj (just) Tj ( ) Tj (like) Tj ( ) Tj (fill) Tj (\(\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (except) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (that) Tj ( ) Tj (it) Tj ( ) Tj (returns) Tj ( ) Tj (a) Tj ( ) Tj 0 .439216 .12549 rg (list) Tj 0 0 0 rg ( ) Tj (of) Tj ( ) Tj (strings) Tj  T* (instead) Tj ( ) Tj (of) Tj ( ) Tj (one) Tj ( ) Tj (big) Tj ( ) Tj (string) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (with) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (newlines) Tj  T* (to) Tj ( ) Tj (separate) Tj ( ) Tj (the) Tj ( ) Tj (wrapped) Tj ( ) Tj (lines) Tj .188235 .188235 .188235 rg (.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 320.7071 cm
q
BT 1 0 0 1 0 18.256 Tm .463712 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (locale) Tj /F1 8 Tf ( module accesses a database of culture specific data formats. The grouping attribute of) Tj T* 0 Tw (locale's format function provides a direct way of formatting numbers with group separators:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 179.9071 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (locale) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (locale) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (setlocale) Tj (\() Tj (locale) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (LC_ALL) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('English_United States.1252') Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('English_United States.1252') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (conv) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (locale) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (localeconv) Tj (\(\)) Tj (          ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# get a mapping of conventions) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (x) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1234567.8) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (locale) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj .729412 .129412 .129412 rg (") Tj /F6 8 Tf .733333 .4 .533333 rg (%d) Tj /F5 8 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (,) Tj ( ) Tj (x) Tj (,) Tj ( ) Tj (grouping) Tj .188235 .188235 .188235 rg (=) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('1,234,567') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (locale) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj .729412 .129412 .129412 rg (") Tj /F6 8 Tf .733333 .4 .533333 rg (%s%.*f) Tj /F5 8 Tf .729412 .129412 .129412 rg (") Tj 0 0 0 rg (,) Tj ( ) Tj (\() Tj (conv) Tj ([) Tj .729412 .129412 .129412 rg ('currency_symbol') Tj 0 0 0 rg (],) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (        ) Tj (conv) Tj ([) Tj .729412 .129412 .129412 rg ('frac_digits') Tj 0 0 0 rg (],) Tj ( ) Tj (x) Tj (\),) Tj ( ) Tj (grouping) Tj .188235 .188235 .188235 rg (=) Tj 0 .439216 .12549 rg (True) Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('$1,234,567.80') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 171.9071 cm
Q
q
1 0 0 1 70.4315 171.9071 cm
Q
q
1 0 0 1 70.4315 171.9071 cm
Q
q
1 0 0 1 70.4315 139.1071 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Templating) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 109.1071 cm
q
BT 1 0 0 1 0 18.256 Tm .264283 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (string) Tj /F1 8 Tf ( module includes a versatile ) Tj /F5 8 Tf (Template) Tj /F1 8 Tf ( class with a simplified syntax suitable for editing) Tj T* 0 Tw (by end-users. This allows users to customize their applications without having to alter the application.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (97) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R370': class PDFStream 
370 0 obj
% page stream
<< /Length 8537 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 572.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.319079 Tw 12 TL /F1 8 Tf 0 0 0 rg (The format uses placeholder names formed by ) Tj /F5 8 Tf ($) Tj /F1 8 Tf ( with valid Python identifiers \(alphanumeric characters) Tj T* 0 Tw .203712 Tw (and underscores\). Surrounding the placeholder with braces allows it to be followed by more alphanu\255) Tj T* 0 Tw (meric letters with no intervening spaces. Writing ) Tj /F5 8 Tf ($$) Tj /F1 8 Tf ( creates a single escaped ) Tj /F5 8 Tf ($) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 504.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (string) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (Template) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (Template) Tj (\() Tj .729412 .129412 .129412 rg ('${village}folk send $$10 to $cause.') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (substitute) Tj (\() Tj (village) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('Nottingham') Tj 0 0 0 rg (,) Tj ( ) Tj (cause) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('the ditch fund') Tj 0 0 0 rg (\)) Tj  T* .729412 .129412 .129412 rg ('Nottinghamfolk send $10 to the ditch fund.') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 448.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .014665 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (substitute\(\)) Tj /F1 8 Tf ( method raises a ) Tj /F5 8 Tf (KeyError) Tj /F1 8 Tf ( when a placeholder is not supplied in a dictionary or) Tj T* 0 Tw -0.208288 Tw (a keyword argument. For mail-merge style applications, user supplied data may be incomplete and the) Tj T* 0 Tw .886331 Tw /F5 8 Tf (safe_substitute\(\)) Tj /F1 8 Tf ( method may be more appropriate --- it will leave placeholders unchanged if) Tj T* 0 Tw (data is missing:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 331.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 108 re B*
Q
q
BT 1 0 0 1 0 90.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (Template) Tj (\() Tj .729412 .129412 .129412 rg ('Return the $item to $owner.') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (d) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (dict) Tj 0 0 0 rg (\() Tj (item) Tj .188235 .188235 .188235 rg (=) Tj .729412 .129412 .129412 rg ('unladen swallow') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (substitute) Tj (\() Tj (d) Tj (\)) Tj  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg  T* /F6 8 Tf .941176 0 0 rg (KeyError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ('owner') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (safe_substitute) Tj (\() Tj (d) Tj (\)) Tj  T* .729412 .129412 .129412 rg ('Return the unladen swallow to $owner.') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 287.3367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.075469 Tw 12 TL /F1 8 Tf 0 0 0 rg (Template subclasses can specify a custom delimiter. For example, a batch renaming utility for a photo) Tj T* 0 Tw .693598 Tw (browser may elect to use percent signs for placeholders such as the current date, image sequence) Tj T* 0 Tw (number, or file format:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 114.4576 cm
q
q
.976772 0 0 .976772 0 0 cm
q
1 0 0 1 6.4 6.552197 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 367.2 168 re B*
Q
q
BT 1 0 0 1 0 150.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (time) Tj /F5 8 Tf .188235 .188235 .188235 rg (,) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (os.path) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (photofiles) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj .729412 .129412 .129412 rg ('img_1074.jpg') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('img_1076.jpg') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('img_1077.jpg') Tj 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (BatchRename) Tj /F5 8 Tf 0 0 0 rg (\() Tj (Template) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (delimiter) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('%') Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (fmt) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (raw_input) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ('Enter rename style \() Tj /F6 8 Tf .733333 .4 .533333 rg (%d) Tj /F5 8 Tf .729412 .129412 .129412 rg (-date %n-seqnum ) Tj /F6 8 Tf .733333 .4 .533333 rg (%f) Tj /F5 8 Tf .729412 .129412 .129412 rg (-format\):  ') Tj 0 0 0 rg (\)) Tj  T* (Enter) Tj ( ) Tj (rename) Tj ( ) Tj (style) Tj ( ) Tj (\() Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg (d) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (date) Tj ( ) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg (n) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (seqnum) Tj ( ) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg (f) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (format) Tj (\):) Tj (  ) Tj (Ashley_) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg (n) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg (f) Tj  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (t) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (BatchRename) Tj (\() Tj (fmt) Tj (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (date) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (time) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (strftime) Tj (\() Tj .729412 .129412 .129412 rg (') Tj /F6 8 Tf .733333 .4 .533333 rg (%d) Tj /F5 8 Tf .729412 .129412 .129412 rg (%b%y') Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj (,) Tj ( ) Tj (filename) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (enumerate) Tj 0 0 0 rg (\() Tj (photofiles) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (base) Tj (,) Tj ( ) Tj (ext) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (os) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (path) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (splitext) Tj (\() Tj (filename) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (newname) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (t) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (substitute) Tj (\() Tj (d) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (date) Tj (,) Tj ( ) Tj (n) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (i) Tj (,) Tj ( ) Tj (f) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (ext) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('{0} --) Tj (>) Tj ( {1}') Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (format) Tj (\() Tj (filename) Tj (,) Tj ( ) Tj (newname) Tj (\)) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (98) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R371': class PDFStream 
371 0 obj
% page stream
<< /Length 6601 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F5 8 Tf 0 0 0 rg  T* (img_1074) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (jpg) Tj ( ) Tj .188235 .188235 .188235 rg (--) Tj (>) Tj 0 0 0 rg ( ) Tj (Ashley_0) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (jpg) Tj  T* (img_1076) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (jpg) Tj ( ) Tj .188235 .188235 .188235 rg (--) Tj (>) Tj 0 0 0 rg ( ) Tj (Ashley_1) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (jpg) Tj  T* (img_1077) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (jpg) Tj ( ) Tj .188235 .188235 .188235 rg (--) Tj (>) Tj 0 0 0 rg ( ) Tj (Ashley_2) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (jpg) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 504.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.690151 Tw 12 TL /F1 8 Tf 0 0 0 rg (Another application for templating is separating program logic from the details of multiple output) Tj T* 0 Tw .754398 Tw (formats. This makes it possible to substitute custom templates for XML files, plain text reports, and) Tj T* 0 Tw (HTML web reports.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 504.1367 cm
Q
q
1 0 0 1 70.4315 504.1367 cm
Q
q
1 0 0 1 70.4315 504.1367 cm
Q
q
1 0 0 1 70.4315 471.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Working with Binary Data Record Layouts) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 417.3367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.290156 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (struct) Tj /F1 8 Tf ( module provides ) Tj /F5 8 Tf (pack\(\)) Tj /F1 8 Tf ( and ) Tj /F5 8 Tf (unpack\(\)) Tj /F1 8 Tf ( functions for working with variable length binary) Tj T* 0 Tw 1.020531 Tw (record formats. The following example shows how to loop through header information in a ZIP file) Tj T* 0 Tw .415198 Tw (without using the ) Tj /F5 8 Tf (zipfile) Tj /F1 8 Tf ( module. Pack codes ) Tj /F5 8 Tf ("H") Tj /F1 8 Tf ( and ) Tj /F5 8 Tf ("I") Tj /F1 8 Tf ( represent two and four byte unsigned) Tj T* 0 Tw (numbers respectively. The ) Tj /F5 8 Tf (") Tj (<) Tj (") Tj /F1 8 Tf ( indicates that they are standard size and in little-endian byte order:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 204.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 204 re B*
Q
q
BT 1 0 0 1 0 186.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (struct) Tj /F5 8 Tf 0 0 0 rg  T*  T* (data) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (open) Tj 0 0 0 rg (\() Tj .729412 .129412 .129412 rg ('myfile.zip') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('rb') Tj 0 0 0 rg (\)) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read) Tj (\(\)) Tj  T* (start) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (\):) Tj (                      ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# show the first 3 file headers) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj (start) Tj ( ) Tj .188235 .188235 .188235 rg (+=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (14) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj (fields) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (struct) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (unpack) Tj (\() Tj .729412 .129412 .129412 rg (') Tj (<) Tj (IIIHH') Tj 0 0 0 rg (,) Tj ( ) Tj (data) Tj ([) Tj (start) Tj (:) Tj (start) Tj .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg (]\)) Tj  T* (    ) Tj (crc32) Tj (,) Tj ( ) Tj (comp_size) Tj (,) Tj ( ) Tj (uncomp_size) Tj (,) Tj ( ) Tj (filenamesize) Tj (,) Tj ( ) Tj (extra_size) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (fields) Tj  T*  T* (    ) Tj (start) Tj ( ) Tj .188235 .188235 .188235 rg (+=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (16) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj (filename) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (data) Tj ([) Tj (start) Tj (:) Tj (start) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (filenamesize) Tj (]) Tj  T* (    ) Tj (start) Tj ( ) Tj .188235 .188235 .188235 rg (+=) Tj 0 0 0 rg ( ) Tj (filenamesize) Tj  T* (    ) Tj (extra) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (data) Tj ([) Tj (start) Tj (:) Tj (start) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg (extra_size) Tj (]) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (filename) Tj (,) Tj ( ) Tj 0 .439216 .12549 rg (hex) Tj 0 0 0 rg (\() Tj (crc32) Tj (\),) Tj ( ) Tj (comp_size) Tj (,) Tj ( ) Tj (uncomp_size) Tj  T*  T* (    ) Tj (start) Tj ( ) Tj .188235 .188235 .188235 rg (+=) Tj 0 0 0 rg ( ) Tj (extra_size) Tj ( ) Tj .188235 .188235 .188235 rg (+) Tj 0 0 0 rg ( ) Tj (comp_size) Tj (     ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# skip to the next header) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 196.5367 cm
Q
q
1 0 0 1 70.4315 196.5367 cm
Q
q
1 0 0 1 70.4315 196.5367 cm
Q
q
1 0 0 1 70.4315 163.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Multi-threading) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 121.7367 cm
q
BT 1 0 0 1 0 30.256 Tm .296855 Tw 12 TL /F1 8 Tf 0 0 0 rg (Threading is a technique for decoupling tasks which are not sequentially dependent. Threads can be) Tj T* 0 Tw .121748 Tw (used to improve the responsiveness of applications that accept user input while other tasks run in the) Tj T* 0 Tw (background. A related use case is running I/O in parallel with computations in another thread.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 103.7367 cm
q
BT 1 0 0 1 0 6.256 Tm .333598 Tw 12 TL /F1 8 Tf 0 0 0 rg (The following code shows how the high level ) Tj /F5 8 Tf (threading) Tj /F1 8 Tf ( module can run tasks in background while) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 189.0166 0 Td 12 TL /F1 8 Tf 0 0 0 rg (99) Tj T* -189.0166 0 Td ET
Q
Q
 
endstream

endobj
% 'R372': class PDFStream 
372 0 obj
% page stream
<< /Length 6527 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (the main program continues to run:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 348.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 240 re B*
Q
q
BT 1 0 0 1 0 222.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (threading) Tj /F5 8 Tf .188235 .188235 .188235 rg (,) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (zipfile) Tj /F5 8 Tf 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (AsyncZip) Tj /F5 8 Tf 0 0 0 rg (\() Tj (threading) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (Thread) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (infile) Tj (,) Tj ( ) Tj (outfile) Tj (\):) Tj  T* (        ) Tj (threading) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (Thread) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (__init__) Tj (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\)) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (infile) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (infile) Tj  T* (        ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (outfile) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (outfile) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (run) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* (        ) Tj (f) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (zipfile) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (ZipFile) Tj (\() Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (outfile) Tj (,) Tj ( ) Tj .729412 .129412 .129412 rg ('w') Tj 0 0 0 rg (,) Tj ( ) Tj (zipfile) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (ZIP_DEFLATED) Tj (\)) Tj  T* (        ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write) Tj (\() Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (infile) Tj (\)) Tj  T* (        ) Tj (f) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (close) Tj (\(\)) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Finished background zip of: ') Tj 0 0 0 rg (,) Tj ( ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (infile) Tj  T*  T* (background) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (AsyncZip) Tj (\() Tj .729412 .129412 .129412 rg ('mydata.txt') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('myarchive.zip') Tj 0 0 0 rg (\)) Tj  T* (background) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (start) Tj (\(\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('The main program continues to run in foreground.') Tj 0 0 0 rg  T*  T* (background) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (join) Tj (\(\)) Tj (    ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# Wait for the background task to finish) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ('Main program waited until background was done.') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 304.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .184305 Tw 12 TL /F1 8 Tf 0 0 0 rg (The principal challenge of multi-threaded applications is coordinating threads that share data or other) Tj T* 0 Tw -0.396002 Tw (resources. To that end, the threading module provides a number of synchronization primitives including) Tj T* 0 Tw (locks, events, condition variables, and semaphores.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 238.1367 cm
q
BT 1 0 0 1 0 54.256 Tm -0.459752 Tw 12 TL /F1 8 Tf 0 0 0 rg (While those tools are powerful, minor design errors can result in problems that are difficult to reproduce.) Tj T* 0 Tw .402116 Tw (So, the preferred approach to task coordination is to concentrate all access to a resource in a single) Tj T* 0 Tw .176748 Tw (thread and then use the ) Tj /F5 8 Tf (Queue) Tj /F1 8 Tf ( module to feed that thread with requests from other threads. Applica\255) Tj T* 0 Tw 1.805452 Tw (tions using ) Tj /F5 8 Tf (Queue.Queue) Tj /F1 8 Tf ( objects for inter-thread communication and coordination are easier to) Tj T* 0 Tw (design, more readable, and more reliable.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 238.1367 cm
Q
q
1 0 0 1 70.4315 238.1367 cm
Q
q
1 0 0 1 70.4315 238.1367 cm
Q
q
1 0 0 1 70.4315 205.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Logging) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 175.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .173598 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (logging) Tj /F1 8 Tf ( module offers a full featured and flexible logging system. At its simplest, log messages) Tj T* 0 Tw (are sent to a file or to ) Tj /F5 8 Tf (sys.stderr) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 106.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 60 re B*
Q
q
BT 1 0 0 1 0 42.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (logging) Tj /F5 8 Tf 0 0 0 rg  T* (logging) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (debug) Tj (\() Tj .729412 .129412 .129412 rg ('Debugging information') Tj 0 0 0 rg (\)) Tj  T* (logging) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (info) Tj (\() Tj .729412 .129412 .129412 rg ('Informational message') Tj 0 0 0 rg (\)) Tj  T* (logging) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (warning) Tj (\() Tj .729412 .129412 .129412 rg ('Warning:config file ) Tj /F6 8 Tf .733333 .4 .533333 rg (%s) Tj /F5 8 Tf .729412 .129412 .129412 rg ( not found') Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('server.conf') Tj 0 0 0 rg (\)) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (100) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R373': class PDFStream 
373 0 obj
% page stream
<< /Length 6990 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 572.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (logging) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (error) Tj (\() Tj .729412 .129412 .129412 rg ('Error occurred') Tj 0 0 0 rg (\)) Tj  T* (logging) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (critical) Tj (\() Tj .729412 .129412 .129412 rg ('Critical error -- shutting down') Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 552.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (This produces the following output:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 495.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (WARNING) Tj (:) Tj (root) Tj (:) Tj /F6 8 Tf .941176 0 0 rg (Warning) Tj /F5 8 Tf 0 0 0 rg (:) Tj (config) Tj ( ) Tj 0 .439216 .12549 rg (file) Tj 0 0 0 rg ( ) Tj (server) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (conf) Tj ( ) Tj /F6 8 Tf (not) Tj /F5 8 Tf ( ) Tj (found) Tj  T* (ERROR) Tj (:) Tj (root) Tj (:) Tj (Error) Tj ( ) Tj (occurred) Tj  T* (CRITICAL) Tj (:) Tj (root) Tj (:) Tj (Critical) Tj ( ) Tj (error) Tj ( ) Tj .188235 .188235 .188235 rg (--) Tj 0 0 0 rg ( ) Tj (shutting) Tj ( ) Tj (down) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 439.3367 cm
q
BT 1 0 0 1 0 42.256 Tm .105426 Tw 12 TL /F1 8 Tf 0 0 0 rg (By default, informational and debugging messages are suppressed and the output is sent to standard) Tj T* 0 Tw 1.279075 Tw (error. Other output options include routing messages through email, datagrams, sockets, or to an) Tj T* 0 Tw 1.891382 Tw (HTTP Server. New filters can select different routing based on message priority: ) Tj /F5 8 Tf (DEBUG) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (INFO) Tj /F1 8 Tf (,) Tj T* 0 Tw /F5 8 Tf (WARNING) Tj /F1 8 Tf (, ) Tj /F5 8 Tf (ERROR) Tj /F1 8 Tf (, and ) Tj /F5 8 Tf (CRITICAL) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 409.3367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.039248 Tw 12 TL /F1 8 Tf 0 0 0 rg (The logging system can be configured directly from Python or can be loaded from a user editable) Tj T* 0 Tw (configuration file for customized logging without altering the application.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 409.3367 cm
Q
q
1 0 0 1 70.4315 409.3367 cm
Q
q
1 0 0 1 70.4315 409.3367 cm
Q
q
1 0 0 1 70.4315 376.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Weak References) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 334.5367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.915997 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python does automatic memory management \(reference counting for most objects and ) Tj /F4 8 Tf (garbage) Tj T* 0 Tw 1.235248 Tw (collection) Tj /F1 8 Tf ( to eliminate cycles\). The memory is freed shortly after the last reference to it has been) Tj T* 0 Tw (eliminated.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 256.5367 cm
q
BT 1 0 0 1 0 66.256 Tm -0.172002 Tw 12 TL /F1 8 Tf 0 0 0 rg (This approach works fine for most applications but occasionally there is a need to track objects only as) Tj T* 0 Tw .278131 Tw (long as they are being used by something else. Unfortunately, just tracking them creates a reference) Tj T* 0 Tw -0.141849 Tw (that makes them permanent. The ) Tj /F5 8 Tf (weakref) Tj /F1 8 Tf ( module provides tools for tracking objects without creating) Tj T* 0 Tw -0.277414 Tw (a reference. When the object is no longer needed, it is automatically removed from a weakref table and) Tj T* 0 Tw 1.861844 Tw (a callback is triggered for weakref objects. Typical applications include caching objects that are) Tj T* 0 Tw (expensive to create:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 103.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 144 re B*
Q
q
BT 1 0 0 1 0 126.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (weakref) Tj /F5 8 Tf .188235 .188235 .188235 rg (,) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (gc) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (class) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .690196 0 .376471 rg (A) Tj /F5 8 Tf 0 0 0 rg (:) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__init__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (,) Tj ( ) Tj (value) Tj (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (             ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (value) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (value) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (__repr__) Tj /F5 8 Tf 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (             ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (value) Tj (\)) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (A) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (                   ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# create a reference) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (d) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (weakref) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (WeakValueDictionary) Tj (\(\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (d) Tj ([) Tj .729412 .129412 .129412 rg ('primary') Tj 0 0 0 rg (]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (a) Tj (            ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# does not create a reference) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (d) Tj ([) Tj .729412 .129412 .129412 rg ('primary') Tj 0 0 0 rg (]) Tj (                ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# fetch the object if it is still alive) Tj /F5 8 Tf 0 0 0 rg  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (101) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R374': class PDFStream 
374 0 obj
% page stream
<< /Length 7184 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 464.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 144 re B*
Q
q
BT 1 0 0 1 0 126.968 Tm 12 TL /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (a) Tj (                       ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# remove the one reference) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (gc) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (collect) Tj (\(\)) Tj (                ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# run garbage collection right away) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (d) Tj ([) Tj .729412 .129412 .129412 rg ('primary') Tj 0 0 0 rg (]) Tj (                ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# entry was automatically removed) Tj /F5 8 Tf 0 0 0 rg  T* (Traceback) Tj ( ) Tj (\() Tj (most) Tj ( ) Tj (recent) Tj ( ) Tj (call) Tj ( ) Tj (last) Tj (\):) Tj  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg (") Tj (<) Tj (stdin) Tj (>) Tj (") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj .188235 .188235 .188235 rg (<) Tj 0 0 0 rg (module) Tj .188235 .188235 .188235 rg (>) Tj 0 0 0 rg  T* (    ) Tj (d) Tj ([) Tj .729412 .129412 .129412 rg ('primary') Tj 0 0 0 rg (]) Tj (                ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# entry was automatically removed) Tj /F5 8 Tf 0 0 0 rg  T* (  ) Tj (File) Tj ( ) Tj .729412 .129412 .129412 rg ("C:/python26/lib/weakref.py") Tj 0 0 0 rg (,) Tj ( ) Tj (line) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (46) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (__getitem__) Tj  T* (    ) Tj (o) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (self) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (data) Tj ([) Tj (key) Tj (]\(\)) Tj  T* /F6 8 Tf .941176 0 0 rg (KeyError) Tj /F5 8 Tf 0 0 0 rg (:) Tj ( ) Tj .729412 .129412 .129412 rg ('primary') Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 456.1367 cm
Q
q
1 0 0 1 70.4315 456.1367 cm
Q
q
1 0 0 1 70.4315 456.1367 cm
Q
q
1 0 0 1 70.4315 423.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Tools for Working with Lists) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 393.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .220469 Tw 12 TL /F1 8 Tf 0 0 0 rg (Many data structure needs can be met with the built-in list type. However, sometimes there is a need) Tj T* 0 Tw (for alternative implementations with different performance trade-offs.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 339.3367 cm
q
BT 1 0 0 1 0 42.256 Tm .551248 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (array) Tj /F1 8 Tf ( module provides an ) Tj /F5 8 Tf (array\(\)) Tj /F1 8 Tf ( object that is like a list that stores only homogenous data) Tj T* 0 Tw .457248 Tw (and stores it more compactly. The following example shows an array of numbers stored as two byte) Tj T* 0 Tw .472748 Tw (unsigned binary numbers \(typecode ) Tj /F5 8 Tf ("H") Tj /F1 8 Tf (\) rather than the usual 16 bytes per entry for regular lists of) Tj T* 0 Tw (python int objects:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 246.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (array) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (array) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (array) Tj (\() Tj .729412 .129412 .129412 rg ('H') Tj 0 0 0 rg (,) Tj ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (4000) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (700) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (22222) Tj /F5 8 Tf 0 0 0 rg (]\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (sum) Tj 0 0 0 rg (\() Tj (a) Tj (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (26932) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (a) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (:) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* (array) Tj (\() Tj .729412 .129412 .129412 rg ('H') Tj 0 0 0 rg (,) Tj ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (700) Tj /F5 8 Tf 0 0 0 rg (]\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 202.5367 cm
q
BT 1 0 0 1 0 30.256 Tm .029748 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (collections) Tj /F1 8 Tf ( module provides a ) Tj /F5 8 Tf (deque\(\)) Tj /F1 8 Tf ( object that is like a list with faster appends and pops) Tj T* 0 Tw .957248 Tw (from the left side but slower lookups in the middle. These objects are well suited for implementing) Tj T* 0 Tw (queues and breadth first tree searches:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 109.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (collections) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (deque) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (d) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (deque) Tj (\([) Tj .729412 .129412 .129412 rg ("task1") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("task2") Tj 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ("task3") Tj 0 0 0 rg (]\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (d) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj .729412 .129412 .129412 rg ("task4") Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .729412 .129412 .129412 rg ("Handling") Tj 0 0 0 rg (,) Tj ( ) Tj (d) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (popleft) Tj (\(\)) Tj  T* (Handling) Tj ( ) Tj (task1) Tj  T*  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (102) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R375': class PDFStream 
375 0 obj
% page stream
<< /Length 8528 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 512.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 96 re B*
Q
q
BT 1 0 0 1 0 78.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (unsearched) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (deque) Tj (\([) Tj (starting_node) Tj (]\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (breadth_first_search) Tj /F5 8 Tf 0 0 0 rg (\() Tj (unsearched) Tj (\):) Tj  T* (    ) Tj (node) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (unsearched) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (popleft) Tj (\(\)) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (m) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj (gen_moves) Tj (\() Tj (node) Tj (\):) Tj  T* (        ) Tj /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (is_goal) Tj (\() Tj (m) Tj (\):) Tj  T* (            ) Tj /F6 8 Tf 0 .501961 0 rg (return) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (m) Tj  T* (        ) Tj (unsearched) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (append) Tj (\() Tj (m) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 480.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .641331 Tw 12 TL /F1 8 Tf 0 0 0 rg (In addition to alternative list implementations, the library also offers other tools such as the ) Tj /F5 8 Tf (bisect) Tj T* 0 Tw /F1 8 Tf (module with functions for manipulating sorted lists:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 401.9433 cm
q
q
.964195 0 0 .964195 0 0 cm
q
1 0 0 1 6.4 6.63766 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 372 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (bisect) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (scores) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([\() Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('perl') Tj 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (200) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('tcl') Tj 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (400) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('lua') Tj 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (500) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('python') Tj 0 0 0 rg (\)]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (bisect) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (insort) Tj (\() Tj (scores) Tj (,) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (300) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ruby') Tj 0 0 0 rg (\)\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (scores) Tj  T* ([\() Tj /F6 8 Tf .376471 0 .878431 rg (100) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('perl') Tj 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (200) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('tcl') Tj 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (300) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('ruby') Tj 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (400) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('lua') Tj 0 0 0 rg (\),) Tj ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (500) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj .729412 .129412 .129412 rg ('python') Tj 0 0 0 rg (\)]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 357.9433 cm
q
BT 1 0 0 1 0 30.256 Tm 1.349228 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (heapq) Tj /F1 8 Tf ( module provides functions for implementing heaps based on regular lists. The lowest) Tj T* 0 Tw -0.154752 Tw (valued entry is always kept at position zero. This is useful for applications which repeatedly access the) Tj T* 0 Tw (smallest element but do not want to run a full list sort:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 268.1795 cm
q
q
.964195 0 0 .964195 0 0 cm
q
1 0 0 1 6.4 6.63766 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 372 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (heapq) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (heapify) Tj (,) Tj ( ) Tj (heappop) Tj (,) Tj ( ) Tj (heappush) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (data) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ([) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (9) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (4) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (8) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (]) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (heapify) Tj (\() Tj (data) Tj (\)) Tj (                      ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# rearrange the list into heap order) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (heappush) Tj (\() Tj (data) Tj (,) Tj ( ) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (\)) Tj (                 ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# add a new entry) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj ([) Tj (heappop) Tj (\() Tj (data) Tj (\)) Tj ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (3) Tj /F5 8 Tf 0 0 0 rg (\)]) Tj (  ) Tj /F7 8 Tf .501961 .501961 .501961 rg (# fetch the three smallest entries) Tj /F5 8 Tf 0 0 0 rg  T* ([) Tj .188235 .188235 .188235 rg (-) Tj /F6 8 Tf .376471 0 .878431 rg (5) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (]) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 260.1795 cm
Q
q
1 0 0 1 70.4315 260.1795 cm
Q
q
1 0 0 1 70.4315 260.1795 cm
Q
q
1 0 0 1 70.4315 227.3795 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Decimal Floating Point Arithmetic) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 161.3795 cm
q
BT 1 0 0 1 0 54.256 Tm .556613 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (decimal) Tj /F1 8 Tf ( module offers a ) Tj /F5 8 Tf (Decimal) Tj /F1 8 Tf ( datatype for decimal floating point arithmetic. Compared to) Tj T* 0 Tw 1.697426 Tw (the built-in ) Tj /F5 8 Tf (float) Tj /F1 8 Tf ( implementation of binary floating point, the new class is especially helpful for) Tj T* 0 Tw -0.539669 Tw (financial applications and other uses which require exact decimal representation, control over precision,) Tj T* 0 Tw .288921 Tw (control over rounding to meet legal or regulatory requirements, tracking of significant decimal places,) Tj T* 0 Tw (or for applications where the user expects the results to match calculations done by hand.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 119.3795 cm
q
BT 1 0 0 1 0 30.256 Tm -0.120708 Tw 12 TL /F1 8 Tf 0 0 0 rg (For example, calculating a 5% tax on a 70 cent phone charge gives different results in decimal floating) Tj T* 0 Tw .929331 Tw (point and binary floating point. The difference becomes significant if the results are rounded to the) Tj T* 0 Tw (nearest cent:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (103) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R376': class PDFStream 
376 0 obj
% page stream
<< /Length 6127 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 536.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 72 re B*
Q
q
BT 1 0 0 1 0 54.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (from) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (decimal) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ('0.70') Tj 0 0 0 rg (\)) Tj ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ('1.05') Tj 0 0 0 rg (\)) Tj  T* (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ("0.7350") Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (.) Tj /F6 8 Tf .376471 0 .878431 rg (70) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1.05) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0.73499999999999999) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 492.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.104925 Tw 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (Decimal) Tj /F1 8 Tf ( result keeps a trailing zero, automatically inferring four place significance from multiplic\255) Tj T* 0 Tw -0.335717 Tw (ands with two place significance. Decimal reproduces mathematics as done by hand and avoids issues) Tj T* 0 Tw (that can arise when binary floating point cannot exactly represent decimal quantities.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 462.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .882997 Tw 12 TL /F1 8 Tf 0 0 0 rg (Exact representation enables the ) Tj /F5 8 Tf (Decimal) Tj /F1 8 Tf ( class to perform modulo calculations and equality tests) Tj T* 0 Tw (that are unsuitable for binary floating point:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 333.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 120 re B*
Q
q
BT 1 0 0 1 0 102.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ('1.00') Tj 0 0 0 rg (\)) Tj ( ) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg ( ) Tj (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ('.10') Tj 0 0 0 rg (\)) Tj  T* (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ("0.00") Tj 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1.00) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (%) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0.10) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0.09999999999999995) Tj /F5 8 Tf 0 0 0 rg  T*  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (sum) Tj 0 0 0 rg (\([) Tj (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ('0.1') Tj 0 0 0 rg (\)]) Tj .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\)) Tj ( ) Tj .188235 .188235 .188235 rg (==) Tj 0 0 0 rg ( ) Tj (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ('1.0') Tj 0 0 0 rg (\)) Tj  T* 0 .439216 .12549 rg (True) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (sum) Tj 0 0 0 rg (\([) Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg (]) Tj .188235 .188235 .188235 rg (*) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\)) Tj ( ) Tj .188235 .188235 .188235 rg (==) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1.0) Tj /F5 8 Tf 0 0 0 rg  T* 0 .439216 .12549 rg (False) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 313.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (The ) Tj /F5 8 Tf (decimal) Tj /F1 8 Tf ( module provides arithmetic with as much precision as needed:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 256.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (getcontext) Tj (\(\)) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (prec) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (36) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (Decimal) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj (Decimal) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (7) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* (Decimal) Tj (\() Tj .729412 .129412 .129412 rg ("0.142857142857142857142857142857142857") Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 248.5367 cm
Q
q
1 0 0 1 70.4315 248.5367 cm
Q
q
1 0 0 1 70.4315 248.5367 cm
Q
q
1 0 0 1 70.4315 213.3367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 29.2 re B*
Q
q
BT 1 0 0 1 10 7.712 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (\277Y ahora qu\351?) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 183.3367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.156283 Tw 12 TL /F1 8 Tf 0 0 0 rg (Leer este tutorial probablemente reforz\363 tu inter\351s por usar Python --- deber\355as estar ansioso por) Tj T* 0 Tw (aplicar Python a la resoluci\363n de tus problemas reales. \277A d\363nde deber\355as ir para aprender m\341s?) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 153.3367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.448305 Tw 12 TL /F1 8 Tf 0 0 0 rg (Este tutorial forma parte del juego de documentaci\363n de Python. Algunos otros documentos que) Tj T* 0 Tw (encontrar\341s en este juego son:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 151.3367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (104) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R377': class PDFStream 
377 0 obj
% page stream
<< /Length 6495 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 518.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 78 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 78 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F4 8 Tf 0 0 0 rg (library-index) Tj /F1 8 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 66.256 Tm .306151 Tw 12 TL /F1 8 Tf 0 0 0 rg (Deber\355as hojear este manual, que tiene material de referencia completo \(si bien breve\) sobre) Tj T* 0 Tw 1.885664 Tw (tipos, funciones y m\363dulos de la biblioteca est\341ndar. La distribuci\363n de Python est\341ndar) Tj T* 0 Tw .951141 Tw (incluye un ) Tj /F4 8 Tf (mont\363n) Tj /F1 8 Tf ( de c\363digo adicional. Hay m\363dulos para leer archivos de correo de Unix,) Tj T* 0 Tw .522543 Tw (obtener documentos via HTTP, generar n\372meros aleatorios, interpretar opciones de l\355nea de) Tj T* 0 Tw .069844 Tw (comandos, escribir programas CGI, comprimir datos, y muchas otras tareas. Un vistazo por la) Tj T* 0 Tw (Referencia de Biblioteca te dar\341 una idea de lo que hay disponible.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 506.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 0 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F4 8 Tf 0 0 0 rg (install-index) Tj /F1 8 Tf ( explica c\363mo instalar m\363dulos externos escritos por otros usuarios de Python.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 482.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 12 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 18.256 Tm 1.39969 Tw 12 TL /F4 8 Tf 0 0 0 rg (reference-index) Tj /F1 8 Tf (: Una descripci\363n en detalle de la sintaxis y sem\341ntica de Python. Es una) Tj T* 0 Tw (lectura pesada, pero \372til como gu\355a completa al lenguaje en s\355.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 464.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (M\341s recursos sobre Python:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 462.9367 cm
Q
q
1 0 0 1 70.4315 414.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 36 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 42.256 Tm .041197 Tw 12 TL /F1 8 Tf 0 0 .501961 rg (http://www.python.org) Tj 0 0 0 rg (: El sitio web principal sobre Python. Contiene c\363digo, documentaci\363n, y) Tj T* 0 Tw .314569 Tw (referencias a p\341ginas relacionadas con Python en la Web. Este sitio web tiene copias espejo) Tj T* 0 Tw 2.151075 Tw (en varios lugares del mundo c\363mo Europa, Jap\363n y Australia; una copia espejo puede) Tj T* 0 Tw (funcionar m\341s r\341pido que el sitio principal, dependiendo de tu ubicaci\363n geogr\341fica.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 402.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 0 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 .501961 rg (http://docs.python.org) Tj 0 0 0 rg (: Acceso r\341pido a la documentaci\363n de Python.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 354.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 36 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 42.256 Tm .583634 Tw 12 TL /F1 8 Tf 0 0 .501961 rg (http://pypi.python.org) Tj 0 0 0 rg (: El \315ndice de Paquetes de Python, antes tambi\351n apodado "El Negocio) Tj T* 0 Tw .047712 Tw (de Quesos", es un listado de m\363dulos de Python disponibles para descargar hechos por otros) Tj T* 0 Tw .070997 Tw (usuarios. Cu\341ndo comiences a publicar c\363digo, puedes registrarlo aqu\355 as\355 los dem\341s pueden) Tj T* 0 Tw (encontrarlo.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 306.9367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 36 cm
q
BT 1 0 0 1 0 6.256 Tm 11.2 0 Td 12 TL /F1 8 Tf 0 0 0 rg (\177) Tj T* -11.2 0 Td ET
Q
Q
q
1 0 0 1 26 0 cm
q
BT 1 0 0 1 0 42.256 Tm 5.697995 Tw 12 TL /F1 8 Tf 0 0 .501961 rg (http://aspn.activestate.com/ASPN/Python/Cookbook/) Tj 0 0 0 rg (: El Recetario de Python es una) Tj T* 0 Tw 1.109664 Tw (colecci\363n de tama\361o considerable de ejemplos de c\363digo, m\363dulos m\341s grandes, y scripts) Tj T* 0 Tw 1.597997 Tw (\372tiles. Las contribuciones particularmente notorias est\341n recolectadas en un libro tambi\351n) Tj T* 0 Tw (titulado Recetario de Python \(O'Reilly ) Tj (&) Tj ( Associates, ISBN 0-596-00797-3.\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 192.9367 cm
q
BT 1 0 0 1 0 102.256 Tm -0.114574 Tw 12 TL /F1 8 Tf 0 0 0 rg (Para preguntas relacionadas con Python y reportes de problemas puedes escribir al grupo de noticias) Tj T* 0 Tw .987712 Tw /F4 8 Tf (comp.lang.python) Tj /F1 8 Tf (, o enviarlas a la lista de correo que hay en ) Tj 0 0 .501961 rg (python-list@python.org) Tj 0 0 0 rg (. El grupo de) Tj T* 0 Tw 1.066748 Tw (noticias y la lista de correo est\341n interconectadas, por lo que los mensajes enviados a uno ser\341n) Tj T* 0 Tw .967141 Tw (retransmitidos al otro. Hay alrededor de 120 mensajes diarios \(con picos de hasta varios cientos\),) Tj T* 0 Tw -0.116403 Tw (haciendo \(y respondiendo\) preguntas, sugiriendo nuevas caracter\355sticas, y anunciando nuevos m\363du\255) Tj T* 0 Tw -0.114002 Tw (los. Antes de escribir, aseg\372rate de haber revisado la lista de ) Tj 0 0 .501961 rg (Preguntas Frecuentes) Tj 0 0 0 rg ( \(tambi\351n llamado) Tj T* 0 Tw -0.015296 Tw (el FAQ\), o b\372scalo en el directorio ) Tj /F5 8 Tf (Misc/) Tj /F1 8 Tf ( de la distribuci\363n en c\363digo fuente de Python. Hay archivos) Tj T* 0 Tw -0.272859 Tw (de la lista de correo disponibles en ) Tj 0 0 .501961 rg (http://mail.python.org/pipermail/) Tj 0 0 0 rg (. El FAQ responde a muchas de las) Tj T* 0 Tw (preguntas que aparecen una y otra vez, y puede que ya contenga la soluci\363n a tu problema.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 192.9367 cm
Q
q
1 0 0 1 70.4315 192.9367 cm
Q
q
1 0 0 1 70.4315 192.9367 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (105) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R378': class PDFStream 
378 0 obj
% page stream
<< /Length 5675 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 570.5367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 48.4 re B*
Q
q
BT 1 0 0 1 10 26.912 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Edici\363n de Entrada Interactiva y Sustituci\363n de) Tj T* (Historial) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 492.5367 cm
q
BT 1 0 0 1 0 66.256 Tm .663198 Tw 12 TL /F1 8 Tf 0 0 0 rg (Algunas versiones del int\351rprete de Python permiten editar la l\355nea de entrada actual, y sustituir en) Tj T* 0 Tw .090116 Tw (base al historial, de forma similar a las capacidades del int\351rprete de comandos Korn y el GNU bash.) Tj T* 0 Tw -0.067061 Tw (Esto se implementa con la biblioteca ) Tj /F4 8 Tf (GNU Readline) Tj /F1 8 Tf (, que soporta edici\363n al estilo de Emacs y al estilo) Tj T* 0 Tw 1.249426 Tw (de vi. Esta biblioteca tiene su propia documentaci\363n que no duplicar\351 aqu\355; pero la funcionalidad) Tj T* 0 Tw .131465 Tw (b\341sica es f\341cil de explicar. La edici\363n interactiva y el historial aqu\355 descriptos est\341n disponibles como) Tj T* 0 Tw (opcionales en las versiones para Unix y Cygwin del int\351rprete.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 438.5367 cm
q
BT 1 0 0 1 0 42.256 Tm .354767 Tw 12 TL /F1 8 Tf 0 0 0 rg (Este cap\355tulo ) Tj /F4 8 Tf (no) Tj /F1 8 Tf ( documenta las capacidades de edici\363n del paquete PythonWin de Mark Hammond,) Tj T* 0 Tw -0.13978 Tw (ni del entorno IDLE basado en Tk que se distribuye con Python. El historial de l\355nea de comandos que) Tj T* 0 Tw .559763 Tw (funciona en pantallas de DOS en NT y algunas otras variantes de DOS y Windows es tambi\351n una) Tj T* 0 Tw (criatura diferente.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 438.5367 cm
Q
q
1 0 0 1 70.4315 438.5367 cm
Q
q
1 0 0 1 70.4315 438.5367 cm
Q
q
1 0 0 1 70.4315 405.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Edici\363n de L\355nea) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 315.7367 cm
q
BT 1 0 0 1 0 78.256 Tm -0.356943 Tw 12 TL /F1 8 Tf 0 0 0 rg (De estar soportada, la edici\363n de l\355nea de entrada se activa en cuanto el int\351rprete muestra un s\355mbolo) Tj T* 0 Tw -0.018935 Tw (de espera de ordenes primario o secundario. La l\355nea activa puede editarse usando los caracteres de) Tj T* 0 Tw -0.085602 Tw (control convencionales de Emacs. De estos, los m\341s importantes son: ) Tj /F5 8 Tf (C-A) Tj /F1 8 Tf ( \(Ctrl-A\) mueve el cursor al) Tj T* 0 Tw -0.306602 Tw (comienzo de la l\355nea, ) Tj /F5 8 Tf (C-E) Tj /F1 8 Tf ( al final, ) Tj /F5 8 Tf (C-B) Tj /F1 8 Tf ( lo mueve una posici\363n a la izquierda, ) Tj /F5 8 Tf (C-F) Tj /F1 8 Tf ( a la derecha. La tecla) Tj T* 0 Tw .724248 Tw (de retroceso \(Backspace\) borra el caracter a la izquierda del cursor, ) Tj /F5 8 Tf (C-D) Tj /F1 8 Tf ( el caracter a su derecha.) Tj T* 0 Tw .458314 Tw /F5 8 Tf (C-K) Tj /F1 8 Tf ( corta el resto de la l\355nea a la derecha del cursor, ) Tj /F5 8 Tf (C-Y) Tj /F1 8 Tf ( pega de vuelta la \372ltima cadena cortada.) Tj T* 0 Tw /F5 8 Tf (C-underscore) Tj /F1 8 Tf ( deshace el \372ltimo cambio hecho; puede repetirse para obtener un efecto acumulativo.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 315.7367 cm
Q
q
1 0 0 1 70.4315 315.7367 cm
Q
q
1 0 0 1 70.4315 315.7367 cm
Q
q
1 0 0 1 70.4315 282.9367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Sustituci\363n de historial) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 192.9367 cm
q
BT 1 0 0 1 0 78.256 Tm -0.045252 Tw 12 TL /F1 8 Tf 0 0 0 rg (La sustituci\363n de historial funciona de la siguiente manera: todas las l\355neas ingresadas y no vac\355as se) Tj T* 0 Tw .543731 Tw (almacenan en una memoria intermedia, y cuando se te pide una nueva l\355nea, est\341s posicionado en) Tj T* 0 Tw .099332 Tw (una linea nueva al final de esta memoria. ) Tj /F5 8 Tf (C-P) Tj /F1 8 Tf ( se mueve una l\355nea hacia arriba \(es decir, hacia atr\341s\)) Tj T* 0 Tw .833248 Tw (en el historial, ) Tj /F5 8 Tf (C-N) Tj /F1 8 Tf ( se mueve una l\355nea hacia abajo. Cualquier l\355nea en el historial puede editarse;) Tj T* 0 Tw 1.859382 Tw (aparecer\341 un asterisco adelante del indicador de entrada para marcar una l\355nea como editada.) Tj T* 0 Tw .954931 Tw (Presionando la tecla ) Tj /F5 8 Tf (Return) Tj /F1 8 Tf ( \(Intro\) se pasa la l\355nea activa al int\351rprete. ) Tj /F5 8 Tf (C-R) Tj /F1 8 Tf ( inicia una b\372squeda) Tj T* 0 Tw (incremental hacia atr\341s, ) Tj /F5 8 Tf (C-S) Tj /F1 8 Tf ( inicia una b\372squeda hacia adelante.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 192.9367 cm
Q
q
1 0 0 1 70.4315 192.9367 cm
Q
q
1 0 0 1 70.4315 192.9367 cm
Q
q
1 0 0 1 70.4315 160.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Atajos de teclado) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 118.1367 cm
q
BT 1 0 0 1 0 30.256 Tm .710569 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los atajos de teclado y algunos otros par\341metros de la biblioteca Readline se pueden personalizar) Tj T* 0 Tw -0.430464 Tw (poniendo comandos en un archivo de inicializaci\363n llamado ) Tj /F5 8 Tf (~/.inputrc) Tj /F1 8 Tf (. Los atajos de teclado tienen) Tj T* 0 Tw (la forma) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (106) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R379': class PDFStream 
379 0 obj
% page stream
<< /Length 5796 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 584.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (nombre) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (de) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (tecla) Tj (:) Tj ( ) Tj (nombre) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (de) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (funci) Tj .941176 0 0 rg (\363) Tj 0 0 0 rg (n) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 564.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (o) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 531.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf .729412 .129412 .129412 rg ("cadena") Tj 0 0 0 rg (:) Tj ( ) Tj (nombre) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (de) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (funci) Tj .941176 0 0 rg (\363) Tj 0 0 0 rg (n) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 511.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (y se pueden configurar opciones con) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 478.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (set) Tj ( ) Tj (nombre) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (opci) Tj .941176 0 0 rg (\363) Tj 0 0 0 rg (n) Tj ( ) Tj (valor) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 458.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Por ejemplo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 317.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 132 re B*
Q
q
BT 1 0 0 1 0 114.968 Tm 12 TL /F7 8 Tf .501961 .501961 .501961 rg (# Prefiero edici\363n al estilo vi:) Tj /F5 8 Tf 0 0 0 rg  T* (set) Tj ( ) Tj (editing) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (mode) Tj ( ) Tj (vi) Tj  T*  T* /F7 8 Tf .501961 .501961 .501961 rg (# Editar usando s\363lo un rengl\363n:) Tj /F5 8 Tf 0 0 0 rg  T* (set) Tj ( ) Tj (horizontal) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (scroll) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (mode) Tj ( ) Tj (On) Tj  T*  T* /F7 8 Tf .501961 .501961 .501961 rg (# Reasociar algunas teclas:) Tj /F5 8 Tf 0 0 0 rg  T* (Meta) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (h) Tj (:) Tj ( ) Tj (backward) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (kill) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (word) Tj  T* .729412 .129412 .129412 rg ("\\C-u") Tj 0 0 0 rg (:) Tj ( ) Tj (universal) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (argument) Tj  T* .729412 .129412 .129412 rg ("\\C-x\\C-r") Tj 0 0 0 rg (:) Tj ( ) Tj (re) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (read) Tj .188235 .188235 .188235 rg (-) Tj 0 0 0 rg (init) Tj .188235 .188235 .188235 rg (-) Tj 0 .439216 .12549 rg (file) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 273.7367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.407248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Observa que la asociaci\363n por omisi\363n para la tecla ) Tj /F5 8 Tf (Tab) Tj /F1 8 Tf ( en Python es insertar un caracter ) Tj /F5 8 Tf (Tab) Tj T* 0 Tw -0.196002 Tw /F1 8 Tf (\(tabulaci\363n horizontal\) en vez de la funci\363n por defecto de Readline de completar nombres de archivo.) Tj T* 0 Tw (Si insistes, puedes redefinir esto poniendo) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 240.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (Tab) Tj (:) Tj ( ) Tj (complete) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 208.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .236283 Tw 12 TL /F1 8 Tf 0 0 0 rg (en tu ) Tj /F5 8 Tf (~/.inputrc) Tj /F1 8 Tf (. \(Desde luego, esto hace m\341s dif\355cil escribir l\355neas de continuaci\363n indentadas si) Tj T* 0 Tw (est\341s acostumbrado a usar ) Tj /F5 8 Tf (Tab) Tj /F1 8 Tf ( para tal prop\363sito.\)) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 208.9367 cm
Q
q
1 0 0 1 70.4315 178.9367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.633815 Tw 12 TL /F1 8 Tf 0 0 0 rg (Hay disponible opcionalmente completado autom\341tico de variables y nombres de m\363dulos. Para) Tj T* 0 Tw (activarlo en el modo interactivo del int\351rprete, agrega lo siguiente a tu archivo de arranque: ) Tj /F1 6 Tf 0 0 .501961 rg 4 Ts (1) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 134.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (rlcompleter) Tj /F5 8 Tf .188235 .188235 .188235 rg (,) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (readline) Tj /F5 8 Tf 0 0 0 rg  T* (readline) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (parse_and_bind) Tj (\() Tj .729412 .129412 .129412 rg ('tab: complete') Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 102.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .854887 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esto asocia la tecla ) Tj /F5 8 Tf (Tab) Tj /F1 8 Tf ( a la funci\363n de completado, con lo cual presionar la tecla ) Tj /F5 8 Tf (Tab) Tj /F1 8 Tf ( dos veces) Tj T* 0 Tw .077998 Tw (sugerir\341 valores para completar; se fija en nombres de instrucciones Python, las variables locales del) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (107) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R380': class PDFStream 
380 0 obj
% page stream
<< /Length 5279 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.9367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.113664 Tw 12 TL /F1 8 Tf 0 0 0 rg (momento, y los nombres de m\363dulos disponibles. Para expresiones con puntos como ) Tj /F5 8 Tf (string.a) Tj /F1 8 Tf (,) Tj T* 0 Tw -0.025649 Tw (evaluar\341 la expresi\363n hasta el \372ltimo ) Tj /F5 8 Tf ('.') Tj /F1 8 Tf ( y luego sugerir\341 opciones a completar de los atributos de el) Tj T* 0 Tw .839198 Tw (objeto resultante. Tenga en cuenta que esto puede ejecutar c\363digo definido por la aplicaci\363n si un) Tj T* 0 Tw (objeto con un m\351todo ) Tj /F5 8 Tf (__getattr__\(\)) Tj /F1 8 Tf ( forma parte de la expresi\363n.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 482.9367 cm
q
BT 1 0 0 1 0 66.256 Tm .585426 Tw 12 TL /F1 8 Tf 0 0 0 rg (Un archivo de inicializaci\363n con m\341s capacidades podr\355a ser como este ejemplo. Observa que \351ste) Tj T* 0 Tw .289051 Tw (borra los nombres que crea una vez que no se necesitan m\341s; esto se hace debido a que el archivo) Tj T* 0 Tw .221065 Tw (de inicializaci\363n se ejecuta en el mismo espacio de nombres que los comandos interactivos, y borrar) Tj T* 0 Tw .604531 Tw (los nombres evita que se produzcan efectos colaterales en el entorno interactivo. Tal vez te resulte) Tj T* 0 Tw -0.280925 Tw (c\363modo mantener algunos de los m\363dulos importados, tales como ) Tj /F5 8 Tf (os) Tj /F1 8 Tf (, que usualmente acaban siendo) Tj T* 0 Tw (necesarios en la mayor\355a de las sesiones con el int\351rprete.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 162.2729 cm
q
q
.928337 0 0 .928337 0 0 cm
q
1 0 0 1 6.4 6.89405 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 386.4 336 re B*
Q
q
BT 1 0 0 1 0 318.968 Tm 12 TL /F7 8 Tf .501961 .501961 .501961 rg (# A\361adir auto-completado y almacenamiento de archivo de hist\363rico a tu) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (# int\351rprete de Python interactivo. Requiere Python 2.0+, y readline.) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (# El autocompletado esta ligado a la tecla Esc por defecto \(puedes) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (# modificarlo - lee la documentaci\363n de readline\).) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (#) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (# Guarda este archivo en ~/.pystartup, y configura una variable de inicio) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (# para que lo apunte: en bash "export PYTHONSTARTUP=/home/usuario/.pystartup".) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (#) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (# Ten en cuenta que PYTHONSTARTUP *no* expande "~", as\355 que debes poner) Tj /F5 8 Tf 0 0 0 rg  T* /F7 8 Tf .501961 .501961 .501961 rg (# la ruta completa a tu directorio personal.) Tj /F5 8 Tf 0 0 0 rg  T*  T* /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (atexit) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (os) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (readline) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (rlcompleter) Tj /F5 8 Tf 0 0 0 rg  T*  T* (historyPath) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (os) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (path) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (expanduser) Tj (\() Tj .729412 .129412 .129412 rg ("~/.pyhistory") Tj 0 0 0 rg (\)) Tj  T*  T* /F6 8 Tf 0 .501961 0 rg (def) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf 0 .376471 .690196 rg (save_history) Tj /F5 8 Tf 0 0 0 rg (\() Tj (historyPath) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg (historyPath) Tj (\):) Tj  T* (    ) Tj /F6 8 Tf 0 .501961 0 rg (import) Tj /F5 8 Tf 0 0 0 rg ( ) Tj /F6 8 Tf .054902 .517647 .709804 rg (readline) Tj /F5 8 Tf 0 0 0 rg  T* (    ) Tj (readline) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (write_history_file) Tj (\() Tj (historyPath) Tj (\)) Tj  T*  T* /F6 8 Tf 0 .501961 0 rg (if) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (os) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (path) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (exists) Tj (\() Tj (historyPath) Tj (\):) Tj  T* (    ) Tj (readline) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (read_history_file) Tj (\() Tj (historyPath) Tj (\)) Tj  T*  T* (atexit) Tj .188235 .188235 .188235 rg (.) Tj 0 0 0 rg (register) Tj (\() Tj (save_history) Tj (\)) Tj  T* /F6 8 Tf 0 .501961 0 rg (del) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (os) Tj (,) Tj ( ) Tj (atexit) Tj (,) Tj ( ) Tj (readline) Tj (,) Tj ( ) Tj (rlcompleter) Tj (,) Tj ( ) Tj (save_history) Tj (,) Tj ( ) Tj (historyPath) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 154.2729 cm
Q
q
1 0 0 1 70.4315 154.2729 cm
Q
q
1 0 0 1 70.4315 154.2729 cm
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (108) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R381': class PDFStream 
381 0 obj
% page stream
<< /Length 4927 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 592.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Comentario) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 526.1367 cm
q
BT 1 0 0 1 0 54.256 Tm 2.051664 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esta funcionalidad es un paso enorme hacia adelante comparado con versiones anteriores del) Tj T* 0 Tw -0.296925 Tw (interprete; de todos modos, quedan pendientes algunos deseos: ser\355a bueno si la indentaci\363n correcta) Tj T* 0 Tw .427748 Tw (se sugiriera en las lineas de continuaci\363n \(el parser sabe si se requiere una indentaci\363n a continua\255) Tj T* 0 Tw -0.017335 Tw (ci\363n\). El mecanismo de completado podr\355a usar la tabla de s\355mbolos del int\351rprete. Un comando para) Tj T* 0 Tw (verificar \(o incluso sugerir\) coincidencia de par\351ntesis, comillas, etc. tambi\351n ser\355a \372til.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 508.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 169.278 0 Td 12 TL /F1 8 Tf .545098 0 0 rg (Notas) Tj T* -169.278 0 Td ET
Q
Q
q
1 0 0 1 70.4315 508.1367 cm
Q
q
1 0 0 1 70.4315 478.1367 cm
0 0 0 rg
BT /F2 10 Tf 12 TL ET
q
1 0 0 1 6 15 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 .501961 rg (1) Tj T* ET
Q
Q
q
1 0 0 1 91.03937 3 cm
q
BT 1 0 0 1 0 18.256 Tm 1.015691 Tw 12 TL /F1 8 Tf 0 0 0 rg (Python ejecutar\341 el contenido de un archivo indicado por la variable de) Tj T* 0 Tw (entorno ) Tj /F3 8 Tf (PYTHONSTARTUP) Tj /F1 8 Tf ( cuando inicies un int\351rprete interactivo.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 70.4315 478.1367 cm
Q
q
1 0 0 1 70.4315 478.1367 cm
Q
q
1 0 0 1 70.4315 478.1367 cm
Q
q
1 0 0 1 70.4315 423.7367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 48.4 re B*
Q
q
BT 1 0 0 1 10 26.912 Tm 19.2 TL /F1 16 Tf .12549 .262745 .360784 rg (Aritm\351tica de Punto Flotante: Problemas y) Tj T* (Limitaciones) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 393.7367 cm
q
BT 1 0 0 1 0 18.256 Tm .751198 Tw 12 TL /F1 8 Tf 0 0 0 rg (Los n\372meros de punto flotante se representan en el hardware de la computadora en fracciones en) Tj T* 0 Tw (base 2 \(binario\). Por ejemplo, la fracci\363n decimal) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 360.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
.376471 0 .878431 rg
BT 1 0 0 1 0 6.992 Tm /F6 8 Tf 12 TL (0.125) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 340.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (tiene el valor 1/10 + 2/100 + 5/1000, y de la misma manera la fracci\363n binaria) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 308.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
.376471 0 .878431 rg
BT 1 0 0 1 0 6.992 Tm /F6 8 Tf 12 TL (0.001) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 276.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .058443 Tw 12 TL /F1 8 Tf 0 0 0 rg (tiene el valor 0/2 + 0/4 + 1/8. Estas dos fracciones tienen valores id\351nticos, la \372nica diferencia real es) Tj T* 0 Tw (que la primera est\341 escrita en notaci\363n fraccional en base 10 y la segunda en base 2.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 222.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .284397 Tw 12 TL /F1 8 Tf 0 0 0 rg (Desafortunadamente, la mayor\355a de las fracciones decimales no pueden representarse exactamente) Tj T* 0 Tw -0.088925 Tw (como fracciones binarias. Como consecuencia, en general los n\372meros de punto flotante decimal que) Tj T* 0 Tw 1.250569 Tw (ingres\341s en la computadora son s\363lo aproximados por los n\372meros de punto flotante binario que) Tj T* 0 Tw (realmente se guardan en la m\341quina.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 192.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.488252 Tw 12 TL /F1 8 Tf 0 0 0 rg (El problema es m\341s f\341cil de entender primero en base 10. Consider\341 la fracci\363n 1/3. Pod\351s aproximarla) Tj T* 0 Tw (como una fracci\363n de base 10) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 159.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
.376471 0 .878431 rg
BT 1 0 0 1 0 6.992 Tm /F6 8 Tf 12 TL (0.3) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 139.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (o, mejor,) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 106.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
.376471 0 .878431 rg
BT 1 0 0 1 0 6.992 Tm /F6 8 Tf 12 TL (0.33) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (109) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R382': class PDFStream 
382 0 obj
% page stream
<< /Length 5246 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (o, mejor,) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 564.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
.376471 0 .878431 rg
BT 1 0 0 1 0 6.992 Tm /F6 8 Tf 12 TL (0.333) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 532.1367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.017869 Tw 12 TL /F1 8 Tf 0 0 0 rg (y as\355. No importa cuantos d\355gitos desees escribir, el resultado nunca ser\341 exactamente 1/3, pero ser\341) Tj T* 0 Tw (una aproximaci\363n cada vez mejor de 1/3.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 490.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.286446 Tw 12 TL /F1 8 Tf 0 0 0 rg (De la misma manera, no importa cuantos d\355gitos en base 2 quieras usar, el valor decimal 0.1 no puede) Tj T* 0 Tw -0.157252 Tw (representarse exactamente como una fracci\363n en base 2. En base 2, 1/10 es la siguiente fracci\363n que) Tj T* 0 Tw (se repite infinitamente:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 457.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F6 8 Tf .376471 0 .878431 rg (0.0001100110011001100110011001100110011001100110011) Tj /F5 8 Tf .188235 .188235 .188235 rg (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 437.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Fren\341 en cualquier n\372mero finito de bits, y tendr\341s una aproximaci\363n. Es por esto que ves cosas como:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 392.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0.10000000000000001) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 312.5367 cm
q
BT 1 0 0 1 0 66.256 Tm .515618 Tw 12 TL /F1 8 Tf 0 0 0 rg (En la mayor\355a de las m\341quinas de hoy en d\355a, eso es lo que ver\341s si ingres\341s 0.1 en un prompt de) Tj T* 0 Tw .396531 Tw (Python. Quiz\341s no, sin embargo, porque la cantidad de bits usados por el hardware para almacenar) Tj T* 0 Tw .041331 Tw (valores de punto flotante puede variar en las distintas m\341quinas, y Python s\363lo muestra una aproxim\255) Tj T* 0 Tw -0.046669 Tw (aci\363n del valor decimal verdadero de la aproximaci\363n binaria guardada por la m\341quina. En la mayor\355a) Tj T* 0 Tw -0.253602 Tw (de las m\341quinas, si Python fuera a mostrar el verdadero valor decimal de la aproximaci\363n almacenada) Tj T* 0 Tw (por 0.1, tendr\355a que mostrar sin embargo) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 267.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0.1000000000000000055511151231257827021181583404541015625) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 223.7367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.794931 Tw 12 TL /F1 8 Tf 0 0 0 rg (El prompt de Python usa la funci\363n integrada ) Tj /F5 8 Tf (repr\(\)) Tj /F1 8 Tf ( para obtener una versi\363n en cadena de) Tj T* 0 Tw -0.388618 Tw (caracteres de todo lo que muestra. Para flotantes, ) Tj /F5 8 Tf (repr\(float\)) Tj /F1 8 Tf ( redondea el valor decimal verdadero) Tj T* 0 Tw (a 17 d\355gitos significativos, dando) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 190.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
.376471 0 .878431 rg
BT 1 0 0 1 0 6.992 Tm /F6 8 Tf 12 TL (0.10000000000000001) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 146.9367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.766459 Tw 12 TL /F5 8 Tf 0 0 0 rg (repr\(float\)) Tj /F1 8 Tf ( produce 17 d\355gitos significativos porque esto es suficiente \(en la mayor\355a de las) Tj T* 0 Tw .378767 Tw (m\341quinas\) para que se cumpla ) Tj /F5 8 Tf (eval\(repr\(x\)\) == x) Tj /F1 8 Tf ( exactamente para todos los flotantes finitos) Tj T* 0 Tw /F4 8 Tf (X) Tj /F1 8 Tf (, pero redondeando a 16 d\355gitos no es suficiente para que sea verdadero.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 104.9367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.412668 Tw 12 TL /F1 8 Tf 0 0 0 rg (Not\341 que esta es la verdadera naturaleza del punto flotante binario: no es un bug de Python, y tampoco) Tj T* 0 Tw .527332 Tw (es un bug en tu c\363digo. Ver\341s lo mismo en todos los lenguajes que soportan la aritm\351tica de punto) Tj T* 0 Tw .034586 Tw (flotante de tu hardware \(a pesar de que en algunos lenguajes por default no ) Tj /F4 8 Tf (muestren) Tj /F1 8 Tf ( la diferencia, o) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (110) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R383': class PDFStream 
383 0 obj
% page stream
<< /Length 5380 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 596.9367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (no lo hagan en todos los modos de salida\).) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 566.9367 cm
q
BT 1 0 0 1 0 18.256 Tm .218398 Tw 12 TL /F1 8 Tf 0 0 0 rg (La funci\363n integrada :func: ) Tj /F4 8 Tf (str) Tj /F1 8 Tf ( de Python produce s\363lo 12 d\355gitos significativos, y quiz\341s quieras usar) Tj T* 0 Tw (esa. Normalmente ) Tj /F5 8 Tf (eval\(str\(x\)\)) Tj /F1 8 Tf ( no reproducir\341 ) Tj /F4 8 Tf (x) Tj /F1 8 Tf (, pero la salida quiz\341s sea m\341s placentera de ver:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 522.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (print) Tj /F5 8 Tf 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (str) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0.1) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 478.1367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.160233 Tw 12 TL /F1 8 Tf 0 0 0 rg (Es importante darse cuenta de que esto es, realmente, una ilusi\363n: el valor en la m\341quina no es) Tj T* 0 Tw -0.019717 Tw (exactamente 1/10, simplemente est\341s redondeando el valor que se ) Tj /F4 8 Tf (muestra) Tj /F1 8 Tf ( del valor verdadero de la) Tj T* 0 Tw (m\341quina.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 460.1367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (A esta se siguen otras sorpresas. Por ejemplo, luego de ver:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 415.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0.10000000000000001) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 383.3367 cm
q
BT 1 0 0 1 0 18.256 Tm .378931 Tw 12 TL /F1 8 Tf 0 0 0 rg (quiz\341s est\351s tentado de usar la funci\363n ) Tj /F5 8 Tf (round\(\)) Tj /F1 8 Tf ( para recortar el resultado al d\355gito que esperabas.) Tj T* 0 Tw (Pero es lo mismo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 338.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (round) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0.10000000000000001) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 294.5367 cm
q
BT 1 0 0 1 0 30.256 Tm .17341 Tw 12 TL /F1 8 Tf 0 0 0 rg (El problema es que el valor de punto flotante binario almacenado para "0.1" ya era la mejor aproxim\255) Tj T* 0 Tw .456305 Tw (aci\363n binaria posible de 1/10, de manera que intentar redondearla nuevamente no puede mejorarla:) Tj T* 0 Tw (ya era la mejor posible.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 264.5367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.493065 Tw 12 TL /F1 8 Tf 0 0 0 rg (Otra consecuencia es que como 0.1 no es exactamente 1/10, sumar diez valores de 0.1 quiz\341s) Tj T* 0 Tw (tampoco d\351 exactamente 1.0:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 171.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (suma) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0.0) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf 0 .501961 0 rg (for) Tj /F5 8 Tf 0 0 0 rg ( ) Tj (i) Tj ( ) Tj /F6 8 Tf (in) Tj /F5 8 Tf ( ) Tj 0 .439216 .12549 rg (range) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\):) Tj  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg (     ) Tj (suma) Tj ( ) Tj .188235 .188235 .188235 rg (+=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg  T* .188235 .188235 .188235 rg (...) Tj 0 0 0 rg  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (suma) Tj  T* /F6 8 Tf .376471 0 .878431 rg (0.99999999999999989) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 115.7367 cm
q
BT 1 0 0 1 0 42.256 Tm .937331 Tw 12 TL /F1 8 Tf 0 0 0 rg (La aritm\351tica de punto flotante binaria tiene varias sorpresas como esta. El problema con "0.1" es) Tj T* 0 Tw 1.227141 Tw (explicado con detalle abajo, en la secci\363n "Error de Representaci\363n". Mir\341 los Peligros del Punto) Tj T* 0 Tw 2.045998 Tw (Flotante \(en ingl\351s, ) Tj 0 0 .501961 rg (The Perils of Floating Point) Tj 0 0 0 rg (\) para una m\341s completa recopilaci\363n de otras) Tj T* 0 Tw (sorpresas normales.) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (111) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R384': class PDFStream 
384 0 obj
% page stream
<< /Length 5807 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 548.9367 cm
q
BT 1 0 0 1 0 54.256 Tm .089554 Tw 12 TL /F1 8 Tf 0 0 0 rg (Como dice cerca del final, "no hay respuestas f\341ciles". A pesar de eso, \241no le tengas mucho miedo al) Tj T* 0 Tw .127731 Tw (punto flotante! Los errores en las operaciones flotantes de Python se heredan del hardware de punto) Tj T* 0 Tw .451237 Tw (flotante, y en la mayor\355a de las m\341quinas est\341n en el orden de no m\341s de una 1 parte en 2**53 por) Tj T* 0 Tw .315248 Tw (operaci\363n. Eso es m\341s que adecuado para la mayor\355a de las tareas, pero necesit\341s tener en cuenta) Tj T* 0 Tw (que no es aritm\351tica decimal, y que cada operaci\363n de punto flotante sufre un nuevo error de redondeo.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 494.9367 cm
q
BT 1 0 0 1 0 42.256 Tm -0.121178 Tw 12 TL /F1 8 Tf 0 0 0 rg (A pesar de que existen casos patol\363gicos, para la mayor\355a de usos casuales de la aritm\351tica de punto) Tj T* 0 Tw 1.464265 Tw (flotante al final ver\341s el resultado que esper\341s si simplemente redonde\341s lo que mostr\341s de tus) Tj T* 0 Tw .425536 Tw (resultados finales al n\372mero de d\355gitos decimales que esper\341s. ) Tj /F5 8 Tf (str\(\)) Tj /F1 8 Tf ( es normalmente suficiente, y) Tj T* 0 Tw (para un control m\341s fino mir\341 los par\341metros del m\351todo de formateo ) Tj /F5 8 Tf (str.format\(\)) Tj /F1 8 Tf ( en ) Tj /F4 8 Tf (formatstrings) Tj /F1 8 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 494.9367 cm
Q
q
1 0 0 1 70.4315 494.9367 cm
Q
q
1 0 0 1 70.4315 494.9367 cm
Q
q
1 0 0 1 70.4315 462.1367 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n 0 0 359.452 26.8 re B*
Q
q
BT 1 0 0 1 10 6.748 Tm 16.8 TL /F1 14 Tf .12549 .262745 .360784 rg (Error de Representaci\363n) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 420.1367 cm
q
BT 1 0 0 1 0 30.256 Tm -0.378446 Tw 12 TL /F1 8 Tf 0 0 0 rg (Esta secci\363n explica el ejemplo "0.1" en detalle, y muestra como en la mayor\355a de los casos vos mismo) Tj T* 0 Tw .235141 Tw (pod\351s realizar un an\341lisis exacto como este. Se asume un conocimiento b\341sico de la representaci\363n) Tj T* 0 Tw (de punto flotante binario.) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 366.1367 cm
q
BT 1 0 0 1 0 42.256 Tm .338931 Tw 12 TL /F4 8 Tf 0 0 0 rg (Error de representaci\363n) Tj /F1 8 Tf ( se refiere al hecho de que algunas \(la mayor\355a\) de las fracciones decimales) Tj T* 0 Tw -0.368288 Tw (no pueden representarse exactamente como fracciones binarias \(en base 2\). Esta es la raz\363n principal) Tj T* 0 Tw 1.011248 Tw (de por qu\351 Python \(o Perl, C, C++, Java, Fortran, y tantos otros\) frecuentemente no mostrar\341n el) Tj T* 0 Tw (n\372mero decimal exacto que esper\341s:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 321.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (0.1) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (0.10000000000000001) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 241.3367 cm
q
BT 1 0 0 1 0 66.256 Tm .603998 Tw 12 TL /F1 8 Tf 0 0 0 rg (\277Por qu\351 es eso? 1/10 no es representable exactamente como una fracci\363n binaria. Casi todas las) Tj T* 0 Tw 1.018931 Tw (m\341quinas de hoy en d\355a \(Noviembre del 2000\) usan aritm\351tica de punto flotante IEEE-754, y casi) Tj T* 0 Tw -0.323717 Tw (todas las plataformas mapean los flotantes de Python al "doble precisi\363n" de IEEE-754. Estos "dobles") Tj T* 0 Tw -0.114891 Tw (tienen 53 bits de precisi\363n, por lo tanto en la entrada la computadora intenta convertir 0.1 a la fracci\363n) Tj T* 0 Tw -0.069884 Tw (m\341s cercana que puede de la forma ) Tj /F4 8 Tf (J) Tj /F1 8 Tf (/2***N* donde ) Tj /F4 8 Tf (J) Tj /F1 8 Tf ( es un entero que contiene exactamente 53 bits.) Tj T* 0 Tw (Reescribiendo) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 208.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (~=) Tj 0 0 0 rg ( ) Tj (J) Tj ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj 0 0 0 rg (N) Tj (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 188.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (como) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 155.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F5 8 Tf 0 0 0 rg (J) Tj ( ) Tj .188235 .188235 .188235 rg (~=) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj 0 0 0 rg (N) Tj ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 123.7367 cm
q
BT 1 0 0 1 0 18.256 Tm -0.129054 Tw 12 TL /F1 8 Tf 0 0 0 rg (y recordando que ) Tj /F4 8 Tf (J) Tj /F1 8 Tf ( tiene exactamente 53 bits \(es ) Tj /F5 8 Tf (>) Tj (= 2**52) Tj /F1 8 Tf ( pero ) Tj /F5 8 Tf (<) Tj ( 2**53) Tj /F1 8 Tf (\), el mejor valor para ) Tj /F4 8 Tf (N) Tj /F1 8 Tf ( es) Tj T* 0 Tw (56:) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (112) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R385': class PDFStream 
385 0 obj
% page stream
<< /Length 6397 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 524.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 84 re B*
Q
q
BT 1 0 0 1 0 66.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (52) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (4503599627370496) Tj /F5 8 Tf 0 0 0 rg (L) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (53) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (9007199254740992) Tj /F5 8 Tf 0 0 0 rg (L) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (56) Tj /F5 8 Tf .188235 .188235 .188235 rg (/) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (7205759403792793) Tj /F5 8 Tf 0 0 0 rg (L) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 492.1367 cm
q
BT 1 0 0 1 0 18.256 Tm .241332 Tw 12 TL /F1 8 Tf 0 0 0 rg (O sea, 56 es el \372nico valor para ) Tj /F4 8 Tf (N) Tj /F1 8 Tf ( que deja ) Tj /F4 8 Tf (J) Tj /F1 8 Tf ( con exactamente 53 bits. El mejor valor posible para ) Tj /F4 8 Tf (J) Tj T* 0 Tw /F1 8 Tf (es entonces el cociente redondeado:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 435.3367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 48 re B*
Q
q
BT 1 0 0 1 0 30.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (q) Tj (,) Tj ( ) Tj (r) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj 0 .439216 .12549 rg (divmod) Tj 0 0 0 rg (\() Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (56) Tj /F5 8 Tf 0 0 0 rg (,) Tj ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf 0 0 0 rg (\)) Tj  T* .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (r) Tj  T* /F6 8 Tf .376471 0 .878431 rg (6) Tj /F5 8 Tf 0 0 0 rg (L) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 415.3367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Ya que el resto es m\341s que la mitad de 10, la mejor aproximaci\363n se obtiene redonde\341ndolo:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 370.5367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj (q) Tj .188235 .188235 .188235 rg (+) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (7205759403792794) Tj /F5 8 Tf 0 0 0 rg (L) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 350.5367 cm
q
BT 1 0 0 1 0 6.256 Tm 12 TL /F1 8 Tf 0 0 0 rg (Por lo tanto la mejor aproximaci\363n a 1/10 en doble precisi\363n 754 es eso sobre 2**56, o) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 317.7367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 24 re B*
Q
q
BT 1 0 0 1 0 6.968 Tm 12 TL /F6 8 Tf .376471 0 .878431 rg (7205759403792794) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (72057594037927936) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 273.7367 cm
q
BT 1 0 0 1 0 30.256 Tm 1.510248 Tw 12 TL /F1 8 Tf 0 0 0 rg (Not\341 que como lo redondeamos, esto es un poquito m\341s grande que 1/10; si no lo hubi\351ramos) Tj T* 0 Tw 1.119748 Tw (redondeado, el cociente hubiese sido un poquito menor que 1/10. \241Pero no hay caso en que sea) Tj T* 0 Tw /F4 8 Tf (exactamente) Tj /F1 8 Tf ( 1/10!) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 243.7367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.989748 Tw 12 TL /F1 8 Tf 0 0 0 rg (Entonces la computadora nunca "ve" 1/10: lo que ve es la fracci\363n exacta de arriba, la mejor) Tj T* 0 Tw (aproximaci\363n al flotante doble de 754 que puede obtener:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 198.9367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (.) Tj /F6 8 Tf .376471 0 .878431 rg (1) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (56) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (7205759403792794.0) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 166.9367 cm
q
BT 1 0 0 1 0 18.256 Tm 1.258398 Tw 12 TL /F1 8 Tf 0 0 0 rg (Si multiplicamos esa fracci\363n por 10**30, podemos ver el valor \(truncado\) de sus 30 d\355gitos m\341s) Tj T* 0 Tw (significativos:) Tj T* ET
Q
Q
q
1 0 0 1 70.4315 122.1367 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.4 6.4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -6 -6 358.652 36 re B*
Q
q
BT 1 0 0 1 0 18.968 Tm 12 TL /F5 8 Tf .188235 .188235 .188235 rg (>) Tj (>) Tj (>) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (7205759403792794) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (*) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (10) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (30) Tj /F5 8 Tf 0 0 0 rg ( ) Tj .188235 .188235 .188235 rg (/) Tj 0 0 0 rg ( ) Tj /F6 8 Tf .376471 0 .878431 rg (2) Tj /F5 8 Tf .188235 .188235 .188235 rg (**) Tj /F6 8 Tf .376471 0 .878431 rg (56) Tj /F5 8 Tf 0 0 0 rg  T* /F6 8 Tf .376471 0 .878431 rg (100000000000000005551115123125) Tj /F5 8 Tf 0 0 0 rg (L) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 70.4315 102.1367 cm
q
BT 1 0 0 1 0 6.256 Tm -0.077069 Tw 12 TL /F1 8 Tf 0 0 0 rg (lo que significa que el valor exacto almacenado en la computadora es aproximadamente igual al valor) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (113) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
% 'R386': class PDFStream 
386 0 obj
% page stream
<< /Length 804 >>
stream
1 0 0 1 0 0 cm BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 70.4315 560.9367 cm
q
BT 1 0 0 1 0 42.256 Tm 1.00133 Tw 12 TL /F1 8 Tf 0 0 0 rg (decimal 0.100000000000000005551115123125. Redondeando eso a 17 d\355gitos significativos da el) Tj T* 0 Tw .859597 Tw (0.10000000000000001 que Python muestra \(bueno, mostrar\355a en cualquier plataforma que cumpla) Tj T* 0 Tw .428469 Tw (con 754 cuya biblioteca en C haga la mejor conversi\363n posible en entrada y salida... \241la tuya quiz\341s) Tj T* 0 Tw (no!\).) Tj T* ET
Q
Q
q
1 0 0 1 56.69291 639.9685 cm
q
BT 1 0 0 1 0 6.256 Tm 161.0046 0 Td 12 TL /F1 8 Tf 0 0 0 rg (Tutorial de Python) Tj T* -161.0046 0 Td ET
Q
Q
q
1 0 0 1 56.69291 56.69291 cm
q
BT 1 0 0 1 0 6.256 Tm 186.7926 0 Td 12 TL /F1 8 Tf 0 0 0 rg (114) Tj T* -186.7926 0 Td ET
Q
Q
 
endstream

endobj
xref
0 387
0000000000 65535 f
0000000113 00000 n
0000000296 00000 n
0000000461 00000 n
0000000630 00000 n
0000000817 00000 n
0000001045 00000 n
0000001224 00000 n
0000001524 00000 n
0000001806 00000 n
0000001965 00000 n
0000002246 00000 n
0000002529 00000 n
0000002701 00000 n
0000002892 00000 n
0000003119 00000 n
0000003421 00000 n
0000003717 00000 n
0000003943 00000 n
0000004245 00000 n
0000004526 00000 n
0000004808 00000 n
0000005090 00000 n
0000005372 00000 n
0000005654 00000 n
0000005936 00000 n
0000006218 00000 n
0000006501 00000 n
0000006703 00000 n
0000006932 00000 n
0000007235 00000 n
0000007517 00000 n
0000007799 00000 n
0000008081 00000 n
0000008363 00000 n
0000008645 00000 n
0000008927 00000 n
0000009209 00000 n
0000009491 00000 n
0000009787 00000 n
0000010015 00000 n
0000010318 00000 n
0000010600 00000 n
0000010882 00000 n
0000011164 00000 n
0000011446 00000 n
0000011728 00000 n
0000012023 00000 n
0000012282 00000 n
0000012509 00000 n
0000012821 00000 n
0000013103 00000 n
0000013385 00000 n
0000013667 00000 n
0000013949 00000 n
0000014231 00000 n
0000014513 00000 n
0000014795 00000 n
0000015077 00000 n
0000015359 00000 n
0000015641 00000 n
0000015923 00000 n
0000016205 00000 n
0000016501 00000 n
0000016741 00000 n
0000016968 00000 n
0000017295 00000 n
0000017523 00000 n
0000017826 00000 n
0000018108 00000 n
0000018390 00000 n
0000018672 00000 n
0000018954 00000 n
0000019236 00000 n
0000019518 00000 n
0000019800 00000 n
0000020082 00000 n
0000020379 00000 n
0000020606 00000 n
0000020909 00000 n
0000021191 00000 n
0000021473 00000 n
0000021755 00000 n
0000022037 00000 n
0000022319 00000 n
0000022601 00000 n
0000022883 00000 n
0000023165 00000 n
0000023447 00000 n
0000023729 00000 n
0000024011 00000 n
0000024293 00000 n
0000024575 00000 n
0000024857 00000 n
0000025139 00000 n
0000025421 00000 n
0000025718 00000 n
0000025946 00000 n
0000026249 00000 n
0000026531 00000 n
0000026813 00000 n
0000027096 00000 n
0000027379 00000 n
0000027662 00000 n
0000027945 00000 n
0000028242 00000 n
0000028511 00000 n
0000028765 00000 n
0000029080 00000 n
0000029363 00000 n
0000029646 00000 n
0000029929 00000 n
0000030212 00000 n
0000030510 00000 n
0000030738 00000 n
0000031043 00000 n
0000031326 00000 n
0000031609 00000 n
0000031892 00000 n
0000032175 00000 n
0000032458 00000 n
0000032741 00000 n
0000033024 00000 n
0000033307 00000 n
0000033591 00000 n
0000033875 00000 n
0000034159 00000 n
0000034443 00000 n
0000034727 00000 n
0000035024 00000 n
0000035265 00000 n
0000035507 00000 n
0000035749 00000 n
0000036018 00000 n
0000036268 00000 n
0000036519 00000 n
0000036760 00000 n
0000037126 00000 n
0000037424 00000 n
0000037654 00000 n
0000037960 00000 n
0000038258 00000 n
0000038487 00000 n
0000038793 00000 n
0000039090 00000 n
0000039328 00000 n
0000039634 00000 n
0000039918 00000 n
0000040202 00000 n
0000040486 00000 n
0000040628 00000 n
0000040842 00000 n
0000040972 00000 n
0000041162 00000 n
0000041322 00000 n
0000041552 00000 n
0000041762 00000 n
0000041920 00000 n
0000042078 00000 n
0000042299 00000 n
0000042455 00000 n
0000042638 00000 n
0000042816 00000 n
0000042986 00000 n
0000043225 00000 n
0000043443 00000 n
0000043595 00000 n
0000043774 00000 n
0000043940 00000 n
0000044113 00000 n
0000044260 00000 n
0000044433 00000 n
0000044659 00000 n
0000044814 00000 n
0000044986 00000 n
0000045166 00000 n
0000045380 00000 n
0000045553 00000 n
0000045729 00000 n
0000045957 00000 n
0000046122 00000 n
0000046297 00000 n
0000046479 00000 n
0000046661 00000 n
0000046831 00000 n
0000046994 00000 n
0000047160 00000 n
0000047378 00000 n
0000047577 00000 n
0000047740 00000 n
0000047919 00000 n
0000048105 00000 n
0000048282 00000 n
0000048450 00000 n
0000048625 00000 n
0000048803 00000 n
0000048965 00000 n
0000049135 00000 n
0000049311 00000 n
0000049487 00000 n
0000049664 00000 n
0000049877 00000 n
0000050090 00000 n
0000050266 00000 n
0000050466 00000 n
0000050639 00000 n
0000050819 00000 n
0000050998 00000 n
0000051192 00000 n
0000051363 00000 n
0000051553 00000 n
0000051730 00000 n
0000051948 00000 n
0000052164 00000 n
0000052315 00000 n
0000052531 00000 n
0000052706 00000 n
0000052871 00000 n
0000053094 00000 n
0000053249 00000 n
0000053417 00000 n
0000053594 00000 n
0000053770 00000 n
0000053951 00000 n
0000054134 00000 n
0000054303 00000 n
0000054512 00000 n
0000054689 00000 n
0000054876 00000 n
0000055101 00000 n
0000055266 00000 n
0000055437 00000 n
0000055612 00000 n
0000055769 00000 n
0000055942 00000 n
0000056156 00000 n
0000056303 00000 n
0000056479 00000 n
0000056651 00000 n
0000056836 00000 n
0000057004 00000 n
0000057174 00000 n
0000057338 00000 n
0000057576 00000 n
0000057745 00000 n
0000057918 00000 n
0000058099 00000 n
0000058306 00000 n
0000058488 00000 n
0000058658 00000 n
0000058832 00000 n
0000059006 00000 n
0000059181 00000 n
0000059364 00000 n
0000059539 00000 n
0000059701 00000 n
0000059949 00000 n
0000060109 00000 n
0000060278 00000 n
0000060476 00000 n
0000060650 00000 n
0000060816 00000 n
0000060990 00000 n
0000061177 00000 n
0000061354 00000 n
0000061533 00000 n
0000061799 00000 n
0000061964 00000 n
0000062150 00000 n
0000062326 00000 n
0000062480 00000 n
0000062724 00000 n
0000062858 00000 n
0000064021 00000 n
0000070063 00000 n
0000076209 00000 n
0000081628 00000 n
0000087849 00000 n
0000093588 00000 n
0000099420 00000 n
0000104548 00000 n
0000110469 00000 n
0000116287 00000 n
0000123584 00000 n
0000129337 00000 n
0000134765 00000 n
0000141201 00000 n
0000147813 00000 n
0000154855 00000 n
0000160466 00000 n
0000166144 00000 n
0000173342 00000 n
0000181921 00000 n
0000188044 00000 n
0000195733 00000 n
0000202489 00000 n
0000210823 00000 n
0000217236 00000 n
0000224355 00000 n
0000232046 00000 n
0000239524 00000 n
0000244639 00000 n
0000252087 00000 n
0000257767 00000 n
0000266012 00000 n
0000271267 00000 n
0000278530 00000 n
0000282229 00000 n
0000289485 00000 n
0000296356 00000 n
0000304917 00000 n
0000314285 00000 n
0000324161 00000 n
0000331031 00000 n
0000337729 00000 n
0000345711 00000 n
0000352688 00000 n
0000360350 00000 n
0000367010 00000 n
0000374288 00000 n
0000382105 00000 n
0000390283 00000 n
0000397661 00000 n
0000403605 00000 n
0000411398 00000 n
0000417852 00000 n
0000429943 00000 n
0000437999 00000 n
0000443785 00000 n
0000450094 00000 n
0000456686 00000 n
0000462772 00000 n
0000470712 00000 n
0000478302 00000 n
0000485614 00000 n
0000494204 00000 n
0000500574 00000 n
0000506487 00000 n
0000513443 00000 n
0000519110 00000 n
0000526326 00000 n
0000533002 00000 n
0000539398 00000 n
0000546382 00000 n
0000552971 00000 n
0000558408 00000 n
0000564797 00000 n
0000571132 00000 n
0000577140 00000 n
0000583174 00000 n
0000588553 00000 n
0000594287 00000 n
0000600710 00000 n
0000606953 00000 n
0000612543 00000 n
0000618502 00000 n
0000624723 00000 n
0000629869 00000 n
0000635735 00000 n
0000640747 00000 n
0000646894 00000 n
0000653487 00000 n
0000660070 00000 n
0000667545 00000 n
0000674997 00000 n
0000682737 00000 n
0000689780 00000 n
0000695886 00000 n
0000702115 00000 n
0000709280 00000 n
0000716304 00000 n
0000724944 00000 n
0000731648 00000 n
0000738278 00000 n
0000745371 00000 n
0000752658 00000 n
0000761289 00000 n
0000767519 00000 n
0000774117 00000 n
0000779895 00000 n
0000785794 00000 n
0000791176 00000 n
0000796206 00000 n
0000801555 00000 n
0000807038 00000 n
0000812948 00000 n
0000819448 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com) 
 [("\260\275\017\312\002V.v\313_9S\200\357\231) ("\260\275\017\312\002V.v\313_9S\200\357\231)] 

 /Info 150 0 R
 /Root 149 0 R
 /Size 387 >>
startxref
820326
%%EOF
